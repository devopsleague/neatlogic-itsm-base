<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="neatlogic.framework.process.dao.mapper.ProcessCommentTemplateMapper">

	<select id="checkTemplateExistsById" parameterType="java.lang.Long" resultType="int">
		select
		count(1)
		from `process_comment_template`
		where `id` = #{value}
	</select>

	<resultMap id="templateMap" type="neatlogic.framework.process.dto.ProcessCommentTemplateVo">
		<id column="id" property="id" />
		<result column="name" property="name" />
		<result column="content" property="content" />
		<result column="type" property="type" />
		<result column="fcu" property="fcu" />
		<result column="fcd" property="fcd" />
		<result column="lcu" property="lcu" />
		<result column="lcd" property="lcd" />
		<collection property="authVoList" ofType="neatlogic.framework.process.dto.ProcessCommentTemplateAuthVo">
			<result column="uuid" property="uuid" />
			<result column="authType" property="type" />
		</collection>
	</resultMap>

	<select id="getTemplateById" parameterType="java.lang.Long" resultMap="templateMap">
		select
		a.`id`,
		a.`name`,
		a.`content`,
		a.`type`,
		a.`fcu`,
		a.`fcd`,
		a.`lcu`,
		a.`lcd`,
		b.`uuid`,
		b.`type` as `authType`
		from `process_comment_template` a
		left join `process_comment_template_authority` b
		on a.`id` = b.`comment_template_id`
		where `id` = #{value}
	</select>

	<select id="getTemplateByStepUuidAndAuth" resultType="neatlogic.framework.process.dto.ProcessCommentTemplateVo" useCache="false">
		SELECT
		DISTINCT
		a.`id`,
		a.`name`,
		a.`content`
		FROM `process_comment_template` a
		JOIN `process_step_comment_template` b ON a.`id` = b.`comment_template_id`
		JOIN `process_comment_template_authority` c ON a.id = c.`comment_template_id`
		WHERE
		b.`process_step_uuid` = #{stepUuid}
		AND c.`uuid` IN
		<foreach collection="authList" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>

	<select id="getTemplateUseCount" resultType="neatlogic.framework.process.dto.ProcessCommentTemplateUseCountVo" useCache="false">
		SELECT
		`comment_template_id` as commentTemplateId,
		`user_uuid` as userUuid,
		`count`
		FROM `process_comment_template_usecount`
		WHERE
		`comment_template_id` = #{templateId}
		and `user_uuid` = #{userUuid}
		for update
	</select>

	<select id="checkTemplateNameIsRepeat" resultType="java.lang.Integer">
		SELECT count(id)
		FROM `process_comment_template`
		where id != #{id}
		  and name =#{name}
	</select>

	<sql id="searchCommentTemplateWhere">
		SELECT
		distinct a.`id`
		FROM `process_comment_template` a
		JOIN `process_comment_template_authority` b ON b.`comment_template_id` = a.`id`
		WHERE ((a.`type` = 'custom' AND b.`uuid` = #{userUuid})
		OR (a.`type` = 'system'
		<if test="isHasModifyAuthority == 0 and uuidList != null and uuidList.size() > 0">
			AND b.`uuid` IN
			<foreach collection="uuidList" item="uuid" open="(" separator="," close=")">
				#{uuid}
			</foreach>
		</if>
		))
		<if test="keyword != null and keyword != ''">
			AND (a.`name` LIKE concat('%', #{keyword}, '%') OR a.`content` LIKE concat('%', #{keyword}, '%'))
		</if>
		<if test="type != null and type != ''">
			AND a.`type` = #{type}
		</if>
	</sql>
	<select id="searchCommentTemplateCount" parameterType="neatlogic.framework.process.dto.ProcessCommentTemplateSearchVo" resultType="int">
		SELECT
		COUNT(1)
		FROM (<include refid="searchCommentTemplateWhere"/>) c
	</select>

	<select id="searchCommentTemplateList" parameterType="neatlogic.framework.process.dto.ProcessCommentTemplateSearchVo" resultType="neatlogic.framework.process.dto.ProcessCommentTemplateVo">
		SELECT
		`id`,
		`name`,
		`content`,
		`type`,
		`fcd`,
		`fcu`,
		`lcd`,
		`lcu`
		FROM `process_comment_template`
		WHERE `id` IN (<include refid="searchCommentTemplateWhere"/>)
		ORDER BY `lcd` desc
		LIMIT #{startNum}, #{pageSize}
	</select>

	<select id="getProcessCommentTemplateAuthListByCommentTemplateIdList" parameterType="java.util.List" resultType="neatlogic.framework.process.dto.ProcessCommentTemplateAuthVo">
		SELECT
			`comment_template_id` AS commentTemplateId,
			`type`,
			`uuid`
		FROM `process_comment_template_authority`
		WHERE `comment_template_id` IN
		<foreach collection="list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
	</select>

	<update id="updateTemplate" parameterType="neatlogic.framework.process.dto.ProcessCommentTemplateVo">
		update
		`process_comment_template`
		set
		`name` = #{name},
		`type` = #{type},
		`content` = #{content},
		`lcu` = #{lcu},
		`lcd` = now(3)
		where `id` = #{id}
	</update>

	<update id="updateTemplateUseCount" parameterType="neatlogic.framework.process.dto.ProcessCommentTemplateVo">
		update `process_comment_template_usecount`
		set `count` = `count` + 1
		WHERE
		`comment_template_id` = #{templateId}
		and `user_uuid` = #{userUuid}
	</update>

	<insert id="insertTemplate" parameterType="neatlogic.framework.process.dto.ProcessCommentTemplateVo">
		insert into `process_comment_template`(
		`id`,
		`name`,
		`content`,
		`type`,
		`fcu`,
		`fcd`,
		`lcu`,
		`lcd`)
		values(
		#{id},
		#{name},
		#{content},
		#{type},
		#{fcu},
		now(3),
		#{fcu},
		now(3)
		)
	</insert>

	<insert id="batchInsertAuthority" parameterType="java.util.List">
		INSERT INTO `process_comment_template_authority`(
		`comment_template_id`,
		`type`,
		`uuid`
		)
		VALUES
		<foreach collection="list" index="index" item="item" separator=",">
			(
			#{item.commentTemplateId},
			#{item.type},
			#{item.uuid}
			)
		</foreach>
	</insert>

	<insert id="insertTemplateUseCount">
		INSERT INTO `process_comment_template_usecount`(
		  `comment_template_id`,
		  `user_uuid`,
		  `count`
		)
		VALUES
		(
		  #{templateId},
		  #{userUuid},
		  0
		)
	</insert>

	<delete id="deleteTemplate" parameterType="java.lang.Long">
		delete
		from `process_comment_template`
		where `id` = #{value}
	</delete>

	<delete id="deleteTemplateAuthority" parameterType="java.lang.Long">
		delete
		from `process_comment_template_authority`
		where `comment_template_id` = #{value}
	</delete>
</mapper>
