<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.framework.process.dao.mapper.event.EventTypeMapper">

	<resultMap id="eventTypeMap" type="codedriver.framework.process.dto.event.EventTypeVo">
		<id property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="parentId" column="parentId"/>
		<result property="lft" column="lft"/>
		<result property="rht" column="rht"/>
	</resultMap>

	<resultMap id="childrenEventTypeMap" type="codedriver.framework.process.dto.event.EventTypeVo">
		<id property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="parentId" column="parentId"/>
		<result property="lft" column="lft"/>
		<result property="rht" column="rht"/>
		<result property="childCount" column="childCount"/>
	</resultMap>

	<select id="checkEventTypeIsExists" parameterType="java.lang.Long" resultType="int">
		SELECT COUNT(`id`) FROM `event_type` WHERE `id` = #{id}
	</select>

	<select id="getEventTypeCountOnLock" resultType="int" useCache="false">
		SELECT count(1) FROM `event_type` FOR UPDATE
	</select>

	<select id="getMaxRhtCode" resultType="java.lang.Integer" useCache="false">
		SELECT MAX(`rht`) FROM `event_type`
	</select>

	<select id="searchEventTypeCount" parameterType="codedriver.framework.process.dto.event.EventTypeVo" resultType="int">
		SELECT
		COUNT(1)
		FROM
		`event_type`
		WHERE
		1=1
		<if test="keyword != null and keyword != ''">
			and name LIKE CONCAT('%', #{keyword}, '%')
		</if>
		<if test="parentId != null">
			and parent_id = #{parentId}
		</if>
	</select>

	<select id="searchEventType" parameterType="codedriver.framework.process.dto.event.EventTypeVo" resultMap="eventTypeMap">
		SELECT
		`id`,
		`name`,
		`lft`,
		`rht`,
		`parent_id` AS `parentId`
		FROM `event_type`
		where 1=1
		<if test="keyword != null and keyword != ''">
			and `name` LIKE CONCAT('%', #{keyword}, '%')
		</if>
		<if test="parentId != null">
			and `parent_id` = #{parentId}
		</if>
		ORDER BY `lft`
		<if test="needPage == true">
			LIMIT #{startNum}, #{pageSize}
		</if>
	</select>

	<select id="getAncestorsAndSelfByLftRht" resultMap="childrenEventTypeMap">
		SELECT
		a.`id`,
		a.`name`,
		a.`parent_id` AS parentId,
		a.`lft`,
		a.`rht`,
		0 as `childCount`
		FROM `event_type` a
		WHERE a.`lft` &lt;= #{lft} AND a.`rht` &gt;= #{rht}
		ORDER BY `lft` ASC
	</select>

	<select id="getEventTypeSolutionCountAndChildCountListByIdList" parameterType="java.util.List" resultType="codedriver.framework.process.dto.event.EventTypeVo">
		SELECT
		a.`id`,
		COUNT(DISTINCT b.`solution_id`) AS solutionCount,
		COUNT(DISTINCT c.`id`) AS childCount
		FROM `event_type` a
		LEFT JOIN `event_type_solution` b ON b.`event_type_id` = a.`id`
		LEFT JOIN `event_type` c ON c.`parent_id` = a.`id`
		WHERE a.`id` IN
		<foreach collection="list" item="eventTypeId" open="(" close=")" separator=",">
			#{eventTypeId}
		</foreach>
		GROUP BY a.`id`
	</select>

	<select id="checkLeftRightCodeIsWrong" resultType="int">
	SELECT COUNT(a.`id`) FROM (
		SELECT `id` FROM `event_type`  WHERE `lft` IS NULL OR `rht` IS NULL
		UNION
		SELECT `id` FROM `event_type`  WHERE `lft` &lt; 2 OR `rht` &lt; 3
		UNION
		SELECT parent.`id` FROM `event_type` parent
		JOIN `event_type` child ON child.`parent_id`=parent.`id` AND (child.`lft` &lt;= parent.`lft` OR child.`rht` &gt;= parent.`rht`)
		UNION
		SELECT parent.`id` FROM `event_type` parent
		LEFT JOIN `event_type` child ON child.`parent_id` = parent.`id`
		WHERE child.id IS NULL AND parent.`rht` - parent.`lft` != 1
	) a
	</select>

	<select id="getEventTypeById" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.event.EventTypeVo">
		SELECT
		a.`id`,
		a.`name`,
		(SELECT COUNT(1) FROM `event_type` WHERE `parent_id` = a.`id`) as `childCount`,
		a.`parent_id` as `parentId`,
		a.`lft`,
		a.`rht`
		FROM
		`event_type` a
		WHERE `id` = #{id}
	</select>

	<select id="getEventTypeByParentId" parameterType="java.lang.Long" resultMap="childrenEventTypeMap">
		SELECT
		a.`id`,
		a.`name`,
		a.`parent_id` AS parentId,
		a.`lft`,
		a.`rht`,
		(SELECT COUNT(1) FROM `event_type` WHERE `parent_id` = a.`id`) as `childCount`
		FROM `event_type` a
		WHERE a.`parent_id` = #{value}
		ORDER BY `lft` ASC
	</select>

	<select id="checkEventTypeIsExistsByLeftRightCode" resultType="int">
	SELECT COUNT(1) FROM `event_type` WHERE `id` = #{id} AND `lft` &gt; #{lft} AND `rht` &lt; #{rht}
	</select>

	<select id="getEventTypeByParentIdAndStartNum" resultType="codedriver.framework.process.dto.event.EventTypeVo">
	SELECT
		a.`id`,
		a.`name`,
		a.`parent_id` AS parentId,
		a.`lft`,
		a.`rht`
		FROM `event_type` a
		WHERE a.`parent_id` = #{parentId}
		ORDER BY a.`lft` ASC
		limit #{startNum}, 1
	</select>

	<select id="getChildrenByLeftRightCode" resultType="codedriver.framework.process.dto.event.EventTypeVo">
		SELECT
		a.`id`,
		a.`name`,
		a.`parent_id` AS parentId,
		a.`lft`,
		a.`rht`
		FROM `event_type` a
		WHERE a.`lft` &gt; #{lft} and a.`rht` &lt; #{rht}
	</select>

	<select id="getAuthorityByEventTypeId" resultType="codedriver.framework.dto.AuthorityVo" useCache="false">
		select
		`event_type_id`,
		`type`,
		`uuid`
		from event_type_authority
		where `event_type_id` = #{eventTypId}
	</select>

	<select id="checkAuthorityIsExists" resultType="codedriver.framework.dto.AuthorityVo" useCache="false">
		select
		b.`event_type_id`,
		b.`type`,
		b.`uuid`
		FROM `event_type` a
		LEFT JOIN `event_type_authority` b on a.`id` = b.`event_type_id`
		WHERE a.`lft` &gt; #{lft} AND a.`rht` &lt; #{rht}
		AND `type` = #{authorityVo.type}
		AND `uuid` = #{authorityVo.uuid}
	</select>

	<select id="getSolutionCountByEventTypeId" resultType="int" useCache="false">
		select
		count(s.`id`)
		from `event_solution` s
		left join `event_type_solution` ets on s.`id` = ets.`solution_id`
		where ets.`event_type_id` = #{eventTypId}
	</select>

	<select id="getSolutionList" parameterType="codedriver.framework.process.dto.event.EventTypeVo" resultType="codedriver.framework.process.dto.event.EventSolutionVo" useCache="false">
		select
		s.`id`,
		s.`name`
		from `event_solution` s
		left join `event_type_solution` ets on s.`id` = ets.`solution_id`
		where ets.`event_type_id` = #{id}
		<if test="needPage == true">
			LIMIT #{startNum}, #{pageSize}
		</if>
	</select>

	<update id="updateEventTypeNameById" parameterType="codedriver.framework.process.dto.event.EventTypeVo">
		UPDATE `event_type` SET
		`name` = #{name}
		WHERE `id` = #{id}
	</update>

	<update id="updateEventTypeParentIdById" parameterType="codedriver.framework.process.dto.event.EventTypeVo">
		UPDATE `event_type` SET `parent_id` = #{parentId} WHERE `id` = #{id}
	</update>

	<update id="batchUpdateEventTypeLeftRightCodeByLeftRightCode">
		UPDATE `event_type` SET `lft` = `lft` + #{step}, `rht` = `rht` + #{step} WHERE `lft` &gt;= #{lft} AND `rht` &lt;= #{rht}
	</update>

	<update id="updateEventTypeLeftRightCode">
	UPDATE `event_type` SET `lft` = #{lft}, `rht` = #{rht} WHERE `id` = #{id}
	</update>

	<update id="batchUpdateEventTypeLeftCode">
		UPDATE `event_type` set `lft` = `lft` + #{step} WHERE `lft` &gt;= #{minCode}
	</update>

	<update id="batchUpdateEventTypeRightCode">
		UPDATE `event_type` set `rht` = `rht` + #{step} WHERE `rht` &gt;= #{minCode}
	</update>

	<insert id="insertEventType" parameterType="codedriver.framework.process.dto.event.EventTypeVo">
		INSERT INTO `event_type` (
		`id`,
		`name`,
		`parent_id`,
		`lft`,
		`rht`
		) VALUES (
		#{id},
		#{name},
		#{parentId},
		#{lft},
		#{rht}
		)
	</insert>

	<insert id="insertEventTypeAuthority">
		INSERT INTO `event_type_authority` (
		`event_type_id`,
		`type`,
		`uuid`
		)
		VALUES
		(
		#{eventTypeId},
		#{authorityVo.type},
		#{authorityVo.uuid}
		)
	</insert>

	<delete id="deleteEventTypeByLeftRightCode">
		DELETE a,b
		FROM `event_type` a
		LEFT JOIN `event_type_authority` b on a.`id` = b.`event_type_id`
		WHERE a.`lft` &gt;= #{lft} AND a.`rht` &lt;= #{rht}
	</delete>

	<delete id="deleteAuthorityByEventTypeId">
		DELETE
		FROM `event_type_authority`
		WHERE `event_type_id` = #{eventTypeId}
	</delete>


</mapper>
