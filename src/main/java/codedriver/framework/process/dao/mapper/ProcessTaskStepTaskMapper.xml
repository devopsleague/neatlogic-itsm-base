<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c)  2021 TechSure Co.,Ltd.  All Rights Reserved.
  ~ 本内容仅限于深圳市赞悦科技有限公司内部传阅，禁止外泄以及用于其他的商业项目。
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.framework.process.dao.mapper.ProcessTaskStepTaskMapper">

    <select id="getInvokedCountByTaskConfigId" resultType="java.lang.Integer">
        SELECT COUNT(1)
        from `processtask_step_task`
        where `task_config_id` = #{value}
    </select>

    <resultMap id="stepTaskMap" type="codedriver.framework.process.dto.ProcessTaskStepTaskVo">
        <id column="id" property="id"/>
        <result column="processTaskId" property="processTaskId"/>
        <result column="processTaskStepId" property="processTaskStepId"/>
        <result column="status" property="status"/>
        <result column="createTime" property="createTime"/>
        <result column="content" property="content"/>
        <result column="endTime" property="endTime"/>
        <association property="ownerVo" javaType="codedriver.framework.dto.UserVo">
            <result property="uuid" column="lcuUuid"/>
            <result property="userName" column="lcuName"/>
            <result property="pinyin" column="lcuPinyin"/>
            <result property="vipLevel" column="lcuVipLevel"/>
            <result property="userInfo" column="lcuInfo"/>
        </association>
    </resultMap>

    <select id="getStepTaskDetailById" resultMap="stepTaskMap">
        SELECT pst.`processtask_id`      as processTaskId,
               pst.`processtask_step_id` as processTaskStepId,
               pst.`id`,
               pst.`owner`,
               pst.`status`,
               pst.`create_time`         as createTime,
               pst.`end_time`            as endTime,
               pst.`task_config_id`      as taskConfigId,
               pc.content
        FROM `processtask_step_task` pst
                 LEFT JOIN `task_config` tc on pst.`task_config_id` = tc.id
                 LEFT JOIN `processtask_content` pc on pst.`content_hash` = pc.hash
        WHERE pst.id = #{value}
    </select>

    <select id="getStepTaskById" resultType="codedriver.framework.process.dto.ProcessTaskStepTaskVo">
        SELECT pst.`processtask_id`      as processTaskId,
               pst.`processtask_step_id` as processTaskStepId,
               pst.`id`,
               pst.`owner`,
               pst.`status`,
               pst.`create_time`         as createTime,
               pst.`end_time`            as endTime,
               pst.`task_config_id`      as taskConfigId
        FROM `processtask_step_task` pst
        WHERE pst.id = #{value}
    </select>
    <select id="getStepTaskUserByTaskIdAndTaskUserIdAndUserUuid"
            resultType="codedriver.framework.process.dto.ProcessTaskStepTaskUserVo">
        SELECT `id`,
               `processtask_step_task_id` as processTaskStepTaskId,
               `user_uuid`                as userUuid,
               `end_time`                 as endTime,
               `status`,
               `is_delete`                as isDelete
        FROM `processtask_step_task_user`
        where `processtask_step_task_id` = #{processTaskStepTaskId}
          and `user_uuid` = #{userUuid}
          and `id` = #{processTaskStepTaskUserId}
    </select>

    <select id="getStepTaskByProcessTaskStepId"
            resultType="codedriver.framework.process.dto.ProcessTaskStepTaskVo">
        SELECT pst.`processtask_id`      as processTaskId,
               pst.`processtask_step_id` as processTaskStepId,
               pst.`id`,
               pst.`owner`,
               pst.`status`,
               pst.`create_time`         as createTime,
               pst.`end_time`            as endTime,
               pst.`task_config_id`      as taskConfigId,
               pc.`content`,
               tc.`policy`               as taskConfigPolicy,
               tc.`name`                 as taskConfigName
        FROM `processtask_step_task` pst
                 left join `task_config` tc on pst.`task_config_id` = tc.`id`
                 left join `processtask_content` pc on pst.`content_hash` = pc.hash
        WHERE pst.`processtask_step_id` = #{value}
    </select>

    <resultMap id="stepTaskUserMap" type="codedriver.framework.process.dto.ProcessTaskStepTaskUserVo">
        <id column="id" property="id"/>
        <result column="processTaskStepTaskId" property="processTaskStepTaskId"/>
        <result column="userUuid" property="userUuid"/>
        <result column="endTime" property="endTime"/>
        <result column="status" property="status"/>
        <result column="isDelete" property="isDelete"/>
        <association property="userVo" javaType="codedriver.framework.dto.UserVo">
            <result property="uuid" column="userUuid"/>
            <result property="userName" column="userName"/>
            <result property="userInfo" column="userInfo"/>
            <result property="vipLevel" column="userVipLevel"/>
            <result property="pinyin" column="userPinyin"/>
        </association>
    </resultMap>

    <select id="getStepTaskUserByStepTaskIdList" resultMap="stepTaskUserMap">
        SELECT pstu.`id`,
        pstu.`processtask_step_task_id` as processTaskStepTaskId,
        pstu.`user_uuid` as userUuid,
        u.pinyin as pinyin,
        u.user_info as userInfo,
        u.vip_level as userLevel,
        u.user_name as userName,
        pstu.`end_time` as endTime,
        pstu.`status`,
        pstu.`is_delete` as isDelete
        FROM `processtask_step_task_user` pstu
        left join `user` u on pstu.`user_uuid` = u.uuid
        where pstu.`processtask_step_task_id` in
        <foreach collection="stepTaskIdList" item="stepTaskId" open="(" separator="," close=")">
            #{stepTaskId}
        </foreach>
    </select>

    <resultMap id="stepTaskUserContentMap" type="codedriver.framework.process.dto.ProcessTaskStepTaskUserContentVo">
        <id column="id" property="id"/>
        <result column="processTaskStepTaskId" property="processTaskStepTaskId"/>
        <result column="processTaskStepTaskUserId" property="processTaskStepTaskUserId"/>
        <result column="userUuid" property="userUuid"/>
        <result column="contentHash" property="contentHash"/>
        <result column="content" property="content"/>
        <result column="fcd" property="fcd"/>
        <association property="userVo" javaType="codedriver.framework.dto.UserVo">
            <result property="uuid" column="userUuid"/>
            <result property="userName" column="userName"/>
            <result property="userInfo" column="userInfo"/>
            <result property="vipLevel" column="userVipLevel"/>
            <result property="pinyin" column="userPinyin"/>
        </association>
    </resultMap>

    <select id="getStepTaskUserContentByStepTaskUserIdList" resultMap="stepTaskUserContentMap">
        SELECT
        pstuc.`id`,
        pstuc.`processtask_step_task_id` as processTaskStepTaskId,
        pstuc.`processtask_step_task_user_id` as processTaskStepTaskUserId,
        pstuc.`user_uuid` as userUuid,
        u.pinyin as pinyin,
        u.user_info as userInfo,
        u.vip_level as userLevel,
        u.user_name as userName,
        pstuc.`content_hash` as contentHash,
        pc.content,
        pstuc.`fcd`
        FROM
        `processtask_step_task_user_content` pstuc
        left join `processtask_content` pc on pstuc.`content_hash` = pc.hash
        left join `user` u on pstuc.`user_uuid` = u.uuid
        where pstuc.`processtask_step_task_user_id` in
        <foreach collection="stepTaskUserIdList" item="stepTaskUserId" open="(" separator="," close=")">
            #{stepTaskUserId}
        </foreach>
    </select>
    <select id="getPendingStepTaskUserListByTaskId"
            resultType="codedriver.framework.process.dto.ProcessTaskStepTaskUserVo">
        SELECT `id`,
               `processtask_step_task_id` as processTaskStepTaskId,
               `user_uuid`                as userUuid,
               `end_time`                 as endTime,
               `status`,
               `is_delete`                as isDelete
        FROM `processtask_step_task_user`
        where `processtask_step_task_id` = #{processTaskStepTaskId}
          and `status` = 'pending'
    </select>

    <select id="getStepTaskUserContentById"
            resultType="codedriver.framework.process.dto.ProcessTaskStepTaskUserContentVo">
        SELECT pstuc.`id`,
               pstuc.`processtask_step_task_id`      as processTaskStepTaskId,
               pstuc.`processtask_step_task_user_id` as processTaskStepTaskUserId,
               pstuc.`user_uuid`                     as userUuid,
               pstuc.`fcd`
        FROM `processtask_step_task_user_content` pstuc
        where pstuc.`id` = #{value}
    </select>

    <insert id="insertTask">
        INSERT INTO `processtask_step_task` (`processtask_id`,
                                             `processtask_step_id`,
                                             `id`,
                                             `owner`,
                                             `status`,
                                             `create_time`,
                                             `content_hash`,
                                             `task_config_id`)
        VALUES (#{processTaskId},
                #{processTaskStepId},
                #{id},
                #{ownerVo.uuid},
                #{status},
                now(3),
                #{contentHash},
                #{taskConfigId})
    </insert>

    <insert id="insertIgnoreTaskUser">
        INSERT IGNORE INTO `processtask_step_task_user` (`id`,
                                                         `processtask_step_task_id`,
                                                         `user_uuid`,
                                                         `status`)
        VALUES (#{id},
                #{processtaskStepTaskId},
                #{userUuid},
                #{status});

    </insert>

    <insert id="insertTaskUserContent">
        INSERT INTO `processtask_step_task_user_content` (`id`,
                                                          `processtask_step_task_id`,
                                                          `processtask_step_task_user_id`,
                                                          `user_uuid`,
                                                          `content_hash`,
                                                          `fcd`)
        VALUES (#{id},
                #{processTaskStepTaskId},
                #{processTaskStepTaskUserId},
                #{userUuid},
                #{contentHash},
                now(3))
    </insert>

    <update id="updateTask">
        UPDATE
            `processtask_step_task`
        SET `owner`        = 'owner',
            `content_hash` = 'content_hash'
        WHERE `id` = #{id};
    </update>

    <update id="updateTaskUserByTaskIdAndUserUuid">
        UPDATE
            `processtask_step_task_user`
        SET `end_time` = now(3),
            `status`   = #{status}
        WHERE `processtask_step_task_id` = #{processtaskStepTaskId}
          and `user_uuid` = #{userUuid}
    </update>

    <update id="updateTaskUserContent">
        update `processtask_step_task_user_content`
        set `content_hash` = #{contentHash},
            `lcd`          = now(3)
        where `id` = #{processTaskStepTaskUserContentId}
          and `user_uuid` = #{userUuid}
    </update>

    <delete id="updateDeleteTaskUserByUserListAndId">
        UPDATE `processtask_step_task_user`
        SET
        `is_delete` = #{isDelete}
        WHERE `user_uuid`
        <if test="isDelete == 1">
            not
        </if>
        in
        <foreach collection="userList" item="userUuid" open="(" close=")" separator=",">
            #{userUuid}
        </foreach>
        and `processtask_step_task_id` = #{processTaskStepTaskId}
    </delete>

    <delete id="deleteTaskById">
        DELETE
        FROM `processtask_step_task`
        WHERE `id` = #{value};
    </delete>

    <delete id="deleteTaskUserByTaskId">
        DELETE
        FROM `processtask_step_task_user`
        WHERE `processtask_step_task_id` = #{value};
    </delete>

    <delete id="deleteTaskUserContentByTaskId">
        DELETE
        FROM `processtask_step_task_user_content`
        WHERE `processtask_step_task_id` = #{value};
    </delete>

</mapper>
