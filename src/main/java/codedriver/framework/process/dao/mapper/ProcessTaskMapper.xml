<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.framework.process.dao.mapper.ProcessTaskMapper">

	<select id="getAllProcessTaskSlaTransfer" resultType="codedriver.framework.process.dto.ProcessTaskSlaTransferVo">
		SELECT
		`id`,
		`sla_id` AS slaId,
		`hash`,
		`trigger_time` as triggerTime,
		`config`
		FROM
		`processtask_sla_transfer`
	</select>

	<select id="getProcessTaskSlaTransferById" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskSlaTransferVo">
		SELECT
		`id`,
		`sla_id` AS slaId,
		`hash`,
		`trigger_time` as triggerTime,
		`config`
		FROM
		`processtask_sla_transfer`
		WHERE
		id = #{value}
	</select>

	<select id="getAllProcessTaskSlaNotify" resultType="codedriver.framework.process.dto.ProcessTaskSlaNotifyVo">
		SELECT
		id,
		`sla_id` AS slaId,
		`hash`,
		`trigger_time` as triggerTime,
		`config`
		FROM
		`processtask_sla_notify`
	</select>

	<select id="getProcessTaskSlaById" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskSlaVo">
		SELECT
		`processtask_id` AS processTaskId,
		`id`,
		`name`,
		`config`
		FROM
		`processtask_sla`
		WHERE
		id = #{value}
	</select>

	<select id="getProcessTaskNotifyById" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskSlaNotifyVo">
		SELECT
		id,
		`sla_id` AS slaId,
		`hash`,
		`trigger_time` as triggerTime,
		`config`
		FROM
		`processtask_sla_notify`
		WHERE
		id = #{value}
	</select>

	<select id="getProcessTaskStepRelByProcessTaskId" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskStepRelVo">
		SELECT
		`processtask_id` AS processTaskId,
		`from_process_step_uuid` AS fromProcessStepUuid,
		`to_process_step_uuid` AS toProcessStepUuid,
		`from_processtask_step_id` AS fromProcessTaskStepId,
		`to_processtask_step_id` AS toProcessTaskStepId,
		(SELECT xx.`handler` FROM `processtask_step` xx WHERE xx.id = `to_processtask_step_id`) AS toProcessStepHandler,
		`condition`,
		`uuid` as processStepRelUuid,
		`is_hit` AS isHit,
		`name`,
		`type`
		FROM
		`processtask_step_rel`
		WHERE processtask_id = #{value}
	</select>

	<select id="getProcessTaskConfigByHash" parameterType="java.lang.String" resultType="codedriver.framework.process.dto.ProcessTaskConfigVo">
		SELECT
		`hash`,
		`config`
		FROM
		`processtask_config`
		WHERE
		`hash` = #{value}
	</select>

	<resultMap id="processTaskSlaMap" type="codedriver.framework.process.dto.ProcessTaskSlaVo">
		<id column="id" property="id" />
		<result column="processTaskId" property="processTaskId" />
		<result column="name" property="name" />
		<result column="config" property="config" />
		<association property="slaTimeVo" javaType="codedriver.framework.process.dto.ProcessTaskSlaTimeVo">
			<result column="expireTime" property="expireTime" />
			<result column="realExpireTime" property="realExpireTime" />
			<result column="timeLeft" property="timeLeft" />
			<result column="realTimeLeft" property="realTimeLeft" />
			<result column="timeSum" property="timeSum" />
		</association>
	</resultMap>

	<select id="getProcessTaskSlaByProcessTaskStepId" parameterType="java.lang.Long" resultMap="processTaskSlaMap">
		SELECT
		a.`processtask_id` as processTaskId,
		a.`id`,
		a.`name`,
		a.`config`,
		c.`expire_time` as expireTime,
		c.`realexpire_time` AS realExpireTime,
		c.`time_left` as timeLeft,
		c.`realtime_left` as realTimeLeft,
		c.`time_sum` as timeSum
		FROM `processtask_sla` a
		JOIN `processtask_step_sla` b ON a.`id` = b.`sla_id`
		LEFT JOIN `processtask_sla_time` c ON a.`id` = c.`sla_id`
		WHERE b.`processtask_step_id` = #{value}
		ORDER BY c.`expire_time` ASC
	</select>

	<resultMap type="codedriver.framework.process.dto.ProcessTaskSlaTimeVo" id="processTaskSlaTimeMap">
		<id column="sla_id" property="slaId" />
		<result column="processTaskId" property="processTaskId" />
		<result column="processTaskStepId" property="processTaskStepId" />
		<result column="name" property="name" />
		<result column="expireTime" property="expireTime" />
		<result column="realExpireTime" property="realExpireTime" />
		<result column="timeLeft" property="timeLeft" />
		<result column="realTimeLeft" property="realTimeLeft" />
		<result column="timeSum" property="timeSum" />
	</resultMap>
	<select id="getProcessTaskSlaTimeByProcessTaskStepIdList" parameterType="java.util.List" resultMap="processTaskSlaTimeMap">
		SELECT
		a.`processtask_id` as processTaskId,
		a.`name`,
		b.`processtask_step_id` as processTaskStepId,
		c.`sla_id`,
		c.`expire_time` as expireTime,
		c.`realexpire_time` AS realExpireTime,
		c.`time_left` as timeLeft,
		c.`realtime_left` as realTimeLeft,
		c.`time_sum` as timeSum
		FROM `processtask_sla` a
		JOIN `processtask_step_sla` b ON a.`id` = b.`sla_id`
		JOIN `processtask_sla_time` c ON a.`id` = c.`sla_id`
		WHERE b.`processtask_step_id` in
		<foreach collection="list" item="stepId" open="(" separator="," close=")">
		 #{stepId}
		 </foreach>
		ORDER BY b.`processtask_step_id`, c.`expire_time` ASC
	</select>
	
	<select id="getProcessTaskSlaTimeBySlaId" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskSlaTimeVo">
		SELECT
		`sla_id` as slaId,
		`expire_time` AS expireTime,
		`realexpire_time` AS realExpireTime,
		`time_left` as timeLeft,
		`realtime_left` as realTimeLeft,
		`time_sum` as timeSum
		FROM `processtask_sla_time`
		WHERE sla_id = #{value}
	</select>

	<select id="getProcessTaskStepAuditDetail" resultType="codedriver.framework.process.dto.ProcessTaskStepAuditDetailVo">
		SELECT
		b.`audit_id` AS auditId,
		b.`old_content` AS oldContent,
		b.`new_content` AS newContent,
		b.`type` AS `type`
		FROM
		`processtask_step_audit` a JOIN `processtask_step_audit_detail` b ON a.`id` = b.`audit_id` AND b.`type` = #{type}
		WHERE a.`processtask_id` = #{processTaskId}
		ORDER BY auditId DESC
		LIMIT 1
	</select>

	<select id="getProcessTaskBaseInfoById" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskVo">
		SELECT
		`id`,
		`title`,
		`process_uuid` AS processUuid,
		`channel_uuid` AS channelUuid,
		`config_hash` AS configHash,
		`priority_uuid` AS priorityUuid,
		`status`,
		`start_time` AS startTime,
		`end_time` AS endTime,
		`owner`,
		(SELECT user_name FROM `user` x WHERE x.uuid = `owner`) AS ownerName,
		`reporter`,
		(SELECT user_name FROM `user` x WHERE x.uuid = `reporter`) AS reporterName,
		`expire_time` AS expireTime,
		`worktime_uuid` AS worktimeUuid,
		`error`
		FROM
		`processtask`
		WHERE
		id = #{value}
	</select>

	<select id="getProcessTaskStepConfigByHash" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT
		`config`
		FROM
		`processtask_step_config`
		WHERE `hash` = #{value}
	</select>

	<select id="getProcessTaskFormByProcessTaskId" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskFormVo">
		SELECT
		a.`processtask_id` as processTaskId,
		a.`form_uuid` as formUuid,
		a.`form_name` as formName,
		a.`form_content_hash` as formContentHash,
		b.`content` as formContent
		FROM
		`processtask_form` a JOIN `processtask_form_content` b ON a.`form_content_hash` = b.`hash`
		WHERE
		`processtask_id` = #{value}
	</select>

	<select id="getProcessTaskStepFormAttributeDataByProcessTaskId" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskFormAttributeDataVo">
		SELECT
		`processtask_id` AS processTaskId,
		`attribute_uuid` AS attributeUuid,
		`type` AS type,
		`data`,
		`sort`
		FROM
		`processtask_formattribute_data`
		WHERE `processtask_id` = #{value}
	</select>

	<select id="getProcessTaskContentByHash" parameterType="java.lang.String" resultType="codedriver.framework.process.dto.ProcessTaskContentVo">
		SELECT
		`hash`,
		`content`
		FROM
		`processtask_content`
		WHERE
		`hash` = #{value}
	</select>

	<select id="getProcessTaskStepContentProcessTaskStepId" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskStepContentVo">
		SELECT
		`id`,
		`processtask_step_id` AS processTaskStepId,
		`content_hash` AS contentHash,
		`fcd`,
		`fcu`,
		`lcd`,
		`lcu`
		FROM
		`processtask_step_content`
		WHERE
		processtask_step_id = #{value}
		ORDER BY id DESC
	</select>
	
	<select id="getProcessTaskStepContentProcessTaskId" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskStepContentVo">
		SELECT
		`id`,
		`processtask_step_id` AS processTaskStepId,
		`content_hash` AS contentHash,
		`fcd`,
		`fcu`,
		`lcd`,
		`lcu`
		FROM
		`processtask_step_content`
		WHERE
		processtask_id = #{value}
		ORDER BY id
	</select>

	<select id="getProcessTaskStepUserByStepId" resultType="codedriver.framework.process.dto.ProcessTaskStepUserVo">
		SELECT
		`processtask_id` as processTaskId,
		`processtask_step_id` as processTaskStepId,
		`user_uuid` as userUuid,
		`user_type` as userType,
		`user_name` as userName,
		`status` as status,
		`action`,
		`start_time` AS startTime,
		`end_time` AS endTime,
		`active_time` AS activeTime
		FROM
		`processtask_step_user`
		WHERE
		processtask_step_id = #{processTaskStepId}
		<if test="userType != null and userType != ''">
			and user_type = #{userType}
		</if>
	</select>

	<select id="searchProcessTaskStep" parameterType="codedriver.framework.process.dto.ProcessTaskStepVo" resultType="codedriver.framework.process.dto.ProcessTaskStepVo">
		SELECT
		`id`,
		`processtask_id` AS processTaskId,
		`name`,
		`process_step_uuid` AS processStepUuid,
		`status`,
		`result`,
		`type`,
		`handler`,
		`is_active` AS isActive,
		a.`start_time` AS startTime,
		a.`end_time` AS endTime,
		a.`expire_time` AS endTime,
		`error`
		FROM
		`processtask_step` a
		WHERE
		1=1
		<if test="processStepUuid != null and processStepUuid != ''">
			AND `process_step_uuid` = #{processStepUuid}
		</if>
		<if test="needPage == true">
			LIMIT #{startNum}, #{pageSize}
		</if>
	</select>

	<select id="getProcessTaskStepTimeoutPolicyByProcessTaskStepId" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskStepTimeoutPolicyVo">
		SELECT
		`processtask_id` as processTaskId,
		`processtask_step_id` as processTaskStepId,
		`process_step_uuid` as processStepUuid,
		`policy`,
		`sort`,
		`time`,
		`config`
		FROM
		`processtask_step_timeout_policy`
		WHERE
		`processtask_step_id` = #{value}
		ORDER BY `sort`
	</select>

	<select id="getProcessTaskStepWorkerPolicy" parameterType="codedriver.framework.process.dto.ProcessTaskStepWorkerPolicyVo" resultType="codedriver.framework.process.dto.ProcessTaskStepWorkerPolicyVo">
		SELECT
		`processtask_id` as processTaskId,
		`processtask_step_id` as processTaskStepId,
		`process_step_uuid` as processStepUuid,
		`policy`,
		`sort`,
		`config`
		FROM `processtask_step_worker_policy`
		<where>
			<if test="processTaskId != null">
			AND `processtask_id` = #{processTaskId}
			</if>
			<if test="processTaskStepId != null">
			AND `processtask_step_id` = #{processTaskStepId}
			</if>
		</where> 
		ORDER BY `sort`
	</select>

	<select id="getProcessTaskStepWorkerByProcessTaskStepId" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskStepWorkerVo">
		SELECT
		ptsw.`processtask_id` AS processTaskId,
		ptsw.`processtask_step_id` AS processTaskStepId,
		ptsw.`type`,
		ptsw.`uuid`,
		CASE `type` 
		WHEN 'user' THEN (SELECT u.`user_name` FROM `user` u WHERE u.`uuid` = ptsw.`uuid`) 
		WHEN 'team' THEN (SELECT t.`name` FROM `team` t WHERE t.`uuid` = ptsw.`uuid`) 
		WHEN 'role' THEN (SELECT r.`name` FROM `role` r WHERE r.`uuid` = ptsw.`uuid`) 
		ELSE NULL END AS `name`,
		ptsw.`user_type` AS userType
		FROM `processtask_step_worker` ptsw
		WHERE ptsw.processtask_step_id = #{value}
	</select>

	<select id="getFromProcessTaskStepByToId" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskStepVo">
		SELECT
		a.`id`,
		a.`process_step_uuid` AS processStepUuid,
		a.`processtask_id` AS processTaskId,
		a.`status`,
		a.`start_time` AS startTime,
		a.`end_time` AS endTime,
		a.`is_active` AS isActive,
		a.`type`,
		a.`handler`,
		a.`name`
		FROM
		processtask_step a
		JOIN
		processtask_step_rel b ON a.id = b.from_processtask_step_id and b.is_hit = 1
		WHERE
		to_processtask_step_id = #{value}
	</select>

	<select id="getProcessTaskStepByConvergeId" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskStepVo">
		SELECT
		b.`id`,
		b.`status`,
		b.`name`,
		b.`type`,
		b.`handler`,
		b.`is_active` AS isActive,
		a.`is_check` AS isCheck
		FROM
		`processtask_converge` a JOIN
		`processtask_step` b ON a.`processtask_step_id` = b.`id`
		WHERE
		a.`converge_id` = #{value}
	</select>

	<select id="getProcessTaskStepIdByConvergeId" parameterType="java.lang.Long" resultType="java.lang.Long">
		SELECT
		a.`processtask_step_id`
		FROM
		`processtask_converge` a
		WHERE
		a.`converge_id` = #{value}
	</select>

	<select id="getProcessTaskLockById" parameterType="java.lang.Long" resultType="java.lang.Long">
		SELECT id FROM processtask WHERE id = #{value} FOR UPDATE
	</select>

	<select id="getToProcessTaskStepByFromIdAndType" resultType="codedriver.framework.process.dto.ProcessTaskStepVo">
		SELECT
		a.`id`,
		a.`processtask_id` AS processTaskId,
		a.`name`,
		a.`process_step_uuid` AS processStepUuid,
		a.`status`,
		a.`result`,
		a.`type`,
		a.`handler`,
		a.`is_active` AS isActive,
		a.`start_time` AS startTime,
		a.`end_time` AS endTime,
		a.`error`,
		b.`name` AS aliasName,
		b.`type` AS flowDirection
		FROM
		`processtask_step` a JOIN `processtask_step_rel` b ON a.`id` = b.`to_processtask_step_id`
		WHERE
		b.`from_processtask_step_id` = #{fromProcessTaskStepId}
		<if test="type != null and type != ''">
			and b.`type` = #{type}
		</if>
	</select>

	<select id="checkProcessTaskConvergeIsExists" parameterType="codedriver.framework.process.dto.ProcessTaskConvergeVo" resultType="int">
		SELECT
		COUNT(1)
		FROM
		`processtask_converge`
		WHERE
		processtask_id =
		#{processTaskId}
		AND
		converge_id = #{convergeId}
		AND
		processtask_step_id = #{processTaskStepId}
	</select>

	<select id="getProcessTaskStepByProcessTaskIdAndType" resultType="codedriver.framework.process.dto.ProcessTaskStepVo">
		SELECT
		`id`,
		`processtask_id` AS processTaskId,
		`name`,
		`process_step_uuid` AS processStepUuid,
		`status`,
		`result`,
		`type`,
		`handler`,
		`is_active` AS isActive,
		`config_hash` AS configHash,
		`start_time` AS startTime,
		`end_time` AS endTime,
		`error`
		FROM
		`processtask_step`
		WHERE `processtask_id` = #{processTaskId}
		AND
		`type` = #{type}
	</select>
	
	<resultMap id="processTaskStepDetailMap" type="codedriver.framework.process.dto.ProcessTaskStepVo">
		<id column="id" property="id" />
		<result column="processTaskId" property="processTaskId" />
		<result column="name" property="name" />
		<result column="processStepUuid" property="processStepUuid" />
		<result column="status" property="status" />
		<result column="result" property="result" />
		<result column="type" property="type" />
		<result column="handler" property="handler" />
		<result column="isActive" property="isActive" />
		<result column="startTime" property="startTime" />
		<result column="endTime" property="endTime" />
		<result column="error" property="error" />
		<collection property="workerList" ofType="codedriver.framework.process.dto.ProcessTaskStepWorkerVo">
			<result column="workerType" property="type" />
			<result column="uuid" property="uuid" />
		</collection>
		<collection property="userList" ofType="codedriver.framework.process.dto.ProcessTaskStepUserVo">
			<result column="userType" property="userType" />
			<result column="user_uuid" property="userUuid" />
		</collection>
	</resultMap>
	
	<select id="getProcessTaskActiveStepByProcessTaskIdAndProcessStepType" parameterType="java.lang.Long" resultMap="processTaskStepDetailMap">
		SELECT 
		ps.`id`,
		ps.`processtask_id` AS processTaskId,
		ps.`name`,
		ps.`process_step_uuid` AS processStepUuid,
		ps.`status`,
		ps.`result`,
		ps.`type`,
		ps.`handler`,
		ps.`start_time` AS startTime,
		ps.`end_time` AS endTime,
		ps.`error`,
		ps.`is_active` AS isActive,
		psw.`type` as workerType,
		psw.`uuid`,
		psu.`user_uuid`,
		psu.`user_type` AS userType
		FROM `processtask_step` ps 
		LEFT JOIN `processtask_step_worker` psw ON ps.`processtask_id` = psw.`processtask_id` AND ps.`id` = psw.`processtask_step_id`
		LEFT JOIN `processtask_step_user` psu ON ps.`processtask_id` = psu.`processtask_id` AND ps.`id` = psu.`processtask_step_id`
		WHERE ps.`processtask_id` = #{processTaskId} 
		<if test="processStepTypeList != null and processStepTypeList.size()>0">
			AND ps.`type` in
			<foreach collection="processStepTypeList" item="processStepType" open="(" separator=","  close=")">
				#{processStepType}
			</foreach>
		</if>
		<if test="isActive != null">
			AND ps.`is_active` = #{isActive} 
		</if>  
	</select>

	<select id="getProcessTaskStepRelByToId" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskStepRelVo">
		SELECT
		`processtask_id` AS processTaskId,
		`from_process_step_uuid` AS fromProcessStepUuid,
		`to_process_step_uuid` AS toProcessStepUuid,
		`from_processtask_step_id` AS fromProcessTaskStepId,
		`to_processtask_step_id` AS toProcessTaskStepId,
		(SELECT xx.`handler` FROM `processtask_step` xx WHERE xx.id = `to_processtask_step_id`) AS toProcessStepHandler,
		`condition`,
		`is_hit` AS isHit,
		`name`,
		`type`
		FROM
		`processtask_step_rel`
		WHERE to_processtask_step_id = #{value}
	</select>

	<select id="getProcessTaskStepRelByFromId" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskStepRelVo">
		SELECT
		`processtask_id` AS processTaskId,
		`from_process_step_uuid` AS fromProcessStepUuid,
		`to_process_step_uuid` AS toProcessStepUuid,
		`from_processtask_step_id` AS fromProcessTaskStepId,
		`to_processtask_step_id` AS toProcessTaskStepId,
		(SELECT xx.`handler` FROM `processtask_step` xx WHERE xx.id = `to_processtask_step_id`) AS toProcessStepHandler,
		`condition`,
		`is_hit` AS isHit,
		`name`,
		`type`
		FROM
		`processtask_step_rel`
		WHERE from_processtask_step_id = #{value}
	</select>

	<select id="getProcessTaskStepBaseInfoById" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskStepVo">
		SELECT
		`id`,
		`processtask_id` AS processTaskId,
		`name`,
		`process_step_uuid` AS processStepUuid,
		`status`,
		`result`,
		`type`,
		`handler`,
		`is_active` AS isActive,
		`config_hash` AS configHash,
		`start_time` AS startTime,
		`end_time` AS endTime,
		`error`
		FROM
		`processtask_step`
		WHERE id = #{value}
	</select>

	<select id="getProcessTaskStepBaseInfoBySlaId" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskStepVo">
		SELECT
		`id`,
		`processtask_id` AS processTaskId,
		`name`,
		`process_step_uuid` AS processStepUuid,
		`status`,
		`result`,
		`type`,
		`handler`,
		`is_active` AS isActive,
		`config_hash` AS configHash,
		`start_time` AS startTime,
		`end_time` AS endTime,
		`error`
		FROM
		`processtask_step` a JOIN `processtask_step_sla` b ON
		a.id = b.processtask_step_id
		WHERE b.sla_id = #{value}
	</select>

	<select id="getProcessTaskStepBaseInfoByProcessTaskId" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskStepVo">
		SELECT
		`id`,
		`processtask_id` AS processTaskId,
		`name`,
		`process_step_uuid` AS processStepUuid,
		`status`,
		`result`,
		`type`,
		`handler`,
		`is_active` AS isActive,
		`config_hash` AS configHash,
		`start_time` AS startTime,
		`end_time` AS endTime,
		`error`
		FROM
		`processtask_step`
		WHERE `processtask_id` = #{value}
	</select>

	<resultMap id="processTaskStepFormAttributeResultMap" type="codedriver.framework.process.dto.ProcessTaskStepFormAttributeVo">
		<id column="processTaskStepId" property="processTaskStepId" />
		<id column="attributeUuid" property="attributeUuid" />
		<id column="processTaskId" property="processTaskId" />
		<result column="isEditable" property="isEditable" />
		<result column="label" property="label" />
		<result column="handler" property="handler" />
		<result column="config" property="config" />
		<result column="data" property="data" />
	</resultMap>

	<select id="getProcessTaskStepFormAttributeByStepId" parameterType="codedriver.framework.process.dto.ProcessTaskStepFormAttributeVo" resultMap="processTaskStepFormAttributeResultMap">
		SELECT
		a.`processtask_step_id` AS processTaskStepId,
		a.`attribute_uuid` AS attributeUuid,
		a.`processtask_id` AS processTaskId,
		a.`action`,
		f.`label`,
		f.`handler`,
		e.`data`,
		e.`attribute_uuid` AS dataAttributeUuid,
		e.`processtask_id` AS dataProcessTaskId
		FROM
		`processtask_step_formattribute` a
		LEFT JOIN `processtask_formattribute_data` e ON a.`processtask_id` = e.`processtask_id` AND a.`attribute_uuid` = e.`attribute_uuid`
		JOIN `form_attribute` f ON a.`attribute_uuid` = f.`uuid`
		WHERE
		a.`processtask_step_id` = #{processTaskStepId}
		<if test="attributeUuid != null and attributeUuid != ''">
			AND
			a.attribute_uuid = #{attributeUuid}
		</if>
	</select>
	
	<select id="getProcessTaskById" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskVo">
	SELECT 
	  `id`,
	  `title`,
	  `process_uuid` AS processUuid,
	  `channel_uuid` AS channelUuid,
	  `config_hash` AS configHash,
	  `priority_uuid` AS priorityUuid,
	  `status`,
	  `start_time` AS startTime,
	  `end_time` AS endTime,
	  `owner`,
	  `reporter`,
	  `expire_time` AS expireTime,
	  `worktime_uuid` AS worktimeUuid,
	  `error` 
	FROM `processtask` 
	WHERE `id`= #{id}
	</select>
	
	<select id="searchProcessTaskFile" parameterType="codedriver.framework.process.dto.ProcessTaskFileVo" resultType="codedriver.framework.process.dto.ProcessTaskFileVo">
	SELECT 
	  `processtask_id` AS processTaskId,
	  `processtask_step_id` AS processTaskStepId,
	  `file_id` AS fileId 
	FROM `processtask_file` 
	WHERE `processtask_id` = #{processTaskId} 
	AND `processtask_step_id` = #{processTaskStepId}
	</select>
	
	<select id="getProcessTaskStepFormAttributeByProcessTaskStepId" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskStepFormAttributeVo">
	SELECT 
	  `processtask_id` AS processTaskId,
	  `processtask_step_id` AS processTaskStepId,
	  `attribute_uuid` AS attributeUuid,
	  `action` 
	FROM `processtask_step_formattribute` 
	WHERE `processtask_step_id` = #{processTaskStepId}
	</select>

	<resultMap type="codedriver.framework.process.dto.ProcessTaskStepAuditVo" id="processTaskStepAuditMap">
		<id column="id" property="id"/>
		<result column="processtask_id" property="processTaskId"/>
		<result column="processtask_step_id" property="processTaskStepId"/>
		<result column="processTaskStepName" property="processTaskStepName"/>
		<result column="user_uuid" property="userUuid"/>
		<result column="userName" property="userName"/>
		<result column="action_time" property="actionTime"/>
		<result column="action" property="action"/>
		<result column="step_status" property="stepStatus"/>
		<collection property="auditDetailList" ofType="codedriver.framework.process.dto.ProcessTaskStepAuditDetailVo">
			<result column="audit_id" property="auditId"/>
			<result column="type" property="type"/>
			<result column="old_content" property="oldContent"/>
			<result column="new_content" property="newContent"/>
		</collection>
	</resultMap>
	<select id="getProcessTaskStepAuditList" parameterType="codedriver.framework.process.dto.ProcessTaskStepAuditVo" resultMap="processTaskStepAuditMap">
	SELECT 
	  psa.`id`,
	  psa.`processtask_id`,
	  psa.`processtask_step_id`,
	  ps.`name` AS processTaskStepName,
	  psa.`user_uuid`,
	  (SELECT user_name FROM `user` x WHERE x.uuid = psa.`user_uuid`) AS userName,
	  psa.`action_time`,
	  psa.`action`, 
	  psa.`step_status`, 
	  psad.`audit_id`,
	  psad.`type`,
	  psad.`old_content`,
	  psad.`new_content`
	FROM `processtask_step_audit` psa
	LEFT JOIN `processtask_step_audit_detail` psad ON psad.`audit_id` = psa.`id`
	LEFT JOIN `processtask_step` ps on ps.`id` = psa.`processtask_step_id`
	WHERE psa.`processtask_id` = #{processTaskId}
	<if test="processTaskStepId != null">
	AND psa.`processtask_step_id` = #{processTaskStepId} 
	</if>
	<if test="action != null and action != ''">
	AND psa.`action` = #{action} 
	</if>
	<if test="userUuid != null and userUuid != ''">
	AND psa.`user_uuid` = #{userUuid} 
	</if>
	ORDER BY psa.`id` ASC
	</select>
	
	<select id="getProcessTaskStepAuditById" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskStepAuditVo">
	SELECT 
	  `id`,
	  `processtask_id` AS processTaskId,
	  `processtask_step_id` AS processTaskStepId,
	  `user_uuid` AS userUuid,
	  `action_time` AS actionTime,
	  `action`,
	  `step_status` AS stepStatus 
	FROM `processtask_step_audit`
	WHERE `id` = #{id}
	</select>
	
	<resultMap type="codedriver.framework.process.dto.ProcessTaskStepVo" id="processTaskStepMap">
		<id column="id" property="id"/>
		<result column="processtask_id" property="processTaskId"/>
		<result column="name" property="name"/>
		<result column="process_step_uuid" property="processStepUuid"/>
		<result column="status" property="status"/>
		<result column="result" property="result"/>
		<result column="type" property="type"/>
		<result column="handler" property="handler"/>
		<result column="is_active" property="isActive"/>
		<result column="start_time" property="startTime"/>
		<result column="end_time" property="endTime"/>
		<result column="error" property="error"/>
		<result column="expire_time" property="expireTime"/>
		<result column="config_hash" property="configHash"/>
	</resultMap>
	<select id="getProcessTaskStepListByProcessTaskId" parameterType="java.lang.Long" resultMap="processTaskStepMap">
	SELECT 
	  `id`,
	  `processtask_id`,
	  `name`,
	  `process_step_uuid`,
	  `status`,
	  `result`,
	  `type`,
	  `handler`,
	  `is_active`,
	  `start_time`,
	  `end_time`,
	  `error`,
	  `expire_time`,
	  `config_hash`
	FROM `processtask_step` pts
	WHERE pts.`processtask_id` = #{processTaskId}
	</select>
	
	<select id="getProcessTaskStepWorkerListByUserUuidTeamUuidListRoleUuidList" resultType="codedriver.framework.process.dto.ProcessTaskStepWorkerVo">
	SELECT 
	`processtask_id` AS processTaskId,
	`processtask_step_id` AS processTaskStepId
	FROM `processtask_step_worker` 
	WHERE (`type` = 'user' AND `uuid` = #{userUuid})
	<if test="teamUuidList != null and teamUuidList.size() > 0">
	OR (`type` = 'team' AND `uuid` in 
		<foreach collection="teamUuidList" item="teamUuid" open="(" separator=","  close=")">
		#{teamUuid}
		</foreach>
		)
	</if>
	<if test="roleUuidList != null and roleUuidList.size() > 0">
	OR (`type` = 'role' AND `uuid` in 
		<foreach collection="roleUuidList" item="roleUuid" open="(" separator=","  close=")">
			#{roleUuid}
		</foreach>
		)
	</if>
	</select>
	
	<select id="getProcessTaskActiveStepListByStepIdList" resultType="java.util.HashMap">
	SELECT 
	  pt.`id` AS processTaskId,
	  pt.`title` AS title,
	  pt.`worktime_uuid` AS worktimeUuid,
	  pts.`status` AS status,
	  pts.`id` AS processTaskStepId,
	  pts.`name` AS stepName,
	  pts.`config_hash` AS configHash
	FROM`processtask` pt
	JOIN `processtask_step` pts ON pts.`processtask_id`=pt.`id` AND pts.`is_active`=1
	WHERE pts.`id` IN 
	<foreach collection="processTaskStepIdList" item="stepId" open="(" separator="," close=")">
	#{stepId}
	</foreach>
	<if test="keyword != null and keyword != ''">
	AND (pt.`title` LIKE CONCAT('%', #{keyword}, '%') OR pt.`id` LIKE CONCAT('%', #{keyword}, '%'))
	</if>
	ORDER BY pts.`id` DESC
	</select>
	
	<select id="getProcessTaskFormAttributeDataByProcessTaskIdAndAttributeUuid" parameterType="codedriver.framework.process.dto.ProcessTaskFormAttributeDataVo" resultType="codedriver.framework.process.dto.ProcessTaskFormAttributeDataVo">
	SELECT 
	  `processtask_id` AS processTaskId,
	  `type`,
	  `attribute_uuid` AS attributeUuid,
	  `data` 
	FROM `processtask_formattribute_data` 
	WHERE `processtask_id` = #{processTaskId} 
	AND `attribute_uuid` = #{attributeUuid}
	</select>
	
	<select id="getProcessTaskStepSubtaskById" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskStepSubtaskVo">
	SELECT 
	  a.`processtask_id` AS processTaskId,
	  a.`processtask_step_id` AS processTaskStepId,
	  a.`id`,
	  a.`owner`,
	  a.`status`,
	  a.`user_uuid` AS userUuid,
	  (SELECT `user_name` FROM `user` WHERE `uuid` = a.`user_uuid`) AS userName,
	  a.`target_time` AS targetTime,
	  a.`create_time` AS createTime,
	  a.`start_time` AS startTime,
	  a.`end_time` AS endTime,
	  a.`cancel_user` AS cancelUser,
	  a.`cancel_time` AS cancelTime,
	  b.`user_uuid` AS majorUser
	FROM `processtask_step_subtask` a
	JOIN `processtask_step_user` b ON b.`processtask_step_id`=a.`processtask_step_id` AND b.`user_type`='major'
	WHERE a.`id` = #{id}
	</select>
	
	<select id="getProcessTaskStepSubtaskList" parameterType="codedriver.framework.process.dto.ProcessTaskStepSubtaskVo" resultType="codedriver.framework.process.dto.ProcessTaskStepSubtaskVo">
	SELECT 
	  a.`processtask_id` AS processTaskId,
	  a.`processtask_step_id` AS processTaskStepId,
	  a.`id`,
	  a.`owner`,
	  (SELECT `user_name` FROM `user` WHERE `uuid` = `owner`) AS ownerName,
	  a.`status`,
	  a.`user_uuid` AS userUuid,
	  (SELECT `user_name` FROM `user` WHERE `uuid` = a.`user_uuid`) AS userName,
	  a.`target_time` AS targetTime,
	  a.`create_time` AS createTime,
	  a.`start_time` AS startTime,
	  a.`end_time` AS endTime,
	  a.`cancel_user` AS cancelUser,
	  a.`cancel_time` AS cancelTime,
	  b.`user_uuid` AS majorUser
	FROM `processtask_step_subtask` a
	JOIN `processtask_step_user` b ON b.`processtask_step_id`=a.`processtask_step_id` AND b.`user_type`='major'
	<where>
		<if test="id != null">
		AND a.`id` = #{id}
		</if>
		<if test="processTaskId != null">
		AND a.`processtask_id` = #{processTaskId}
		</if>
		<if test="processTaskStepId != null">
		AND a.`processtask_step_id` = #{processTaskStepId}
		</if>
		<if test="userUuid != null and userUuid != ''">
		AND a.`user_uuid` = #{userUuid}
		</if>
		<if test="owner != null and owner != ''">
		AND a.`owner` = #{owner}
		</if>
		<if test="status != null and status != ''">
		AND a.`status` = #{status}
		</if>
	</where>
	</select>
	<select id="getProcessTaskStepSubtaskContentBySubtaskId" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskStepSubtaskContentVo">
	SELECT 
	  a.`id`,
	  a.`processtask_step_subtask_id` AS processTaskStepSubtaskId,
	  a.`content_hash` AS contentHash,
	  b.`content`,
	  a.`action`,
	  a.`fcd`,
	  a.`fcu`,
	  c.`user_name` AS fcuName,
	  a.`lcd`,
	  a.`lcu` 
	FROM `processtask_step_subtask_content` a
	JOIN `processtask_content` b on b.`hash` = a.`content_hash`
	LEFT JOIN `user` c ON c.`uuid` = a.`fcu`
	WHERE a.`processtask_step_subtask_id` = #{processTaskStepSubtaskId}
	</select>
	
	<select id="checkIsWorker" resultType="int">
	SELECT 
	  COUNT(1)
	FROM `processtask_step_worker` 
	WHERE `processtask_id` = #{processTaskId}
	<if test="processTaskStepId != null">
	AND `processtask_step_id` = #{processTaskStepId}
	</if>
	AND (
		(`type` = 'user' AND `uuid` = #{userUuid})
		<if test="teamUuidList != null and teamUuidList.size() > 0">
		OR (`type` = 'team' AND `uuid` IN  
			<foreach collection="teamUuidList" item="teamUuid" open="(" separator=","  close=")">
			#{teamUuid}
			</foreach>
			)
		</if>
		<if test="roleUuidList != null and roleUuidList.size() > 0">
		OR (`type` = 'role' AND `uuid` IN 
			<foreach collection="roleUuidList" item="roleUuid" open="(" separator=","  close=")">
				#{roleUuid}
			</foreach>
			)
		</if>
	)
	</select>
	
	<select id="checkIsProcessTaskStepUser" resultType="int">
	SELECT 
		COUNT(1)
	FROM `processtask_step_user`
	WHERE `processtask_id` = #{processTaskId}
	<if test="processTaskStepId != null">
		AND `processtask_step_id` = #{processTaskStepId}
	</if>
	AND `user_uuid` = #{userUuid}
	</select>
	
	<select id="getPrcessTaskAssignWorker" parameterType="codedriver.framework.process.dto.ProcessTaskAssignWorkerVo" resultType="codedriver.framework.process.dto.ProcessTaskAssignWorkerVo">
	SELECT 
	  `processtask_id` AS processTaskId,
	  `processtask_step_id` AS processTaskStepId,
	  `from_processtask_step_id` AS fromProcessTaskStepId,
	  `from_process_step_uuid` AS fromProcessStepUuid,
	  `type`,
	  `uuid`,
	  `fcu`,
	  `fcd` 
	FROM `processtask_assignworker` 
	WHERE `processtask_id` = #{processTaskId}
	AND `processtask_step_id` = #{processTaskStepId}
	AND `from_process_step_uuid` = #{fromProcessStepUuid}
	</select>
	
	<select id="getProcessTaskStepBaseInfoByProcessTaskIdAndProcessStepUuid" resultType="codedriver.framework.process.dto.ProcessTaskStepVo">
		SELECT
		`id`,
		`processtask_id` AS processTaskId,
		`name`,
		`process_step_uuid` AS processStepUuid,
		`status`,
		`result`,
		`type`,
		`handler`,
		`is_active` AS isActive,
		`config_hash` AS configHash,
		`start_time` AS startTime,
		`end_time` AS endTime,
		`error`
		FROM `processtask_step`
		WHERE `processtask_id` = #{processTaskId} 
		AND `process_step_uuid` = #{processStepUuid}
	</select>
	
	<select id="getProcessTaskStepCommentListByProcessTaskStepId" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskStepCommentVo">
	SELECT 
	  `id`,
	  `processtask_id` AS processTaskId,
	  `processtask_step_id` AS processTaskStepId,
	  `content_hash` AS contentHash,
	  `file_id_list_hash` fileIdListHash,
	  `fcd`,
	  `fcu`,
	  `lcd`,
	  `lcu` 
	FROM `processtask_step_comment` 
	WHERE `processtask_step_id` = #{processtaskStepId}
	ORDER BY id
	</select>
	
	<select id="getProcessTaskStepCommentById" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskStepCommentVo">
	SELECT 
	  `id`,
	  `processtask_id` AS processTaskId,
	  `processtask_step_id` AS processTaskStepId,
	  `content_hash` AS contentHash,
	  `file_id_list_hash` fileIdListHash,
	  `fcd`,
	  `fcu`,
	  `lcd`,
	  `lcu` 
	FROM `processtask_step_comment` 
	WHERE `id` = #{id}
	</select>

	<select id="getProcessTaskAuditList" resultType="codedriver.framework.process.dto.ProcessTaskStepAuditVo">
		SELECT 
		`processtask_id` as processTaskId,
		`processtask_step_id` as processTaskStepId,
		`user_uuid` as userUuid,
		`action_time` as actionTime,
		`action`,
		`step_status` as stepStatus
		FROM
		  `processtask_step_audit`
		WHERE 1=1
		<if test="processTaskId != null">
	 		and `processtask_id` = #{processTaskId}
	 	</if>
		<if test="userUuid != null">
	 		and `user_uuid` = #{userUuid}
	 	</if>
	 	<if test="action != null">
	 		and `action` = #{action}
	 	</if>
	</select>
	
	<select id="getProcessTaskListByKeywordAndIdList" resultType="codedriver.framework.process.dto.ProcessTaskVo">
	SELECT 
	  `id`,
	  `title`,
	  `process_uuid` AS processUuid,
	  `channel_uuid` AS channelUuid,
	  `config_hash` AS configHash,
	  `priority_uuid` AS priorityUuid,
	  `status`,
	  `start_time` AS startTime,
	  `end_time` AS endTime,
	  `owner`,
	  `reporter`,
	  `expire_time` AS expireTime,
	  `worktime_uuid` AS worktimeUuid,
	  `error` 
	FROM `processtask` 
	WHERE `id` IN 
	<foreach collection="processTaskIdList" item="id" open="(" separator="," close=")">
	#{id}
	</foreach>	
	<if test="keyword != null and keyword != ''">
	AND (`title` LIKE CONCAT('%', #{keyword}, '%') OR `id` LIKE CONCAT('%', #{keyword}, '%'))
	</if>
	</select>
	
	<select id="getProcessTaskStepListByIdList" parameterType="java.util.List" resultType="codedriver.framework.process.dto.ProcessTaskStepVo">
	SELECT 
	  `id`,
	  `processtask_id` AS processTaskId,
	  `name`,
	  `process_step_uuid` AS processStepUuid,
	  `status`,
	  `result`,
	  `type`,
	  `handler`,
	  `is_active` AS isActive,
	  `start_time` AS startTime,
	  `end_time` AS endTime,
	  `error`,
	  `expire_time` AS expireTime,
	  `config_hash` AS configHash
	FROM `processtask_step` 
	WHERE `id` IN 
	<foreach collection="list" item="id" open="(" separator="," close=")">
	#{id}
	</foreach>
	</select>
	
	<select id="getProcessTaskStepNotifyPolicy" parameterType="codedriver.framework.process.dto.ProcessTaskStepNotifyPolicyVo" resultType="codedriver.framework.process.dto.ProcessTaskStepNotifyPolicyVo">
	SELECT 
	  a.`processtask_step_id` AS processTaskStepId,
	  a.`policy_id` AS policyId,
	  a.`policy_name` AS policyName,
	  a.`policy_config_hash` AS policyConfigHash,
	  b.`config` AS policyConfig
	FROM `processtask_step_notify_policy` a
	JOIN `processtask_step_notify_policy_config` b ON b.`hash` = a.`policy_config_hash`
	WHERE a.`processtask_step_id` = #{processTaskStepId} 
	AND a.`policy_id` = #{policyId}
	</select>
	
	<select id="getWorkloadByTeamUuid" parameterType="java.lang.String" resultType="java.util.HashMap">
	SELECT 
	  c.`uuid` AS userUuid,
	  COUNT(c.`uuid`) AS count
	FROM `user_team` a
	JOIN `user` b ON b.`uuid`=a.`user_uuid`
	JOIN `processtask_step_worker` c ON c.`uuid`=b.`uuid` AND c.`type` = 'user' AND c.`user_type`='major'
	WHERE a.`team_uuid` = #{value}
	GROUP BY c.`uuid`
	ORDER BY COUNT(c.`uuid`) ASC
	</select>
	
	<update id="updateProcessTaskStepConvergeIsCheck">
		UPDATE `processtask_converge` SET is_check = #{isCheck} WHERE converge_id = #{convergeId}
		AND processtask_step_id = #{processTaskStepId}
	</update>

	<update id="updateProcessTaskStepRelIsHit">
		UPDATE
		`processtask_step_rel`
		SET
		`is_hit` = #{isHit}
		WHERE `from_processtask_step_id` = #{fromProcessTaskStepId}
		<if test="toProcessTaskStepId != null">
			AND `to_processtask_step_id` = #{toProcessTaskStepId}
		</if>
	</update>

	<update id="updateProcessTaskStepStatus" parameterType="codedriver.framework.process.dto.ProcessTaskStepVo">
		UPDATE
		`processtask_step`
		SET
		`status` = #{status},
		`result` = #{result},
		`is_active` = #{isActive},
		<if test="isActive == 1">
			`start_time` = NOW(3),
			`end_time` = NULL,
		</if>
		<if test="isActive == 2">
			`end_time` = NOW(3),
		</if>
		`error` = #{error}
		WHERE `id` = #{id}
	</update>

	<update id="updateProcessTaskStepExpireTime" parameterType="codedriver.framework.process.dto.ProcessTaskStepVo">
		UPDATE
		`processtask_step`
		SET
		`expire_time` = #{expireTime}
		WHERE `id` = #{id}
	</update>

	<insert id="insertProcessTaskSlaNotify" parameterType="codedriver.framework.process.dto.ProcessTaskSlaNotifyVo">
		<selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
			select LAST_INSERT_ID() as id
		</selectKey>
		INSERT INTO `processtask_sla_notify` (
		`sla_id`,
		`hash`,
		`trigger_time`,
		`config`
		)
		VALUES
		(
		#{slaId},
		#{hash},
		#{triggerTime},
		#{config}
		)
	</insert>

	<insert id="insertProcessTaskSlaTransfer" parameterType="codedriver.framework.process.dto.ProcessTaskSlaTransferVo">
		<selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
			select LAST_INSERT_ID() as id
		</selectKey>
		INSERT INTO `processtask_sla_transfer` (
		`sla_id`,
		`hash`,
		`trigger_time`,
		`config`
		)
		VALUES
		(
		#{slaId},
		#{hash},
		#{triggerTime},
		#{config}
		)
	</insert>

	<insert id="insertProcessTaskStepSla">
		INSERT INTO `processtask_step_sla` (`processtask_step_id`, `sla_id`)
		VALUES
		(#{processTaskStepId}, #{slaId});
	</insert>

	<insert id="insertProcessTaskSla" parameterType="codedriver.framework.process.dto.ProcessTaskSlaVo">
		<selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
			select LAST_INSERT_ID() as id
		</selectKey>
		INSERT INTO `processtask_sla` (
		`processtask_id`,
		`name`,
		`config`
		)
		VALUES
		(
		#{processTaskId},
		#{name},
		#{config}
		)
	</insert>

	<insert id="insertProcessTaskStepAuditDetail" parameterType="codedriver.framework.process.dto.ProcessTaskStepAuditDetailVo">
		INSERT INTO `processtask_step_audit_detail` (
		`audit_id`,
		`type`,
		`old_content`,
		`new_content`
		)
		VALUES
		(
		#{auditId},
		#{type},
		#{oldContent},
		#{newContent}
		)
	</insert>

	<insert id="insertProcessTaskStepAudit" parameterType="codedriver.framework.process.dto.ProcessTaskStepAuditVo">
		<selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
			select LAST_INSERT_ID() as id
		</selectKey>
		INSERT INTO `processtask_step_audit` (
		`processtask_id`,
		`processtask_step_id`,
		`user_uuid`,
		`action_time`,
		`action`,
		`step_status`
		)
		VALUES
		(
		#{processTaskId},
		#{processTaskStepId},
		#{userUuid},
		NOW(3),
		#{action},
		#{stepStatus}
		)
	</insert>

	<insert id="insertProcessTaskForm" parameterType="codedriver.framework.process.dto.ProcessTaskFormVo">
		INSERT INTO `processtask_form` (
		`processtask_id`,
		`form_uuid`,
		`form_name`,
		`form_content_hash`
		)
		VALUES
		(
		#{processTaskId},
		#{formUuid},
		#{formName},
		#{formContentHash}
		)
	</insert>

	<insert id="replaceProcessTaskFormContent" parameterType="codedriver.framework.process.dto.ProcessTaskFormVo">
		REPLACE INTO `processtask_form_content` (`hash`, `content`)
		VALUES
		(#{formContentHash}, #{formContent});
	</insert>

	<insert id="insertProcessTaskStepTimeoutPolicy" parameterType="codedriver.framework.process.dto.ProcessTaskStepTimeoutPolicyVo">
		INSERT INTO `processtask_step_timeout_policy` (
		`processtask_id`,
		`processtask_step_id`,
		`process_step_uuid`,
		`policy`,
		`sort`,
		`time`,
		`config`
		)
		VALUES
		(
		#{processTaskId},
		#{processTaskStepId},
		#{processStepUuid},
		#{policy},
		#{sort},
		#{time},
		#{config}
		)
	</insert>

	<insert id="insertProcessTaskStepWorkerPolicy" parameterType="codedriver.framework.process.dto.ProcessTaskStepWorkerPolicyVo">
		INSERT INTO `processtask_step_worker_policy` (
		`processtask_id`,
		`processtask_step_id`,
		`process_step_uuid`,
		`policy`,
		`sort`,
		`config`
		)
		VALUES
		(
		#{processTaskId},
		#{processTaskStepId},
		#{processStepUuid},
		#{policy},
		#{sort},
		#{config}
		)
	</insert>

	<insert id="replaceProcessTaskFormAttributeData" parameterType="codedriver.framework.process.dto.ProcessTaskFormAttributeDataVo">
		REPLACE INTO `processtask_formattribute_data` (
		`processtask_id`,
		`attribute_uuid`,
		`data`,
		`type`,
		`sort`
		)
		VALUES
		(
		#{processTaskId},
		#{attributeUuid},
		#{data},
		#{type},
		#{sort}
		)
	</insert>

	<insert id="insertProcessTaskConverge" parameterType="codedriver.framework.process.dto.ProcessTaskConvergeVo">
		INSERT INTO `processtask_converge` (
		`converge_id`,
		`processtask_step_id`,
		`processtask_id`
		)
		VALUES
		(
		#{convergeId},
		#{processTaskStepId},
		#{processTaskId}
		)
	</insert>

	<insert id="insertProcessTaskStepWorker" parameterType="codedriver.framework.process.dto.ProcessTaskStepWorkerVo">
		INSERT INTO `processtask_step_worker` (
		`processtask_id`,
		`processtask_step_id`,
		`type`,
		`uuid`,
		`user_type`
		)
		VALUES
		(
		#{processTaskId},
		#{processTaskStepId},
		#{type},
		#{uuid},
		#{userType}
		)
	</insert>

	<insert id="insertProcessTaskStepRel" parameterType="codedriver.framework.process.dto.ProcessTaskStepRelVo">
		INSERT INTO `processtask_step_rel` (
		`processtask_id`,
		`from_process_step_uuid`,
		`to_process_step_uuid`,
		`from_processtask_step_id`,
		`to_processtask_step_id`,
		`condition`,
		`is_hit`,
		`uuid`,
		`name`,
		`type`
		)
		VALUES
		(
		#{processTaskId},
		#{fromProcessStepUuid},
		#{toProcessStepUuid},
		#{fromProcessTaskStepId},
		#{toProcessTaskStepId},
		#{condition},
		#{isHit},
		#{processStepRelUuid},
		#{name},
		#{type}
		)
	</insert>

	<insert id="insertProcessTaskStepTeam" parameterType="codedriver.framework.process.dto.ProcessTaskStepTeamVo">
		INSERT INTO `processtask_step_team` (
		`processtask_step_id`,
		`team_id`,
		`team_name`
		)
		VALUES
		(
		#{processTaskStepId},
		#{teamId},
		#{teamName}
		)
	</insert>

	<insert id="insertProcessTaskStep" parameterType="codedriver.framework.process.dto.ProcessTaskStepVo">
		<!-- <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
			select LAST_INSERT_ID() as id
		</selectKey> -->
		INSERT INTO `processtask_step` (
		`id`,
		`processtask_id`,
		`name`,
		`process_step_uuid`,
		`status`,
		`type`,
		`handler`,
		`is_active`,
		`config_hash`
		)
		VALUES
		(
		#{id},
		#{processTaskId},
		#{name},
		#{processStepUuid},
		#{status},
		#{type},
		#{handler},
		#{isActive},
		#{configHash}
		)
	</insert>

	<insert id="insertProcessTask" parameterType="codedriver.framework.process.dto.ProcessTaskVo">
		<!-- <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
			select LAST_INSERT_ID() as id
		</selectKey> -->
		INSERT INTO `processtask` (
		`id`,
		`title`,
		`process_uuid`,
		`channel_uuid`,
		`config_hash`,
		`priority_uuid`,
		`status`,
		`start_time`,
		`owner`,
		`reporter`,
		`expire_time`,
		`worktime_uuid`
		)
		VALUES
		(
		#{id},
		#{title},
		#{processUuid},
		#{channelUuid},
		#{configHash},
		#{priorityUuid},
		#{status},
		NOW(3),
		#{owner},
		#{reporter},
		#{expireTime},
		#{worktimeUuid}
		)
	</insert>

	<insert id="replaceProcessTaskContent" parameterType="codedriver.framework.process.dto.ProcessTaskContentVo">
		REPLACE INTO `processtask_content` (`content`,`hash`)
		VALUES
		(#{content}, #{hash})
	</insert>

	<insert id="replaceProcessTaskStepContent" parameterType="codedriver.framework.process.dto.ProcessTaskStepContentVo">
		REPLACE INTO `processtask_step_content` (
		`processtask_id`,
		`processtask_step_id`,
		`content_hash`,
		`fcd`,
		`fcu`
		)
		VALUES
		(
		#{processTaskId},
		#{processTaskStepId},
		#{contentHash},
		NOW(3),
		#{fcu}
		)
	</insert>

	<insert id="insertProcessTaskStepAuditFormAttributeData" parameterType="codedriver.framework.process.dto.ProcessTaskStepAuditFormAttributeDataVo">
		INSERT INTO `processtask_step_audit_formattribute_data` (
		`audit_id`,
		`form_uuid`,
		`processtask_step_id`,
		`attribute_uuid`,
		`data`
		)
		VALUES
		(
		#{auditId},
		#{formUuid},
		#{processTaskStepId},
		#{attributeUuid},
		#{data}
		)
	</insert>

	<insert id="insertProcessTaskStepUser" parameterType="codedriver.framework.process.dto.ProcessTaskStepUserVo">
		INSERT INTO `processtask_step_user` (
		`processtask_id`,
		`processtask_step_id`,
		`user_uuid`,
		`user_type`,
		`user_name`,
		`status`,
		`active_time`,
		`start_time`
		)
		VALUES
		(
		#{processTaskId},
		#{processTaskStepId},
		#{userUuid},
		#{userType},
		#{userName},
		#{status},
		NOW(3),
		NOW(3)
		)
	</insert>

	<insert id="replaceProcessTaskStepConfig" parameterType="codedriver.framework.process.dto.ProcessTaskStepConfigVo">
		REPLACE INTO `processtask_step_config` (`hash`, `config`)
		VALUES
		(#{hash}, #{config})
	</insert>

	<insert id="insertProcessTaskStepFormAttribute" parameterType="codedriver.framework.process.dto.ProcessTaskStepFormAttributeVo">
		INSERT INTO `processtask_step_formattribute` (
		`processtask_id`,
		`processtask_step_id`,
		`attribute_uuid`,
		`action`
		)
		VALUES
		(
		#{processTaskId},
		#{processTaskStepId},
		#{attributeUuid},
		#{action}
		)
	</insert>

	<insert id="replaceProcessTaskConfig" parameterType="codedriver.framework.process.dto.ProcessTaskConfigVo">
		REPLACE INTO `processtask_config` (`hash`, `config`)
		VALUES
		(#{hash}, #{config})
	</insert>

	<insert id="insertProcessTaskSlaTime" parameterType="codedriver.framework.process.dto.ProcessTaskSlaTimeVo">
		INSERT INTO `processtask_sla_time` (
		`sla_id`,
		`time_sum`,
		`expire_time`,
		`realexpire_time`,
		`time_left`,
		`realtime_left`
		)
		VALUES
		(
		#{slaId},
		#{timeSum},
		#{expireTime},
		#{realExpireTime},
		#{timeLeft},
		#{realTimeLeft}
		)
	</insert>
	
	<insert id="insertProcessTaskFile" parameterType="codedriver.framework.process.dto.ProcessTaskFileVo">
	INSERT INTO `processtask_file` (
	  `processtask_id`,
	  `processtask_step_id`,
	  `file_id`
	) 
	VALUES
	  (
	    #{processTaskId},
	    #{processTaskStepId},
	    #{fileId}
	  ) 
	</insert>
	
	<insert id="insertProcessTaskStepSubtask" parameterType="codedriver.framework.process.dto.ProcessTaskStepSubtaskVo">
	<selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
			select LAST_INSERT_ID() as id
	</selectKey>
	INSERT INTO `processtask_step_subtask` (
	  `processtask_id`,
	  `processtask_step_id`,
	  `id`,
	  `owner`,
	  `status`,
	  `user_uuid`,
	  `target_time`,
	  `create_time`,
	  `start_time`
	) 
	VALUES
	  (
	    #{processTaskId},
	    #{processTaskStepId},
	    #{id},
	    #{owner},
	    #{status},
	    #{userUuid},
	    #{targetTime},
	    NOW(3),
	    NOW(3)
	  ) 
	</insert>

	<insert id="insertProcessTaskStepSubtaskContent" parameterType="codedriver.framework.process.dto.ProcessTaskStepSubtaskContentVo">
	INSERT INTO `processtask_step_subtask_content` (
	  `processtask_step_subtask_id`,
	  `content_hash`,
	  `action`,
	  `fcd`,
	  `fcu`
	) 
	VALUES
	  (
	    #{processTaskStepSubtaskId},
	    #{contentHash},
	    #{action},
	    NOW(3),
	    #{fcu}
	  ) 
	</insert>
	
	<insert id="insertProcessTaskAssignWorker" parameterType="codedriver.framework.process.dto.ProcessTaskAssignWorkerVo">
	INSERT INTO `processtask_assignworker` (
	  `processtask_id`,
	  `processtask_step_id`,
	  `from_processtask_step_id`,
	  `from_process_step_uuid`,
	  `type`,
	  `uuid`,
	  `fcu`,
	  `fcd`
	) 
	VALUES
	  (
	    #{processTaskId},
	    #{processTaskStepId},
	    #{fromProcessTaskStepId},
	    #{fromProcessStepUuid},
	    #{type},
	    #{uuid},
	    #{fcu},
	    NOW(3)
	  ) 
	</insert>
	
	<insert id="insertProcessTaskStepComment" parameterType="codedriver.framework.process.dto.ProcessTaskStepCommentVo">
	<selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
		select LAST_INSERT_ID() AS id
	</selectKey>
	INSERT INTO `processtask_step_comment` (
	  `processtask_id`,
	  `processtask_step_id`,
	  `content_hash`,
	  `file_id_list_hash`,
	  `fcd`,
	  `fcu`
	) 
	VALUES
	  (
	    #{processTaskId},
	    #{processTaskStepId},
	    #{contentHash},
	    #{fileIdListHash},
	    NOW(3),
	    #{fcu}
	  ) 
	</insert>

	<insert id="replaceProcessTaskStepNotifyPolicyConfig" parameterType="codedriver.framework.process.dto.ProcessTaskStepNotifyPolicyVo">
	REPLACE INTO `processtask_step_notify_policy_config` (`hash`, `config`) 
	VALUES (#{policyConfigHash}, #{policyConfig})
	</insert>

	<insert id="insertProcessTaskStepNotifyPolicy" parameterType="codedriver.framework.process.dto.ProcessTaskStepNotifyPolicyVo">
	INSERT INTO `processtask_step_notify_policy` (
	  `processtask_step_id`,
	  `policy_id`,
	  `policy_name`,
	  `policy_config_hash`
	) 
	VALUES
	  (
	    #{processTaskStepId},
	    #{policyId},
	    #{policyName},
	    #{policyConfigHash}
	  ) 
	</insert>
	
	<update id="updateProcessTaskSlaTransfer" parameterType="codedriver.framework.process.dto.ProcessTaskSlaTransferVo">
		UPDATE
		`processtask_sla_transfer`
		SET
		`trigger_time` = #{triggerTime}
		WHERE id = #{id}
	</update>

	<update id="updateProcessTaskSlaNotify" parameterType="codedriver.framework.process.dto.ProcessTaskSlaNotifyVo">
		UPDATE
		`processtask_sla_notify`
		SET
		`trigger_time` = #{triggerTime}
		WHERE id = #{id}
	</update>

	<update id="updateProcessTaskSlaTime" parameterType="codedriver.framework.process.dto.ProcessTaskSlaTimeVo">
		UPDATE
		`processtask_sla_time`
		SET
		`expire_time` = #{expireTime},
		`realexpire_time` = #{realExpireTime},
		`time_left` = #{timeLeft},
		`realtime_left` = #{realTimeLeft},
		`time_sum` = #{timeSum}
		WHERE `sla_id` = #{slaId}
	</update>

	<update id="updateProcessTaskStepUserStatus" parameterType="codedriver.framework.process.dto.ProcessTaskStepUserVo">
		UPDATE
		`processtask_step_user`
		SET
		<choose>
			<when test="status == 'doing'">
				`start_time` = NOW(3),
				`end_time` = NULL,
			</when>
			<when test="status == 'done'">
				`end_time` = NOW(3),
			</when>
		</choose>
		`status` = #{status}
		WHERE
		`processtask_step_id` = #{processTaskStepId}
		AND `user_uuid` = #{userUuid}
		AND `user_type` = #{userType}
	</update>

	<update id="updateProcessTaskStatus" parameterType="codedriver.framework.process.dto.ProcessTaskVo">
		UPDATE
		`processtask`
		SET 
		<choose>
			<when test="status == 'succeed' or status == 'failed' or status == 'aborted'">
				`end_time` = NOW(3),
			</when>
			<otherwise>
				`end_time` = null,
			</otherwise>
		</choose>
		`status` = #{status}
		WHERE
		`id` = #{id}
	</update>
	
	<update id="updateProcessTaskTitleOwnerPriorityUuid" parameterType="codedriver.framework.process.dto.ProcessTaskVo">
	UPDATE 
	`processtask` 
	SET
	  `title` = #{title},
	  `priority_uuid` = #{priorityUuid},
	  `owner` = #{owner}
	WHERE `id` = #{id}
	</update>
	
	<update id="updateProcessTaskStepSubtaskStatus" parameterType="codedriver.framework.process.dto.ProcessTaskStepSubtaskVo">
	UPDATE 
	  `processtask_step_subtask` 
	SET
  	<if test="status == 'running'">
  		`user_uuid` = #{userUuid},
  		`target_time` = #{targetTime},
  		`start_time` = NOW(3),
  		`end_time` = NULL,
  	</if>
  	<if test="status == 'succeed'">
  		`end_time` = NOW(3),
  	</if>
  	<if test="status == 'canceled'">
  		`cancel_user` = #{cancelUser},
  		`cancel_time` = NOW(3),
  	</if>
	  `status` = #{status}
	WHERE `id` = #{id} 
	</update>

	<update id="updateProcessTaskStepSubtaskContent" parameterType="codedriver.framework.process.dto.ProcessTaskStepSubtaskContentVo">
	UPDATE `processtask_step_subtask_content` 
	SET `content_hash` = #{contentHash},
	  `lcd` = NOW(3),
	  `lcu` = #{lcu}
	<where>
		<if test="id != null">
		AND `id` = #{id}
		</if>
		<if test="processTaskStepSubtaskId != null">
		AND `processtask_step_subtask_id` = #{processTaskStepSubtaskId}
		</if>
		<if test="action != null and action != ''">
		AND `action` = #{action}
		</if>
	</where>
	</update>
	
	<update id="updateProcessTaskStepCommentById" parameterType="codedriver.framework.process.dto.ProcessTaskStepCommentVo">
	UPDATE  `processtask_step_comment` 
	SET
	  `content_hash` = #{contentHash},
	  `file_id_list_hash` = #{fileIdListHash},
	  `lcd` = NOW(3),
	  `lcu` = #{lcu} 
	WHERE `id` = #{id}
	</update>
	
	<delete id="deleteProcessTaskConvergeByStepId" parameterType="java.lang.Long">
		DELETE
		FROM
		`processtask_converge`
		WHERE
		`processtask_step_id` = #{value}
	</delete>

	<delete id="deleteProcessTaskFormAttributeValueByProcessTaskIdAndAttributeUuid">
		DELETE
		FROM
		`processtask_formattribute_value`
		WHERE `processtask_id` = #{processTaskId}
		AND `attribute_uuid` = #{attributeUuid}
	</delete>

	<delete id="deleteProcessTaskStepWorker" parameterType="codedriver.framework.process.dto.ProcessTaskStepWorkerVo">
		DELETE FROM `processtask_step_worker`
		<where>
			<if test="processTaskId != null and processTaskId != ''">
			`processtask_id` = #{processTaskId}
			</if>
			<if test="processTaskStepId != null and processTaskStepId != ''">
			AND `processtask_step_id` = #{processTaskStepId}
			</if>
			<if test="type != null and type != ''">
			AND `type` = #{type}
			</if>
			<if test="uuid != null and uuid != ''">
			AND `uuid` = #{uuid}
			</if>
		</where>
	</delete>

	<delete id="deleteProcessTaskStepUser">
		DELETE
		FROM
		`processtask_step_user`
		WHERE `processtask_step_id` = #{processTaskStepId}
		<if test="userType != null and userType != ''">
			AND `user_type` = #{userType}
		</if>
		<if test="userUuid != null and userUuid != ''">
			AND `user_uuid` = #{userUuid}
		</if>
	</delete>

	<delete id="deleteProcessTaskSlaNotifyById" parameterType="java.lang.Long">
		DELETE
		FROM
		`processtask_sla_notify`
		WHERE id = #{value}
	</delete>

	<delete id="deleteProcessTaskSlaTransferById" parameterType="java.lang.Long">
		DELETE
		FROM
		`processtask_sla_transfer`
		WHERE id = #{value}
	</delete>
	
	<delete id="deleteProcessTaskFile" parameterType="codedriver.framework.process.dto.ProcessTaskFileVo">
	DELETE FROM `processtask_file` 
	WHERE `processtask_id` = #{processTaskId} 
	AND `processtask_step_id` = #{processTaskStepId} 
	</delete>
	
	<delete id="deleteProcessTaskStepAuditById" parameterType="java.lang.Long">
	DELETE psa, psad
	FROM `processtask_step_audit` psa
	LEFT JOIN `processtask_step_audit_detail` psad ON psad.`audit_id` = psa.`id`
	WHERE `id` = #{id}
	</delete>
	
	<delete id="deleteProcessTaskStepContent" parameterType="codedriver.framework.process.dto.ProcessTaskStepContentVo">
	DELETE FROM `processtask_step_content` 
	WHERE `processtask_step_id` = #{processTaskStepId} 
	AND `content_hash` = #{contentHash}
	</delete>
	
	<delete id="deleteProcessTaskAssignWorker" parameterType="codedriver.framework.process.dto.ProcessTaskAssignWorkerVo">
	DELETE FROM`processtask_assignworker` 
	WHERE `processtask_step_id` = #{processTaskStepId}
	AND `from_processtask_step_id` = #{fromProcessTaskStepId}
	</delete>
	
	<delete id="deleteProcessTaskStepCommentById" parameterType="java.lang.Long">
	DELETE FROM `processtask_step_comment` WHERE `id` = #{id}
	</delete>
</mapper>