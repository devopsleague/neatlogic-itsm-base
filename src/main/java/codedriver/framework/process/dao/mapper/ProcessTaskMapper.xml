<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.framework.process.dao.mapper.ProcessTaskMapper">

    <select id="getAllProcessTaskSlaTransfer" resultType="codedriver.framework.process.dto.ProcessTaskSlaTransferVo">
        SELECT `id`,
               `sla_id`       AS slaId,
               `hash`,
               `trigger_time` as triggerTime,
               `config`
        FROM `processtask_sla_transfer`
    </select>

    <select id="getProcessTaskByStatusList" resultType="codedriver.framework.process.dto.ProcessTaskVo">
        SELECT
        `id`,
        `status`
        from
        `processtask`
        where `status` in
        <foreach collection="statusList" item="status" open="(" separator="," close=")">
            #{status}
        </foreach>
        ORDER BY RAND() LIMIT #{count}
    </select>

    <select id="getProcessTaskSlaTransferById" parameterType="java.lang.Long"
            resultType="codedriver.framework.process.dto.ProcessTaskSlaTransferVo">
        SELECT `id`,
               `sla_id`       AS slaId,
               `hash`,
               `trigger_time` as triggerTime,
               `config`
        FROM `processtask_sla_transfer`
        WHERE id = #{value}
    </select>

    <select id="getAllProcessTaskSlaNotify" resultType="codedriver.framework.process.dto.ProcessTaskSlaNotifyVo">
        SELECT id,
               `sla_id`       AS slaId,
               `hash`,
               `trigger_time` as triggerTime,
               `config`
        FROM `processtask_sla_notify`
    </select>

    <select id="getProcessTaskSlaById" parameterType="java.lang.Long"
            resultType="codedriver.framework.process.dto.ProcessTaskSlaVo">
        SELECT `processtask_id` AS processTaskId,
               `id`,
               `name`,
               `config`
        FROM `processtask_sla`
        WHERE id = #{value}
    </select>

    <select id="getProcessTaskSlaNotifyById" parameterType="java.lang.Long"
            resultType="codedriver.framework.process.dto.ProcessTaskSlaNotifyVo">
        SELECT id,
               `sla_id`       AS slaId,
               `hash`,
               `trigger_time` as triggerTime,
               `config`
        FROM `processtask_sla_notify`
        WHERE id =
              #{value}
    </select>

    <resultMap id="processTaskStepRelMap" type="codedriver.framework.process.dto.ProcessTaskStepRelVo">
        <id column="uuid" property="processStepRelUuid"/>
        <result column="processtask_id" property="processTaskId"/>
        <result column="from_process_step_uuid" property="fromProcessStepUuid"/>
        <result column="to_process_step_uuid" property="toProcessStepUuid"/>
        <result column="from_processtask_step_id" property="fromProcessTaskStepId"/>
        <result column="to_processtask_step_id" property="toProcessTaskStepId"/>
        <result column="toProcessStepHandler" property="toProcessStepHandler"/>
        <result column="condition" property="condition"/>
        <result column="is_hit" property="isHit"/>
        <result column="name" property="name"/>
        <result column="type" property="type"/>
    </resultMap>
    <select id="getProcessTaskStepRelByProcessTaskId" parameterType="java.lang.Long" resultMap="processTaskStepRelMap">
        SELECT `processtask_id`,
               `from_process_step_uuid`,
               `to_process_step_uuid`,
               `from_processtask_step_id`,
               `to_processtask_step_id`,
               (SELECT xx.`handler`
                FROM `processtask_step` xx
                WHERE xx.id = `to_processtask_step_id`) AS toProcessStepHandler,
               `condition`,
               `uuid`,
               `is_hit`,
               `name`,
               `type`
        FROM `processtask_step_rel`
        WHERE processtask_id = #{value}
    </select>

    <select id="getProcessTaskStepRelListByProcessTaskIdList" parameterType="java.lang.Long"
            resultMap="processTaskStepRelMap">
        SELECT
        `processtask_id`,
        `from_process_step_uuid`,
        `to_process_step_uuid`,
        `from_processtask_step_id`,
        `to_processtask_step_id`,
        `uuid`,
        `is_hit`,
        `type`
        FROM `processtask_step_rel`
        WHERE `processtask_id` IN
        <foreach collection="list" item="processTaskId" open="(" separator="," close=")">
            #{processTaskId}
        </foreach>
    </select>

    <resultMap id="processTaskSlaMap" type="codedriver.framework.process.dto.ProcessTaskSlaVo">
        <id column="id" property="id"/>
        <result column="processTaskId" property="processTaskId"/>
        <result column="name" property="name"/>
        <result column="config" property="config"/>
        <association property="slaTimeVo" javaType="codedriver.framework.process.dto.ProcessTaskSlaTimeVo">
            <result column="expireTime" property="expireTime"/>
            <result column="realExpireTime" property="realExpireTime"/>
            <result column="expireTimeLong" property="expireTimeLong"/>
            <result column="realExpireTimeLong" property="realExpireTimeLong"/>
            <result column="timeLeft" property="timeLeft"/>
            <result column="realTimeLeft" property="realTimeLeft"/>
            <result column="timeSum" property="timeSum"/>
            <result column="status" property="status"/>
            <result column="processTaskStepId" property="processTaskStepId"/>
        </association>
    </resultMap>

    <select id="getProcessTaskSlaByProcessTaskStepId" parameterType="java.lang.Long" resultMap="processTaskSlaMap">
        SELECT a.`processtask_id`  as processTaskId,
               a.`id`,
               a.`name`,
               a.`config`,
               c.`expire_time`     as expireTime,
               c.`realexpire_time` AS realExpireTime,
               c.`time_left`       as timeLeft,
               c.`realtime_left`   as realTimeLeft,
               c.`time_sum`        as timeSum,
               c.`status`        as status
        FROM `processtask_sla` a
                 JOIN `processtask_step_sla` b ON a.`id` = b.`sla_id`
                 LEFT JOIN `processtask_sla_time` c ON a.`id` = c.`sla_id`
        WHERE b.`processtask_step_id` = #{value}
        ORDER BY c.`expire_time` ASC
    </select>

    <select id="getProcessTaskSlaByProcessTaskId" parameterType="java.lang.Long" resultMap="processTaskSlaMap">
        SELECT a.`processtask_id`                         as processTaskId,
               a.`id`,
               a.`name`,
               a.`config`,
               b.`processtask_step_id`                    as
                                                             processTaskStepId,
               UNIX_TIMESTAMP(c.`expire_time`) * 1000     as expireTimeLong,
               UNIX_TIMESTAMP(c.`realexpire_time`) * 1000 AS realExpireTimeLong,
               c.`time_left`                              as timeLeft,
               c.`realtime_left`                          as
                                                             realTimeLeft,
               c.`time_sum`                               as timeSum,
               c.`status`                               as status
        FROM `processtask_sla` a
                 JOIN `processtask_step_sla` b ON a.`id` = b.`sla_id`
                 LEFT JOIN `processtask_sla_time` c ON a.`id` = c.`sla_id`
        WHERE a.`processtask_id` =
              #{value}
        ORDER BY c.`expire_time` ASC
    </select>

    <resultMap type="codedriver.framework.process.dto.ProcessTaskSlaTimeVo" id="processTaskSlaTimeMap">
        <id column="sla_id" property="slaId"/>
        <result column="processTaskId" property="processTaskId"/>
        <result column="processTaskStepId" property="processTaskStepId"/>
        <result column="name" property="name"/>
        <result column="expireTime" property="expireTime"/>
        <result column="realExpireTime" property="realExpireTime"/>
        <result column="timeLeft" property="timeLeft"/>
        <result column="realTimeLeft" property="realTimeLeft"/>
        <result column="timeSum" property="timeSum"/>
        <result column="status" property="status"/>
    </resultMap>
    <select id="getProcessTaskSlaTimeByProcessTaskStepIdList" parameterType="java.util.List"
            resultMap="processTaskSlaTimeMap">
        SELECT
        a.`processtask_id` as processTaskId,
        a.`name`,
        b.`processtask_step_id` as processTaskStepId,
        c.`sla_id`,
        c.`expire_time` as expireTime,
        c.`realexpire_time` AS realExpireTime,
        c.`time_left` as
        timeLeft,
        c.`realtime_left` as realTimeLeft,
        c.`time_sum` as timeSum,
        c.`status` as status
        FROM `processtask_sla` a
        JOIN `processtask_step_sla` b ON a.`id` = b.`sla_id`
        JOIN `processtask_sla_time` c ON a.`id` = c.`sla_id`
        WHERE b.`processtask_step_id` in
        <foreach collection="list" item="stepId" open="(" separator="," close=")">
            #{stepId}
        </foreach>
        ORDER BY b.`processtask_step_id`, c.`expire_time` ASC
    </select>

    <select id="getProcessTaskSlaTimeBySlaId" parameterType="java.lang.Long"
            resultType="codedriver.framework.process.dto.ProcessTaskSlaTimeVo">
        SELECT `sla_id`          as slaId,
               `expire_time`     AS expireTime,
               `realexpire_time` AS realExpireTime,
               `time_left`       as
                                    timeLeft,
               `realtime_left`   as realTimeLeft,
               `time_sum`        as timeSum,
               `status`        as status
        FROM `processtask_sla_time`
        WHERE sla_id = #{value}
    </select>

    <resultMap id="processTaskMap" type="codedriver.framework.process.dto.ProcessTaskVo">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="process_uuid" property="processUuid"/>
        <result column="channel_uuid" property="channelUuid"/>
        <result column="config_hash" property="configHash"/>
        <result column="priority_uuid" property="priorityUuid"/>
        <result column="status" property="status"/>
        <result column="start_time" property="startTime"/>
        <result column="end_time" property="endTime"/>
        <result column="owner" property="owner"/>
        <result column="reporter" property="reporter"/>
        <!--<result column="reporterName" property="reporterName" />-->
        <result column="expire_time" property="expireTime"/>
        <result column="worktime_uuid" property="worktimeUuid"/>
        <result column="error" property="error"/>
        <result column="is_show" property="isShow"/>
        <result column="serial_number" property="serialNumber"/>
        <result column="source" property="source"/>
        <association property="ownerVo" javaType="codedriver.framework.dto.UserVo">
            <result property="uuid" column="owner"/>
            <result property="userName" column="ownerName"/>
            <result property="userInfo" column="ownerInfo"/>
            <result property="vipLevel" column="ownerVipLevel"/>
            <result property="pinyin" column="ownerPinyin"/>
        </association>
        <association property="reporterVo" javaType="codedriver.framework.dto.UserVo">
            <result property="uuid" column="reporter"/>
            <result property="userName" column="reporterName"/>
            <result property="userInfo" column="reporterInfo"/>
            <result property="vipLevel" column="reporterVipLevel"/>
            <result property="pinyin" column="reporterPinyin"/>
        </association>
    </resultMap>

    <select id="getProcessTaskBaseInfoById" parameterType="java.lang.Long" resultMap="processTaskMap">
        SELECT `id`,
               `serial_number`,
               `title`,
               `process_uuid`,
               `channel_uuid`,
               `config_hash`,
               `priority_uuid`,
               `status`,
               `start_time`,
               `end_time`,
               `owner`,
               (SELECT user_name FROM `user` x WHERE x.uuid = `owner`)    AS
                                                                             ownerName,
               (SELECT vip_level
                FROM `user` x
                WHERE x.uuid = `owner`)                                   AS ownerVipLevel,
               `reporter`,
               (SELECT user_name FROM `user` x WHERE x.uuid = `reporter`) AS reporterName,
               `expire_time`,
               `worktime_uuid`,
               `error`,
               `is_show`,
               `serial_number`,
               `source`
        FROM `processtask`
        WHERE id = #{value}
    </select>

    <sql id="getProcessingTaskByConditionSql">
        FROM
        processtask pt
        LEFT JOIN processtask_step pts ON pt.id = pts.processtask_id
        LEFT JOIN processtask_step_user ptsu ON pts.processtask_id = ptsu.processtask_id
        AND pts.id = ptsu.processtask_step_id
        LEFT JOIN processtask_step_worker ptsw ON pts.processtask_id = ptsw.processtask_id
        AND pts.id = ptsw.processtask_step_id
        where
        pt.`status` in ('running')
        and
        pts.`status` in ('pending','running' )
        and (
        ptsu.`user_uuid` in (#{conditionMap.userUuid})
        <if test="conditionMap.containsKey('teamUuidList')">
            or
            ptsw.`uuid` in
            <foreach collection="conditionMap.teamUuidList" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
            and
            ptsw.`type` in ('team')
        </if>
        <if test="conditionMap.containsKey('roleUuidList')">
            or
            ptsw.`uuid` in
            <foreach collection="conditionMap.roleUuidList" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
            and
            ptsw.`type` in ('role')
        </if>
        or ptsw.`uuid` in (#{conditionMap.userUuid})
        and ptsw.`type` in ('user')
        )
        and ( pts.type != 'start'
        and ( ptsu.`user_uuid` in
        <foreach collection="conditionMap.stepteam.userUuidList" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        or
        ptsw.`uuid` in
        <foreach collection="conditionMap.stepteam.uuidList" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        )
        )
    </sql>

    <select id="getProcessingTaskIdListByCondition" parameterType="java.util.Map" resultType="java.lang.Long">
        SELECT
        pt.id
        <include refid="getProcessingTaskByConditionSql"/>
        group by pt.`id`
        limit 0,50
    </select>

    <select id="getProcessingTaskCountByCondition" parameterType="java.util.Map" resultType="int">
        SELECT
        count(distinct pt.id)
        <include refid="getProcessingTaskByConditionSql"/>
    </select>

    <select id="getTaskListByIdList" parameterType="java.util.List" resultMap="workcenterProcessTaskMap">
        SELECT
        pt.title AS title,
        pt.serial_number AS serialNumber,
        owner.uuid AS ownerUuid,
        owner.user_name AS ownerName,
        owner.user_info AS ownerInfo,
        owner.vip_level AS ownerVipLevel,
        owner.pinyin AS ownerPinYin,
        pri.uuid AS priorityUuid,
        pri.NAME AS priorityName,
        pri.color AS priorityColor,
        reporter.uuid AS reporterUuid,
        reporter.user_name AS reporterName,
        reporter.user_info AS reporterInfo,
        reporter.vip_level AS reporterVipLevel,
        reporter.pinyin AS reporterPinYin,
        pts.id AS processTaskStepId,
        pts.NAME AS processTaskStepName,
        pts.processtask_id AS processTaskId,
        pts.HANDLER AS processTaskStepHandler,
        ptsw.uuid AS stepWorkerUuid,
        ptsw.type AS stepWorkerType,
        ptsw.user_type AS stepWorkerUserType,
        ptsu.STATUS AS stepUserUserStatus,
        ptsu.user_type AS stepUserUserType,
        ptsuser.user_name AS stepUserUserName,
        ptsuser.uuid AS stepUserUserUuid,
        ptsuser.user_info AS stepUserUserInfo,
        ptsuser.vip_level AS stepUserUserVipLevel,
        ptsuser.pinyin AS stepUserUserPinyin,
        pts.STATUS AS processTaskStepStatus,
        pts.is_active AS processTaskStepIsActive,
        pt.STATUS AS STATUS,
        cata.uuid AS catalogUuid,
        cata.NAME AS catalogName,
        ct.uuid AS ChannelTypeUuid,
        ct.NAME AS ChannelTypeName,
        ct.color AS ChannelTypeColor,
        c.uuid AS channelUuid,
        c.NAME AS channelName,
        pt.start_time AS start_time,
        wt.NAME AS worktimeName,
        pt.end_time AS end_time,
        ptsl.id AS processTaskSlaId,
        ptsl.NAME AS processTaskSlaName,
        ptsl.config AS processTaskSlaConfig,
        ptslt.expire_time AS expireTime,
        ptslt.realexpire_time AS realExpireTime,
        ptslt.time_left AS timeLeft,
        ptslt.realtime_left AS realTimeLeft,
        pt.is_show AS is_show,
        pt.id AS id
        FROM
        processtask pt
        LEFT JOIN `user` owner ON pt.owner = owner.uuid
        LEFT JOIN priority pri ON pt.priority_uuid = pri.uuid
        LEFT JOIN `user` reporter ON pt.reporter = reporter.uuid
        LEFT JOIN processtask_step pts ON pt.id = pts.processtask_id
        LEFT JOIN processtask_step_user ptsu ON pts.processtask_id = ptsu.processtask_id
        AND pts.id = ptsu.processtask_step_id
        LEFT JOIN processtask_step_worker ptsw ON pts.processtask_id = ptsw.processtask_id
        AND pts.id = ptsw.processtask_step_id
        LEFT JOIN `user` ptsuser ON ptsu.user_uuid = ptsuser.uuid
        LEFT JOIN channel c ON pt.channel_uuid = c.uuid
        LEFT JOIN catalog cata ON c.parent_uuid = cata.uuid
        LEFT JOIN channel_type ct ON c.channel_type_uuid = ct.uuid
        LEFT JOIN channel_worktime cwt ON c.uuid = cwt.channel_uuid
        LEFT JOIN worktime wt ON cwt.worktime_uuid = wt.uuid
        LEFT JOIN processtask_sla ptsl ON pts.processtask_id = ptsl.processtask_id
        LEFT JOIN processtask_sla_time ptslt ON ptsl.id = ptslt.sla_id
        where pt.id in
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        order by pt.`id` desc
    </select>

    <select id="getProcessTaskFormByProcessTaskId" parameterType="java.lang.Long"
            resultType="codedriver.framework.process.dto.ProcessTaskFormVo">
        SELECT a.`processtask_id`    as processTaskId,
               a.`form_uuid`         as formUuid,
               a.`form_name`         as formName,
               a.`form_content_hash` as formContentHash
        FROM `processtask_form` a
        WHERE a.`processtask_id` = #{value}
    </select>

    <select id="getProcessTaskFormListByProcessTaskIdList" parameterType="java.util.List"
            resultType="codedriver.framework.process.dto.ProcessTaskFormVo">
        SELECT a.`processtask_id`    as processTaskId,
               a.`form_uuid`         as formUuid,
               a.`form_name`         as formName,
               a.`form_content_hash` as formContentHash
        FROM `processtask_form` a
        WHERE a.`processtask_id` IN
        <foreach collection="list" item="processTaskId" open="(" separator="," close=")">
            #{processTaskId}
        </foreach>
    </select>

    <select id="getProcessTaskStepFormAttributeDataByProcessTaskId" parameterType="java.lang.Long"
            resultType="codedriver.framework.process.dto.ProcessTaskFormAttributeDataVo">
        SELECT `processtask_id` AS processTaskId,
               `attribute_uuid` AS attributeUuid,
               `attribute_label` AS attributeLabel,
               `type`           AS type,
               `data`,
               `sort`
        FROM `processtask_formattribute_data`
        WHERE `processtask_id` = #{value}
    </select>

    <select id="getProcessTaskStepFormAttributeDataByProcessTaskIdList" parameterType="java.util.List"
            resultType="codedriver.framework.process.dto.ProcessTaskFormAttributeDataVo">
        SELECT `processtask_id` AS processTaskId,
               `attribute_uuid` AS attributeUuid,
               `attribute_label` AS attributeLabel,
               `type`           AS type,
               `data`,
               `sort`
        FROM `processtask_formattribute_data`
        WHERE `processtask_id` IN
        <foreach collection="list" item="processTaskId" open="(" separator="," close=")">
            #{processTaskId}
        </foreach>
    </select>

    <select id="getProcessTaskStepContentByProcessTaskStepId" parameterType="java.lang.Long"
            resultType="codedriver.framework.process.dto.ProcessTaskStepContentVo">
        SELECT `id`,
               `processtask_id`      AS processTaskId,
               `processtask_step_id` AS processTaskStepId,
               `content_hash`        AS contentHash,
               `type`,
               `fcd`,
               `fcu`,
               `lcd`,
               `lcu`
        FROM `processtask_step_content`
        WHERE `processtask_step_id` = #{value}
        ORDER BY id DESC
    </select>

    <select id="getProcessTaskStepContentByProcessTaskStepIdList" parameterType="java.lang.Long"
            resultType="codedriver.framework.process.dto.ProcessTaskStepContentVo">
        SELECT `id`,
               `processtask_id`      AS processTaskId,
               `processtask_step_id` AS processTaskStepId,
               `content_hash`        AS contentHash,
               `type`,
               `fcd`,
               `fcu`,
               `lcd`,
               `lcu`
        FROM `processtask_step_content`
        WHERE `processtask_step_id` IN
        <foreach collection="list" item="processTaskStepId" open="(" separator="," close=")">
            #{processTaskStepId}
        </foreach>
        ORDER BY `lcd` DESC
    </select>

    <resultMap id="processTaskStepUserMap" type="codedriver.framework.process.dto.ProcessTaskStepUserVo">
        <result column="processtask_id" property="processTaskId"/>
        <result column="processtask_step_id" property="processTaskStepId"/>
        <result column="user_type" property="userType"/>
        <result column="status" property="status"/>
        <result column="action" property="action"/>
        <result column="start_time" property="startTime"/>
        <result column="end_time" property="endTime"/>
        <result column="active_time" property="activeTime"/>
        <result column="user_uuid" property="userUuid" />
        <result column="user_name" property="userName" />
    </resultMap>

    <select id="getProcessTaskStepUserByStepId" resultMap="processTaskStepUserMap">
        SELECT
        `processtask_id`,
        `processtask_step_id`,
        `user_uuid`,
        `user_name`,
        `user_type`,
        `status`,
        `action`,
        `start_time`,
        `end_time`,
        `active_time`
        FROM `processtask_step_user`
        WHERE processtask_step_id = #{processTaskStepId}
        <if test="userType != null and userType != ''">
            and user_type = #{userType}
        </if>
    </select>

    <select id="getProcessTaskStepWorkerPolicy"
            parameterType="codedriver.framework.process.dto.ProcessTaskStepWorkerPolicyVo"
            resultType="codedriver.framework.process.dto.ProcessTaskStepWorkerPolicyVo">
        SELECT
        `processtask_id` as processTaskId,
        `processtask_step_id` as processTaskStepId,
        `process_step_uuid` as processStepUuid,
        `policy`,
        `sort`,
        `config`
        FROM `processtask_step_worker_policy`
        <where>
            <if test="processTaskId != null">
                AND `processtask_id` = #{processTaskId}
            </if>
            <if test="processTaskStepId != null">
                AND `processtask_step_id` = #{processTaskStepId}
            </if>
        </where>
        ORDER BY `sort`
    </select>

    <resultMap id="processTaskStepWorkerMap" type="codedriver.framework.process.dto.ProcessTaskStepWorkerVo">
        <id column="uuid" property="uuid"/>
        <id column="processtask_step_id" property="processTaskStepId"/>
        <id column="processtask_id" property="processTaskId"/>
        <result column="type" property="type"/>
        <!-- <result column="name" property="name" /> -->
        <result column="user_type" property="userType"/>
    </resultMap>
    <select id="getProcessTaskStepWorkerByProcessTaskIdAndProcessTaskStepId" resultMap="processTaskStepWorkerMap">
        SELECT
        ptsw.`processtask_id`,
        ptsw.`processtask_step_id`,
        ptsw.`type`,
        ptsw.`uuid`,
        <!-- CASE `type`
		WHEN 'user' THEN (SELECT u.`user_name` FROM `user` u WHERE u.`uuid` =
		ptsw.`uuid`)
		WHEN 'team' THEN (SELECT t.`name` FROM `team` t WHERE t.`uuid` = ptsw.`uuid`)
		WHEN 'role' THEN (SELECT r.`name` FROM `role` r WHERE r.`uuid` = ptsw.`uuid`)
		ELSE NULL END AS `name`, -->
        ptsw.`user_type`
        FROM `processtask_step_worker` ptsw
        WHERE ptsw.`processtask_id` = #{processTaskId}
        <if test="processTaskStepId != null">
            AND ptsw.`processtask_step_id` = #{processTaskStepId}
        </if>
    </select>

    <select id="getProcessTaskStepWorkerListByProcessTaskIdList" parameterType="java.lang.Long"
            resultMap="processTaskStepWorkerMap">
        SELECT
        `processtask_id`,
        `processtask_step_id`,
        `type`,
        `uuid`,
        `user_type`
        FROM `processtask_step_worker`
        WHERE `processtask_id` IN
        <foreach collection="list" item="processTaskId" open="(" separator="," close=")">
            #{processTaskId}
        </foreach>
    </select>

    <select id="getProcessTaskStepWorkerListByProcessTaskStepIdListAndUserType" resultMap="processTaskStepWorkerMap">
        SELECT
        `processtask_id`,
        `processtask_step_id`,
        `type`,
        `uuid`,
        `user_type`
        FROM `processtask_step_worker`
        WHERE `user_type` = #{userType}
        AND `processtask_step_id` IN
        <foreach collection="processTaskStepIdList" item="processTaskStepId" open="(" separator="," close=")">
            #{processTaskStepId}
        </foreach>
    </select>

    <!--<select id="getFromProcessTaskStepByToId" parameterType="java.lang.Long"
            resultType="codedriver.framework.process.dto.ProcessTaskStepVo">
        SELECT a.`id`,
               a.`processtask_id`    AS processTaskId,
               a.`name`,
               a.`process_step_uuid` AS processStepUuid,
               a.`status`,
               a.`result`,
               a.`type`,
               a.`handler`,
               a.`is_active`         AS isActive,
               a.`config_hash`       AS configHash,
               a.`active_time`       AS activeTime,
               a.`start_time`        AS startTime,
               a.`end_time`          AS endTime,
               a.`error`
        FROM `processtask_step` a
                 JOIN `processtask_step_rel` b ON a.`id` = b.`from_processtask_step_id` AND b.`is_hit` = 1
        WHERE b.`to_processtask_step_id` = #{value}
    </select>-->

    <select id="getFromProcessTaskStepIdListByToId" parameterType="java.lang.Long" resultType="java.lang.Long">
        SELECT `from_processtask_step_id` FROM `processtask_step_rel`
        WHERE `to_processtask_step_id` = #{value} AND `is_hit` = 1
    </select>

    <select id="getProcessTaskStepByConvergeId" parameterType="java.lang.Long"
            resultType="codedriver.framework.process.dto.ProcessTaskStepVo">
        SELECT b.`id`,
               b.`status`,
               b.`name`,
               b.`type`,
               b.`handler`,
               b.`is_active` AS isActive,
               a.`is_check`  AS isCheck
        FROM `processtask_converge` a
                 JOIN
             `processtask_step` b ON a.`processtask_step_id` = b.`id`
        WHERE a.`converge_id` = #{value}
    </select>

    <!--<select id="getProcessTaskStepIdByConvergeId" parameterType="java.lang.Long" resultType="java.lang.Long">
        SELECT a.`processtask_step_id`
        FROM `processtask_converge` a
        WHERE a.`converge_id` = #{value}
    </select>-->

    <select id="getProcessTaskLockById" parameterType="java.lang.Long" resultType="java.lang.Long">
        SELECT id
        FROM processtask
        WHERE id = #{value} FOR
        UPDATE
    </select>

    <select id="getToProcessTaskStepByFromIdAndType" resultType="codedriver.framework.process.dto.ProcessTaskStepVo">
        SELECT
        a.`id`,
        a.`processtask_id` AS processTaskId,
        a.`name`,
        a.`process_step_uuid` AS processStepUuid,
        a.`status`,
        a.`result`,
        a.`type`,
        a.`handler`,
        a.`is_active` AS isActive,
        a.`active_time` AS activeTime,
        a.`start_time` AS startTime,
        a.`end_time` AS endTime,
        a.`error`,
        b.`name` AS aliasName,
        b.`type` AS flowDirection
        FROM
        `processtask_step` a JOIN `processtask_step_rel` b ON a.`id` =
        b.`to_processtask_step_id`
        WHERE
        b.`from_processtask_step_id` = #{fromProcessTaskStepId}
        <if test="type != null and type != ''">
            and b.`type` = #{type}
        </if>
    </select>

    <select id="getToProcessTaskStepIdListByFromIdAndType" resultType="java.lang.Long">
        SELECT `to_processtask_step_id` FROM `processtask_step_rel`
        WHERE `from_processtask_step_id` = #{fromProcessTaskStepId}
        <if test="type != null and type != ''">
            and `type` = #{type}
        </if>
    </select>

    <select id="checkProcessTaskConvergeIsExists" parameterType="codedriver.framework.process.dto.ProcessTaskConvergeVo"
            resultType="int">
        SELECT COUNT(1)
        FROM `processtask_converge`
        WHERE processtask_id =
              #{processTaskId}
          AND converge_id = #{convergeId}
          AND processtask_step_id = #{processTaskStepId}
    </select>

    <select id="getProcessTaskConvergeListByStepId" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskConvergeVo">
        SELECT
            `converge_id` AS convergeId,
            `processtask_step_id` AS processTaskStepId,
            `processtask_id` AS processTaskId,
            `is_check` AS isCkeck
        FROM `processtask_converge`
        WHERE processtask_step_id = #{processTaskStepId}
    </select>

    <select id="getStartProcessTaskStepByProcessTaskId" resultType="codedriver.framework.process.dto.ProcessTaskStepVo">
        SELECT `id`,
               `processtask_id`    AS processTaskId,
               `name`,
               `process_step_uuid` AS processStepUuid,
               `status`,
               `result`,
               `type`,
               `handler`,
               `is_active`         AS isActive,
               `active_time`       AS activeTime,
               `start_time`        AS startTime,
               `end_time`          AS endTime,
               `error`,
               `config_hash`       AS configHash
        FROM `processtask_step`
        WHERE `processtask_id` = #{value}
          AND `type` = 'start'
    </select>

    <select id="getEndProcessTaskStepByProcessTaskId" resultType="codedriver.framework.process.dto.ProcessTaskStepVo">
        SELECT `id`,
               `processtask_id`    AS processTaskId,
               `name`,
               `process_step_uuid` AS processStepUuid,
               `status`,
               `result`,
               `type`,
               `handler`,
               `is_active`         AS isActive,
               `active_time`       AS activeTime,
               `start_time`        AS startTime,
               `end_time`          AS endTime,
               `error`,
               `config_hash`       AS configHash
        FROM `processtask_step`
        WHERE `processtask_id` = #{value}
          AND `type` = 'end'
    </select>

    <select id="getProcessTaskStepByProcessTaskIdAndType"
            resultType="codedriver.framework.process.dto.ProcessTaskStepVo">
        SELECT `id`,
               `processtask_id`    AS processTaskId,
               `name`,
               `process_step_uuid` AS processStepUuid,
               `status`,
               `result`,
               `type`,
               `handler`,
               `is_active`         AS isActive,
               `config_hash`       AS configHash,
               `active_time`       AS activeTime,
               `start_time`        AS startTime,
               `end_time`          AS endTime,
               `error`
        FROM `processtask_step`
        WHERE `processtask_id` = #{processTaskId}
          AND `type` = #{type}
    </select>

    <resultMap id="processTaskStepDetailMap" type="codedriver.framework.process.dto.ProcessTaskStepVo">
        <id column="id" property="id"/>
        <result column="processTaskId" property="processTaskId"/>
        <result column="name" property="name"/>
        <result column="processStepUuid" property="processStepUuid"/>
        <result column="status" property="status"/>
        <result column="result" property="result"/>
        <result column="type" property="type"/>
        <result column="handler" property="handler"/>
        <result column="isActive" property="isActive"/>
        <result column="startTime" property="startTime"/>
        <result column="configHash" property="configHash"/>
        <result column="endTime" property="endTime"/>
        <result column="error" property="error"/>
        <collection property="workerList" ofType="codedriver.framework.process.dto.ProcessTaskStepWorkerVo">
            <result column="workerType" property="type"/>
            <result column="uuid" property="uuid"/>
        </collection>
        <collection property="userList" ofType="codedriver.framework.process.dto.ProcessTaskStepUserVo">
            <result column="userType" property="userType"/>
            <result column="userStatus" property="status"/>
            <result column="user_uuid" property="userUuid"/>
        </collection>
    </resultMap>

    <select id="getProcessTaskActiveStepByProcessTaskIdAndProcessStepType" parameterType="java.lang.Long"
            resultMap="processTaskStepDetailMap">
        SELECT
        ps.`id`,
        ps.`processtask_id` AS processTaskId,
        ps.`name`,
        ps.`process_step_uuid` AS processStepUuid,
        ps.`status`,
        ps.`result`,
        ps.`type`,
        ps.`handler`,
        ps.`active_time` AS activeTime,
        ps.`start_time`
        AS startTime,
        ps.`end_time` AS endTime,
        ps.`error`,
        ps.`is_active` AS isActive,
        ps.`config_hash` AS configHash,
        psw.`type` as workerType,
        psw.`uuid`,
        psu.`user_uuid` as userUuid,
        psu.`status` as userStatus,
        psu.`user_type` AS userType
        FROM `processtask_step` ps
        LEFT JOIN `processtask_step_worker` psw ON ps.`processtask_id` = psw.`processtask_id` AND ps.`id` =
        psw.`processtask_step_id`
        LEFT JOIN
        `processtask_step_user` psu ON ps.`processtask_id` = psu.`processtask_id` AND ps.`id` =
        psu.`processtask_step_id`
        WHERE ps.`processtask_id` = #{processTaskId}
        <if test="processStepTypeList != null and processStepTypeList.size()>0">
            AND ps.`type` in
            <foreach collection="processStepTypeList" item="processStepType" open="(" separator="," close=")">
                #{processStepType}
            </foreach>
        </if>
        <if test="isActive != null">
            AND ps.`is_active` = #{isActive}
        </if>
    </select>

    <select id="getProcessTaskStepRelByToId" parameterType="java.lang.Long"
            resultType="codedriver.framework.process.dto.ProcessTaskStepRelVo">
        SELECT `processtask_id`                         AS processTaskId,
               `from_process_step_uuid`                 AS fromProcessStepUuid,
               `to_process_step_uuid`                   AS toProcessStepUuid,
               `from_processtask_step_id`               AS fromProcessTaskStepId,
               `to_processtask_step_id`                 AS toProcessTaskStepId,
               (SELECT xx.`handler`
                FROM `processtask_step` xx
                WHERE xx.id = `to_processtask_step_id`) AS toProcessStepHandler,
               `condition`,
               `is_hit`                                 AS isHit,
               `name`,
               `type`
        FROM `processtask_step_rel`
        WHERE to_processtask_step_id = #{value}
    </select>

    <select id="getProcessTaskStepRelByFromId" parameterType="java.lang.Long"
            resultType="codedriver.framework.process.dto.ProcessTaskStepRelVo">
        SELECT `processtask_id`                         AS processTaskId,
               `from_process_step_uuid`                 AS fromProcessStepUuid,
               `to_process_step_uuid`                   AS toProcessStepUuid,
               `from_processtask_step_id`               AS fromProcessTaskStepId,
               `to_processtask_step_id`                 AS toProcessTaskStepId,
               (SELECT xx.`handler`
                FROM `processtask_step` xx
                WHERE xx.id = `to_processtask_step_id`) AS toProcessStepHandler,
               `condition`,
               `is_hit`                                 AS isHit,
               `name`,
               `type`
        FROM `processtask_step_rel`
        WHERE from_processtask_step_id = #{value}
    </select>

    <select id="getProcessTaskStepRelListByFromIdList" parameterType="java.util.List"
            resultType="codedriver.framework.process.dto.ProcessTaskStepRelVo">
        SELECT `processtask_id`                         AS processTaskId,
               `from_process_step_uuid`                 AS fromProcessStepUuid,
               `to_process_step_uuid`                   AS toProcessStepUuid,
               `from_processtask_step_id`               AS fromProcessTaskStepId,
               `to_processtask_step_id`                 AS toProcessTaskStepId,
               (SELECT xx.`handler`
                FROM `processtask_step` xx
                WHERE xx.id = `to_processtask_step_id`) AS toProcessStepHandler,
               `condition`,
               `is_hit`                                 AS isHit,
               `name`,
               `type`
        FROM `processtask_step_rel`
        WHERE from_processtask_step_id IN
        <foreach collection="list" item="fromId" open="(" separator="," close=")">
            #{fromId}
        </foreach>
    </select>

    <select id="getProcessTaskStepBaseInfoById" parameterType="java.lang.Long"
            resultType="codedriver.framework.process.dto.ProcessTaskStepVo">
        SELECT `id`,
               `processtask_id`    AS processTaskId,
               `name`,
               `process_step_uuid` AS processStepUuid,
               `status`,
               `result`,
               `type`,
               `handler`,
               `is_active`         AS isActive,
               `config_hash`       AS configHash,
               `active_time`       AS activeTime,
               `start_time`        AS startTime,
               `end_time`          AS endTime,
               `error`
        FROM `processtask_step`
        WHERE id =
              #{value}
    </select>

    <select id="getProcessTaskStepBaseInfoBySlaId" parameterType="java.lang.Long"
            resultType="codedriver.framework.process.dto.ProcessTaskStepVo">
        SELECT `id`,
               `processtask_id`    AS processTaskId,
               `name`,
               `process_step_uuid` AS processStepUuid,
               `status`,
               `result`,
               `type`,
               `handler`,
               `is_active`         AS isActive,
               `config_hash`       AS configHash,
               `active_time`       AS activeTime,
               `start_time`        AS startTime,
               `end_time`          AS endTime,
               `error`
        FROM `processtask_step` a
                 JOIN
             `processtask_step_sla` b ON
                 a.id = b.processtask_step_id
        WHERE b.sla_id = #{value}
    </select>

    <select id="getProcessTaskStepBaseInfoByProcessTaskId" parameterType="java.lang.Long"
            resultType="codedriver.framework.process.dto.ProcessTaskStepVo">
        SELECT `id`,
               `processtask_id`    AS processTaskId,
               `name`,
               `process_step_uuid` AS processStepUuid,
               `status`,
               `result`,
               `type`,
               `handler`,
               `is_active`         AS isActive,
               `config_hash`       AS configHash,
               `active_time`       AS activeTime,
               `start_time`        AS startTime,
               `end_time`          AS endTime,
               `error`
        FROM `processtask_step`
        WHERE `processtask_id` = #{value}
    </select>

    <select id="getProcessTaskById" parameterType="java.lang.Long"
            resultType="codedriver.framework.process.dto.ProcessTaskVo">
        SELECT `id`,
               `title`,
               `process_uuid`  AS processUuid,
               `channel_uuid`  AS channelUuid,
               `config_hash`   AS configHash,
               `priority_uuid` AS priorityUuid,
               `status`,
               `start_time`    AS startTime,
               `end_time`      AS endTime,
               `owner`,
               `reporter`,
               `expire_time`   AS expireTime,
               `worktime_uuid` AS worktimeUuid,
               `error`,
               `is_show`       as isShow,
               `serial_number` AS serialNumber,
               `source`
        FROM `processtask`
        WHERE `id` = #{id}
    </select>

    <resultMap type="codedriver.framework.process.dto.ProcessTaskStepAuditVo" id="processTaskStepAuditMap">
        <id column="id" property="id"/>
        <result column="processtask_id" property="processTaskId"/>
        <result column="processtask_step_id" property="processTaskStepId"/>
        <result column="user_uuid" property="userUuid"/>
        <result column="action_time" property="actionTime"/>
        <result column="action" property="action"/>
        <result column="step_status" property="stepStatus"/>
        <result column="description_hash" property="descriptionHash"/>
        <result column="original_user" property="originalUser"/>
        <collection property="auditDetailList" ofType="codedriver.framework.process.dto.ProcessTaskStepAuditDetailVo">
            <result column="audit_id" property="auditId"/>
            <result column="type" property="type"/>
            <result column="old_content" property="oldContent"/>
            <result column="new_content" property="newContent"/>
        </collection>
    </resultMap>
    <select id="getProcessTaskStepAuditList" parameterType="codedriver.framework.process.dto.ProcessTaskStepAuditVo"
            resultMap="processTaskStepAuditMap">
        SELECT
        a.`id`,
        a.`processtask_id`,
        a.`processtask_step_id`,
        a.`user_uuid`,
        a.`action_time`,
        a.`action`,
        a.`step_status`,
        a.`original_user`,
        a.`description_hash`,
        b.`audit_id`,
        b.`type`,
        b.`old_content`,
        b.`new_content`
        FROM `processtask_step_audit` a
        LEFT JOIN `processtask_step_audit_detail` b ON b.`audit_id` = a.`id`
        WHERE a.`processtask_id` = #{processTaskId}
        <if test="processTaskStepId != null">
            AND a.`processtask_step_id` = #{processTaskStepId}
        </if>
    </select>

    <resultMap type="codedriver.framework.process.dto.ProcessTaskStepVo" id="processTaskStepMap">
        <id column="id" property="id"/>
        <result column="processtask_id" property="processTaskId"/>
        <result column="name" property="name"/>
        <result column="process_step_uuid" property="processStepUuid"/>
        <result column="status" property="status"/>
        <result column="result" property="result"/>
        <result column="type" property="type"/>
        <result column="handler" property="handler"/>
        <result column="is_active" property="isActive"/>
        <result column="start_time" property="startTime"/>
        <result column="end_time" property="endTime"/>
        <result column="error" property="error"/>
        <result column="expire_time" property="expireTime"/>
        <result column="config_hash" property="configHash"/>
    </resultMap>
    <select id="getProcessTaskStepListByProcessTaskId" parameterType="java.lang.Long" resultMap="processTaskStepMap">
        SELECT `id`,
               `processtask_id`,
               `name`,
               `process_step_uuid`,
               `status`,
               `result`,
               `type`,
               `handler`,
               `is_active`,
               `active_time`,
               `start_time`,
               `end_time`,
               `error`,
               `expire_time`,
               `config_hash`
        FROM `processtask_step`
        WHERE `processtask_id` = #{processTaskId}
    </select>

    <select id="getProcessTaskStepListByProcessTaskIdList" parameterType="java.lang.Long"
            resultMap="processTaskStepMap">
        SELECT
        `id`,
        `processtask_id`,
        `name`,
        `process_step_uuid`,
        `status`,
        `result`,
        `type`,
        `handler`,
        `is_active`,
        `active_time`,
        `start_time`,
        `end_time`,
        `expire_time`,
        `config_hash`
        FROM `processtask_step`
        WHERE `processtask_id` IN
        <foreach collection="list" item="processTaskId" open="(" separator="," close=")">
            #{processTaskId}
        </foreach>
    </select>

    <select id="getProcessTaskStepIdSetByChannelUuidListAndAuthenticationInfo" resultType="java.lang.Long">
        SELECT
            a.`processtask_step_id`
        FROM `processtask_step_worker` a
        JOIN `processtask` b ON b.`id` = a.`processtask_id` and b.`status` = 'running'
        JOIN `processtask_serial_number` c ON c.`processtask_id` = a.`processtask_id`
        WHERE ((`type` = 'user' AND a.`uuid` = #{authenticationInfoVo.userUuid})
        <if test="authenticationInfoVo.teamUuidList != null and authenticationInfoVo.teamUuidList.size() > 0">
            OR (`type` = 'team' AND a.`uuid` in
            <foreach collection="authenticationInfoVo.teamUuidList" item="teamUuid" open="(" separator="," close=")">
                #{teamUuid}
            </foreach>
            )
        </if>
        <if test="authenticationInfoVo.roleUuidList != null and authenticationInfoVo.roleUuidList.size() > 0">
            OR (`type` = 'role' AND a.`uuid` in
            <foreach collection="authenticationInfoVo.roleUuidList" item="roleUuid" open="(" separator="," close=")">
                #{roleUuid}
            </foreach>
            )
        </if>
        )
        <if test="keyword != null and keyword != ''">
            AND (b.`title` LIKE CONCAT('%', #{keyword}, '%') OR c.`serial_number` LIKE CONCAT('%', #{keyword}, '%'))
        </if>
        <if test="channelUuidList != null and channelUuidList.size() > 0">
            AND b.`channel_uuid` IN
            <foreach collection="channelUuidList" item="channelUuid" open="(" separator="," close=")">
                #{channelUuid}
            </foreach>
        </if>
    </select>

    <select id="getProcessTaskIdSetByChannelUuidListAndAuthenticationInfo" resultType="java.lang.Long">
        SELECT
        b.`id`
        FROM `processtask_step_worker` a
        JOIN `processtask` b ON b.`id` = a.`processtask_id` and b.`status` = 'running'
        WHERE ((`type` = 'user' AND a.`uuid` = #{authenticationInfoVo.userUuid})
        <if test="authenticationInfoVo.teamUuidList != null and authenticationInfoVo.teamUuidList.size() > 0">
            OR (`type` = 'team' AND a.`uuid` in
            <foreach collection="authenticationInfoVo.teamUuidList" item="teamUuid" open="(" separator="," close=")">
                #{teamUuid}
            </foreach>
            )
        </if>
        <if test="authenticationInfoVo.roleUuidList != null and authenticationInfoVo.roleUuidList.size() > 0">
            OR (`type` = 'role' AND a.`uuid` in
            <foreach collection="authenticationInfoVo.roleUuidList" item="roleUuid" open="(" separator="," close=")">
                #{roleUuid}
            </foreach>
            )
        </if>
        )
        <if test="channelUuidList != null and channelUuidList.size() > 0">
            AND b.`channel_uuid` IN
            <foreach collection="channelUuidList" item="channelUuid" open="(" separator="," close=")">
                #{channelUuid}
            </foreach>
        </if>
    </select>

    <select id="getProcessTaskFormAttributeDataByProcessTaskIdAndAttributeUuid"
            parameterType="codedriver.framework.process.dto.ProcessTaskFormAttributeDataVo"
            resultType="codedriver.framework.process.dto.ProcessTaskFormAttributeDataVo">
        SELECT `processtask_id` AS
                                   processTaskId,
               `type`,
               `attribute_uuid` AS attributeUuid,
               `attribute_label` AS attributeLabel,
               `data`
        FROM `processtask_formattribute_data`
        WHERE `processtask_id` = #{processTaskId}
          AND `attribute_uuid` = #{attributeUuid}
    </select>

    <select id="checkIsWorker" resultType="int">
        SELECT
        COUNT(1)
        FROM `processtask_step_worker`
        WHERE `processtask_id` = #{processTaskId}
        <if test="processTaskStepId != null">
            AND `processtask_step_id` = #{processTaskStepId}
        </if>
        <if test="userType != null and userType != ''">
            AND `user_type` = #{userType}
        </if>
        AND (
        (`type` = 'user'
        <choose>
            <when test="authenticationInfoVo.userUuidList != null and authenticationInfoVo.userUuidList.size() > 0">
                AND `uuid` IN
                <foreach collection="authenticationInfoVo.userUuidList" item="userUuid" open="(" separator="," close=")">
                    #{userUuid}
                </foreach>
            </when>
            <otherwise>
                AND `uuid` = #{authenticationInfoVo.userUuid}
            </otherwise>
        </choose>
        )
        <if test="authenticationInfoVo.teamUuidList != null and authenticationInfoVo.teamUuidList.size() > 0">
            OR (`type` = 'team' AND `uuid` IN
            <foreach collection="authenticationInfoVo.teamUuidList" item="teamUuid" open="(" separator="," close=")">
                #{teamUuid}
            </foreach>
            )
        </if>
        <if test="authenticationInfoVo.roleUuidList != null and authenticationInfoVo.roleUuidList.size() > 0">
            OR (`type` = 'role' AND `uuid` IN
            <foreach collection="authenticationInfoVo.roleUuidList" item="roleUuid" open="(" separator="," close=")">
                #{roleUuid}
            </foreach>
            )
        </if>
        )
    </select>

    <select id="checkIsProcessTaskStepUser" parameterType="codedriver.framework.process.dto.ProcessTaskStepUserVo"
            resultType="int">
        SELECT
        COUNT(1)
        FROM `processtask_step_user`
        WHERE `processtask_id` = #{processTaskId}
        <choose>
            <when test="userUuidList != null and userUuidList.size() > 0">
                AND `user_uuid` IN
                <foreach collection="userUuidList" item="useruuid" open="(" separator="," close=")">
                    #{useruuid}
                </foreach>
            </when>
            <otherwise>
                AND `user_uuid` = #{userUuid}
            </otherwise>
        </choose>
        <if test="processTaskStepId != null">
            AND `processtask_step_id` = #{processTaskStepId}
        </if>
        <if test="userType != null and userType != ''">
            AND `user_type` = #{userType}
        </if>
    </select>

    <select id="getProcessTaskAssignWorker" parameterType="codedriver.framework.process.dto.ProcessTaskAssignWorkerVo"
            resultType="codedriver.framework.process.dto.ProcessTaskAssignWorkerVo">
        SELECT `processtask_id`           AS processTaskId,
               `processtask_step_id`      AS
                                             processTaskStepId,
               `from_processtask_step_id` AS fromProcessTaskStepId,
               `from_process_step_uuid`   AS fromProcessStepUuid,
               `type`,
               `uuid`,
               `fcu`,
               `fcd`
        FROM `processtask_assignworker`
        WHERE `processtask_id` =
              #{processTaskId}
          AND `processtask_step_id` = #{processTaskStepId}
          AND `from_process_step_uuid` = #{fromProcessStepUuid}
    </select>

    <select id="getProcessTaskStepBaseInfoByProcessTaskIdAndProcessStepUuid"
            resultType="codedriver.framework.process.dto.ProcessTaskStepVo">
        SELECT `id`,
               `processtask_id`    AS processTaskId,
               `name`,
               `process_step_uuid` AS processStepUuid,
               `status`,
               `result`,
               `type`,
               `handler`,
               `is_active`         AS isActive,
               `config_hash`       AS configHash,
               `active_time`       AS activeTime,
               `start_time`        AS startTime,
               `end_time`          AS endTime,
               `error`
        FROM `processtask_step`
        WHERE `processtask_id` = #{processTaskId}
          AND `process_step_uuid` = #{processStepUuid}
    </select>

    <select id="getProcessTaskAuditList" resultType="codedriver.framework.process.dto.ProcessTaskStepAuditVo">
        SELECT
        `processtask_id` as processTaskId,
        `processtask_step_id` as processTaskStepId,
        `user_uuid` as userUuid,
        `action_time` as actionTime,
        `action`,
        `step_status` as stepStatus,
        `original_user` as
        originalUser
        FROM
        `processtask_step_audit`
        WHERE 1=1
        <if test="processTaskId != null">
            and `processtask_id` = #{processTaskId}
        </if>
        <if test="userUuid != null">
            and `user_uuid` = #{userUuid}
        </if>
        <if test="action != null">
            and `action` = #{action}
        </if>
    </select>

    <select id="getProcessTaskListByIdList" parameterType="java.lang.Long" resultMap="processTaskMap">
        SELECT
        `id`,
        `title`,
        `process_uuid`,
        `channel_uuid`,
        `config_hash`,
        `priority_uuid`,
        `status`,
        `start_time`,
        `end_time`,
        `owner`,
        `reporter`,
        `expire_time`,
        `worktime_uuid`,
        `is_show`,
        `serial_number`,
        `source`
        FROM `processtask`
        WHERE `id` IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="getProcessTaskStepListByIdList" parameterType="java.lang.Long" resultMap="processTaskStepMap">
        SELECT
        `id`,
        `processtask_id`,
        `name`,
        `process_step_uuid`,
        `status`,
        `result`,
        `type`,
        `handler`,
        `is_active`,
        `active_time`,
        `start_time`,
        `end_time`,
        `expire_time`,
        `config_hash`
        FROM `processtask_step`
        WHERE
        `id` IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <!--<select id="getProcessTaskStepNotifyPolicy"
            parameterType="codedriver.framework.process.dto.ProcessTaskStepNotifyPolicyVo"
            resultType="codedriver.framework.process.dto.ProcessTaskStepNotifyPolicyVo">
        SELECT a.`processtask_step_id` AS processTaskStepId,
               a.`policy_id`           AS policyId,
               a.`policy_name`         AS policyName,
               a.`policy_handler`      AS policyHandler,
               a.`policy_config_hash`  AS policyConfigHash,
               b.`config`              AS policyConfig
        FROM `processtask_step_notify_policy` a
                 JOIN
             `processtask_step_notify_policy_config` b ON b.`hash` = a.`policy_config_hash`
        WHERE a.`processtask_step_id` = #{processTaskStepId}
          AND a.`policy_id` = #{policyId}
    </select>-->

    <select id="getProcessTaskOldFormAndPropByTaskId" parameterType="java.lang.Long" resultType="java.util.HashMap">
        select form, prop
        from processtask_old_form_prop
        where processtask_id = #{value}
    </select>

    <select id="getWorkloadByTeamUuid" parameterType="java.lang.String" resultType="java.util.HashMap">
        SELECT c.`uuid`        AS userUuid,
               COUNT(c.`uuid`) AS count
        FROM `user_team` a
                 JOIN `user` b ON b.`uuid` = a.`user_uuid`
                 JOIN
             `processtask_step_worker` c ON c.`uuid` = b.`uuid` AND c.`type` = 'user' AND c.`user_type` = 'major'
        WHERE a.`team_uuid` = #{value}
        GROUP BY c.`uuid`
        ORDER BY COUNT(c.`uuid`) ASC
    </select>

    <select id="getFileIdListByContentId" parameterType="java.lang.Long" resultType="java.lang.Long">
        SELECT `file_id`
        FROM `processtask_file`
        WHERE `content_id` = #{value}
    </select>

    <select id="getProcessTaskStepContentById" parameterType="java.lang.Long"
            resultType="codedriver.framework.process.dto.ProcessTaskStepContentVo">
        SELECT `id`,
               `processtask_id`      AS processTaskId,
               `processtask_step_id` AS processTaskStepId,
               `content_hash`        AS contentHash,
               `type`,
               `fcd`,
               `fcu`,
               `lcd`,
               `lcu`
        FROM `processtask_step_content`
        WHERE `id` = #{value}
    </select>

    <select id="getProcessTaskStepUserList" parameterType="codedriver.framework.process.dto.ProcessTaskStepUserVo"
            resultMap="processTaskStepUserMap">
        SELECT
        `processtask_id`,
        `processtask_step_id`,
        `user_uuid`,
        `user_name`,
        `user_type`,
        `status`,
        `action`,
        `start_time`,
        `end_time`,
        `active_time`
        FROM `processtask_step_user`
        WHERE `processtask_id`= #{processTaskId}
        <if test="processTaskStepId != null">
            AND `processtask_step_id` = #{processTaskStepId}
        </if>
        <if test="userType != null and userType != ''">
            AND `user_type` = #{userType}
        </if>
        <if test="userVo != null and userVo.uuid != null and userVo.uuid != ''">
            AND user_uuid = #{userVo.uuid}
        </if>
    </select>

    <select id="getProcessTaskStepUserListByProcessTaskIdList" parameterType="java.lang.Long"
            resultMap="processTaskStepUserMap">
        SELECT
        `processtask_id`,
        `processtask_step_id`,
        `user_uuid`,
        `user_name`,
        `user_type`
        FROM `processtask_step_user`
        WHERE `processtask_id` IN
        <foreach collection="list" item="processTaskId" open="(" separator="," close=")">
            #{processTaskId}
        </foreach>
    </select>

    <select id="getProcessTaskStepUserListByProcessTaskIdListAndStatusList" parameterType="java.lang.Long"
            resultMap="processTaskStepUserMap">
        SELECT
        `processtask_id`,
        `processtask_step_id`,
        `user_uuid`,
        `user_name`,
        `user_type`
        FROM `processtask_step_user`
        WHERE `processtask_id` IN
        <foreach collection="processTaskIdList" item="processTaskId" open="(" separator="," close=")">
            #{processTaskId}
        </foreach>
        and `status` IN
        <foreach collection="statusList" item="status" open="(" separator="," close=")">
            #{status}
        </foreach>
    </select>

    <select id="getProcessTaskScoreInfoById" parameterType="java.lang.Long" resultType="java.lang.String">
        SELECT psaa.`new_content`
        FROM `processtask` p
                 left join `processtask_step_audit` psa on p.`id` = psa.`processtask_id`
                 left join `processtask_step_audit_detail` psaa on psa.`id` = psaa.`audit_id`
                 left join `processtask_content` pc on psaa.`new_content` = pc.`hash`
        WHERE p.`id` = #{value}
          and psa.`action` = 'score'
    </select>

    <resultMap id="processTaskAndStepMap" type="codedriver.framework.process.dto.ProcessTaskVo">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="process_uuid" property="processUuid"/>
        <result column="channel_uuid" property="channelUuid"/>
        <result column="config_hash" property="configHash"/>
        <result column="priority_uuid" property="priorityUuid"/>
        <result column="status" property="status"/>
        <result column="owner" property="owner"/>
        <result column="reporter" property="reporter"/>
        <result column="worktime_uuid" property="worktimeUuid"/>
        <result column="start_time" property="startTime"/>
        <result column="isShow" property="isShow"/>
        <result column="endTime" property="endTime"/>
        <association property="channelVo" javaType="codedriver.framework.process.dto.ChannelVo">
            <result property="uuid" column="channelUuid"/>
            <result property="name" column="channelName"/>
            <association property="channelTypeVo" javaType="codedriver.framework.process.dto.ChannelTypeVo">
                <result property="uuid" column="channelTypeUuid"/>
                <result property="color" column="channelTypeColor"/>
                <result property="name" column="channelTypeName"/>
            </association>
            <association property="parent" javaType="codedriver.framework.process.dto.CatalogVo">
                <result property="uuid" column="catalogUuid"/>
                <result property="name" column="catalogName"/>
            </association>
        </association>
        <association property="priority" javaType="codedriver.framework.process.dto.PriorityVo">
            <result property="uuid" column="priorityUuid"/>
            <result property="name" column="priorityName"/>
            <result property="color" column="priorityColor"/>
        </association>
        <collection property="stepList" ofType="codedriver.framework.process.dto.ProcessTaskStepVo">
            <result column="stepId" property="id"/>
            <result column="stepName" property="name"/>
            <result column="stepStatus" property="status"/>
            <result column="type" property="type"/>
            <result column="handler" property="handler"/>
            <result column="is_active" property="isActive"/>
            <result column="stepConfigHash" property="configHash"/>
            <result column="stepActiveTime" property="activeTime"/>
            <result column="stepStartTime" property="startTime"/>
            <result column="stepEndTime" property="endTime"/>
            <result column="stepConfigHash" property="configHash"/>
            <collection property="workerList" ofType="codedriver.framework.process.dto.ProcessTaskStepWorkerVo">
                <result column="stepWorkerType" property="type"/>
                <result column="stepWorkerUserType" property="userType"/>
                <result column="stepWorkerUuid" property="uuid"/>
            </collection>
            <collection property="userList" ofType="codedriver.framework.process.dto.ProcessTaskStepUserVo">
                <result column="stepUserUserType" property="userType"/>
                <result column="stepUserUserStatus" property="status"/>
                <association property="userVo" javaType="codedriver.framework.dto.UserVo">
                    <result column="stepUserUserUuid" property="uuid"/>
                    <result column="stepUserUserName" property="userName"/>
                    <result column="stepUserUserInfo" property="userInfo"/>
                    <result column="stepUserUserVipLevel" property="vipLevel"/>
                    <result column="stepUserUserPinyin" property="pinyin"/>
                </association>
            </collection>
        </collection>
    </resultMap>

    <select id="getProcessTaskAndStepById" parameterType="java.lang.Long" resultMap="processTaskAndStepMap"
            useCache="false">
        SELECT p.`id`,
               p.`title`,
               p.`process_uuid`,
               p.`channel_uuid`,
               p.`config_hash`,
               p.`priority_uuid`,
               p.`status`,
               p.`owner`,
               p.`reporter`,
               p.`worktime_uuid`,
               p.`start_time`,
               p.`end_time`,
               p.`is_show`       as isShow,
               pri.`uuid`        as priorityUuid,
               pri.`name`        as priorityName,
               pri.`color`       as priorityColor,
               cata.`uuid`       as catalogUuid,
               cata.`name`       as catalogName,
               ct.`uuid`         as channelTypeUuid,
               ct.`name`         as channelTypeName,
               ct.`color`        as channelTypeColor,
               c.`uuid`          as channelUuid,
               c.`name`          as channelName,
               ps.`id`           as stepId,
               ps.`name`         as stepName,
               ps.`status`       as stepStatus,
               ps.`type`,
               ps.`handler`,
               ps.`is_active`,
               ps.`config_hash`  as stepConfigHash,
               ps.`active_time`  as stepActiveTime,
               ps.`start_time`   as stepStartTime,
               ps.`end_time`     as stepEndTime,
               ptsw.uuid         as stepWorkerUuid,
               ptsw.type         as stepWorkerType,
               ptsw.user_type    as stepWorkerUserType,
               ptsu.status       as stepUserUserStatus,
               ptsu.user_type    as stepUserUserType,
               ptsuser.user_name as stepUserUserName,
               ptsuser.uuid      as stepUserUserUuid,
               ptsuser.user_info as stepUserUserInfo,
               ptsuser.vip_level as stepUserUserVipLevel,
               ptsuser.pinyin    as stepUserUserPinyin
        from `processtask` p
        left join `processtask_step` ps on p.`id` = ps.`processtask_id`
        left join `priority` pri on p.`priority_uuid` = pri.`uuid`
        left join `channel` c on p.`channel_uuid` = c.`uuid`
        left join `catalog` cata on c.`parent_uuid` = cata.`uuid`
        left join `channel_type` ct on c.`channel_type_uuid` = ct.`uuid`
        left join `processtask_step_user` ptsu on ps.`processtask_id` = ptsu.`processtask_id`
        and ps.`id` = ptsu.`processtask_step_id`
        left join `processtask_step_worker` ptsw on ps.`processtask_id` = ptsw.`processtask_id`
        and ps.`id` = ptsw.`processtask_step_id`
        left join `user` ptsuser on ptsu.`user_uuid` = ptsuser.`uuid`
        where p.`id` = #{value}
    </select>

    <select id="getFromProcessTaskIdByToProcessTaskId" parameterType="java.lang.Long" resultType="java.lang.Long">
        SELECT `from_processtask_id`
        FROM `processtask_tranfer_report`
        WHERE `to_processtask_id` = #{value}
    </select>

    <select id="getToProcessTaskIdListByFromProcessTaskId" parameterType="java.lang.Long" resultType="java.lang.Long">
        SELECT `to_processtask_id`
        FROM `processtask_tranfer_report`
        WHERE `from_processtask_id` =
              #{value}
        ORDER BY `id` DESC
    </select>

    <select id="getProcessTaskRelationCountByProcessTaskId" parameterType="java.lang.Long" resultType="int">
        select count(1)
        from (
                 SELECT `id`
                 FROM `processtask_relation`
                 WHERE `source` = #{value}
                    OR `target` = #{value}
                 UNION
                 SELECT `id`
                 FROM `processtask_tranfer_report`
                 WHERE `from_processtask_id` = #{value}
                    OR `to_processtask_id` = #{value}
             ) a
    </select>

    <select id="getProcessTaskRelationList" parameterType="codedriver.framework.process.dto.ProcessTaskRelationVo"
            resultType="codedriver.framework.process.dto.ProcessTaskRelationVo">
        SELECT
        a.`id`,
        a.`channelTypeRelationId`,
        a.`source`,
        a.`target`,
        a.`processTaskId`,
        a.`action`
        FROM (
        SELECT
        `id`,
        `channel_type_relation_id` AS channelTypeRelationId,
        `source`,
        `target`,
        `target` AS
        processTaskId,
        'relation' AS action
        FROM `processtask_relation`
        WHERE `source` = #{processTaskId}
        UNION
        SELECT
        `id`,
        `channel_type_relation_id` AS channelTypeRelationId,
        `source`,
        `target`,
        `source` AS
        processTaskId,
        'relation' AS action
        FROM `processtask_relation`
        WHERE `target` = #{processTaskId}
        UNION
        SELECT
        `id`,
        `channel_type_relation_id` AS channelTypeRelationId,
        `from_processtask_id` AS source,
        `to_processtask_id` AS target,
        `to_processtask_id` AS processTaskId,
        'tranferreport' AS action
        FROM `processtask_tranfer_report`
        WHERE `from_processtask_id` = #{processTaskId}
        UNION
        SELECT
        `id`,
        `channel_type_relation_id` AS channelTypeRelationId,
        `from_processtask_id` AS source,
        `to_processtask_id` AS target,
        `from_processtask_id` AS processTaskId,
        'tranferreport' AS action
        FROM
        `processtask_tranfer_report`
        WHERE `to_processtask_id` = #{processTaskId}
        ) a
        ORDER BY a.id DESC
        <if test="needPage == true">
            LIMIT #{startNum}, #{pageSize}
        </if>
    </select>

    <select id="getRelatedProcessTaskIdListByProcessTaskId" parameterType="java.lang.Long" resultType="java.lang.Long">
        SELECT `target` FROM `processtask_relation` WHERE `source` = #{processTaskId}
        UNION
        SELECT `source` FROM `processtask_relation` WHERE `target` = #{processTaskId}
    </select>

    <select id="checkProcessTaskIdListIsExists" parameterType="java.lang.Long" resultType="java.lang.Long">
        SELECT `id` FROM `processtask` WHERE `id` IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="getProcessTaskCountByKeywordAndChannelUuidList" parameterType="codedriver.framework.process.dto.ProcessTaskSearchVo" resultType="int">
        SELECT
        COUNT(1)
        FROM `processtask`
        <where>
            <if test="keyword != null and keyword != ''">
                AND (`id` LIKE CONCAT('%', #{keyword}, '%') OR `title` LIKE CONCAT('%', #{keyword}, '%'))
            </if>
            <if test="excludeStatus != null and excludeStatus != ''">
                AND `status` != #{excludeStatus}
            </if>
            <if test="includeChannelUuidList != null and includeChannelUuidList.size() > 0">
                AND `channel_uuid` IN
                <foreach collection="includeChannelUuidList" item="includeChannelUuid" open="(" separator="," close=")">
                    #{includeChannelUuid}
                </foreach>
            </if>
            <if test="excludeIdList != null and excludeIdList.size() > 0">
                AND `id` NOT IN
                <foreach collection="excludeIdList" item="excludeId" open="("  separator="," close=")">
                    #{excludeId}
                </foreach>
            </if>
        </where>
    </select>

    <select id="getProcessTaskListByKeywordAndChannelUuidList" parameterType="codedriver.framework.process.dto.ProcessTaskSearchVo" resultMap="processTaskMap">
        SELECT
        `id`,
        `title`,
        `process_uuid`,
        `channel_uuid`,
        `config_hash`,
        `priority_uuid`,
        `status`,
        `start_time`,
        `end_time`,
        `owner`,
        (SELECT user_name FROM `user` x WHERE x.uuid = `owner`) AS ownerName,
        `reporter`,
        (SELECT user_name FROM `user` x WHERE x.uuid = `reporter`) AS reporterName,
        `expire_time`,
        `worktime_uuid`,
        `serial_number`,
        `source`
        FROM `processtask`
        <where>
        <if test="keyword != null and keyword != ''">
            AND (`id` LIKE CONCAT('%', #{keyword}, '%') OR `title` LIKE CONCAT('%', #{keyword}, '%'))
        </if>
        <if test="excludeStatus != null and excludeStatus != ''">
            AND `status` != #{excludeStatus}
        </if>
        <if test="includeChannelUuidList != null and includeChannelUuidList.size() > 0">
            AND `channel_uuid` IN
            <foreach collection="includeChannelUuidList" item="includeChannelUuid" open="(" separator="," close=")">
                #{includeChannelUuid}
            </foreach>
        </if>
        <if test="excludeIdList != null and excludeIdList.size() > 0">
            AND `id` NOT IN
            <foreach collection="excludeIdList" item="excludeId" open="("  separator="," close=")">
                #{excludeId}
            </foreach>
        </if>
        </where>
        ORDER BY `id` DESC
        <if test="needPage">
            LIMIT #{startNum}, #{pageSize}
        </if>
    </select>

    <select id="getProcessTaskTransferReportByToProcessTaskId" parameterType="java.lang.Long"
            resultType="codedriver.framework.process.dto.ProcessTaskTranferReportVo">
        SELECT `id`,
               `channel_type_relation_id` AS channelTypeRelationId,
               `from_processtask_id`      AS
                                             fromProcessTaskId,
               `to_processtask_id`        AS toProcessTaskId
        FROM `processtask_tranfer_report`
        WHERE `to_processtask_id` = #{value}
    </select>

    <select id="searchProcessTaskImportAuditCount"
            parameterType="codedriver.framework.process.dto.ProcessTaskImportAuditVo" resultType="int" useCache="false">
        SELECT
        COUNT(distinct a.`id`)
        FROM `processtask_import_audit` a
        left join `processtask` b
        on a.`processtask_id` = b.`id`
        <where>
            <if test="status != null">
                and a.`status` = #{status}
            </if>
            <if test="keyword != null and keyword != ''">
                and (a.`title` like CONCAT('%', #{keyword}, '%')
                or b.`serial_number` like CONCAT('%', #{keyword}, '%'))
            </if>
        </where>
    </select>

    <select id="searchProcessTaskImportAudit" parameterType="codedriver.framework.process.dto.ProcessTaskImportAuditVo"
            resultType="codedriver.framework.process.dto.ProcessTaskImportAuditVo"
            useCache="false">
        SELECT
        a.`id`,
        a.`processtask_id` as processTaskId,
        b.`serial_number` as serialNumber,
        a.`title`,
        (select `name` from `channel` where `uuid` = a.`channel_uuid`) as channelName,
        a.`status`,
        a.`error_reason` as errorReason,
        a.`owner`,
        (select u.`user_name` from `user` u where u.`uuid` = a.`owner`) as ownerName,
        a.`import_time` as importTime
        FROM
        `processtask_import_audit` a
        left join `processtask` b
        on a.`processtask_id` = b.`id`
        <where>
            <if test="status != null">
                and a.`status` = #{status}
            </if>
            <if test="keyword != null and keyword != ''">
                and (a.`title` like CONCAT('%', #{keyword}, '%')
                or b.`serial_number` like CONCAT('%', #{keyword}, '%'))
            </if>
        </where>
        order by a.`import_time` desc
        <if test="needPage">
            limit #{startNum}, #{pageSize}
        </if>
    </select>

    <select id="getProcessTaskRelationById" parameterType="java.lang.Long"
            resultType="codedriver.framework.process.dto.ProcessTaskRelationVo">
        SELECT `id`,
               `channel_type_relation_id` AS channelTypeRelationId,
               `source`,
               `target`
        FROM `processtask_relation`
        WHERE `id` = #{value}
    </select>

    <select id="getProcessTaskStepRemindListByProcessTaskStepId" parameterType="java.lang.Long"
            resultType="codedriver.framework.process.dto.ProcessTaskStepRemindVo">
        SELECT `processtask_id`                                      AS processTaskId,
               `processtask_step_id`                                 AS processTaskStepId,
               `action`,
               `title`,
               `fcu`,
               (SELECT user_name FROM `user` x WHERE x.uuid = `fcu`) AS fcuName,
               `fcd`,
               `content_hash`                                        AS contentHash
        FROM `processtask_step_remind`
        WHERE `processtask_step_id` = #{value}
    </select>

    <select id="getProcessTaskScoreTemplateByProcessTaskId" parameterType="java.lang.Long"
            resultType="codedriver.framework.process.dto.ProcessTaskScoreTemplateVo">
        SELECT `processtask_id`    AS processTaskId,
               `score_template_id` AS scoreTemplateId,
               `is_auto`           AS
                                      isAuto,
               `config_hash`       AS configHash
        FROM `processtask_score_template`
        WHERE `processtask_id` = #{value}
    </select>

    <select id="getSlaIdListByProcessTaskStepId" parameterType="java.lang.Long" resultType="java.lang.Long">
        SELECT `sla_id`
        FROM `processtask_step_sla`
        WHERE `processtask_step_id` = #{value}
    </select>

    <select id="getSlaIdListByProcessTaskId" parameterType="java.lang.Long" resultType="java.lang.Long">
        SELECT `id`
        FROM `processtask_sla`
        WHERE `processtask_id` = #{value}
    </select>

    <select id="getProcessTaskSlaConfigById" parameterType="java.lang.Long" resultType="java.lang.String">
        SELECT `config`
        FROM `processtask_sla`
        WHERE `id` = #{value}
    </select>

    <select id="getProcessTaskStepIdListBySlaId" parameterType="java.lang.Long" resultType="java.lang.Long">
        SELECT `processtask_step_id`
        FROM `processtask_step_sla`
        WHERE `sla_id` = #{value}
    </select>

    <select id="getProcessTaskSlaNotifyBySlaId" parameterType="java.lang.Long"
            resultType="codedriver.framework.process.dto.ProcessTaskSlaNotifyVo">
        SELECT `id`,
               `sla_id` AS    slaId,
               `hash`,
               `trigger_time` triggerTime,
               `config`
        FROM `processtask_sla_notify`
        WHERE `sla_id` = #{value}
    </select>

    <select id="getProcessTaskSlaTransferBySlaId" parameterType="java.lang.Long"
            resultType="codedriver.framework.process.dto.ProcessTaskSlaTransferVo">
        SELECT `id`,
               `sla_id` AS    slaId,
               `hash`,
               `trigger_time` triggerTime,
               `config`
        FROM `processtask_sla_transfer`
        WHERE `sla_id` = #{value}
    </select>

    <select id="getProcessTaskSlaLockById" parameterType="java.lang.Long" resultType="java.lang.Long">
        SELECT `id`
        FROM `processtask_sla`
        WHERE `id` = #{value} FOR
        UPDATE
    </select>

    <select id="checkProcessTaskFocusExists" resultType="int">
        SELECT count(`processtask_id`)
        FROM `processtask_focus`
        WHERE `processtask_id` = #{processTaskId}
          and `user_uuid` = #{userUuid}
    </select>

    <select id="getFocusUsersOfProcessTask" parameterType="java.lang.Long" resultType="java.lang.String">
        SELECT CONCAT("user#", `user_uuid`)
        FROM `processtask_focus`
        WHERE `processtask_id` = #{value}
    </select>

    <select id="getFocusUserListByTaskId" parameterType="java.lang.Long" resultType="java.lang.String">
        SELECT CONCAT('user#', `user_uuid`)
        FROM `processtask_focus`
        WHERE `processtask_id` = #{value}
    </select>

    <select id="getProcessTaskStepAgentByProcessTaskStepId" parameterType="java.lang.Long"
            resultType="codedriver.framework.process.dto.ProcessTaskStepAgentVo">
        SELECT `processtask_id`      AS processTaskId,
               `processtask_step_id` AS processTaskStepId,
               `user_uuid`           AS userUuid,
               `agent_uuid`          AS agentUuid
        FROM `processtask_step_agent`
        WHERE `processtask_step_id` = #{value}
    </select>

    <select id="getProcessTaskTagListByProcessTaskId" parameterType="java.lang.Long"
            resultType="codedriver.framework.process.dto.ProcessTagVo">
        SELECT b.`id`,
               b.`name`
        FROM `processtask_tag` a
                 LEFT JOIN `process_tag` b ON a.`tag_id` = b.`id`
        WHERE a.`processtask_id` = #{processTaskId}
    </select>

    <select id="getProcessTaskStepInOperationCountByProcessTaskId" parameterType="java.lang.Long" resultType="int">
        SELECT COUNT(1)
        FROM `processtask_step_in_operation`
        WHERE `processtask_id` = #{value}
    </select>

    <select id="getProcessTaskCountByChannelTypeUuidAndStartTime"
            parameterType="codedriver.framework.process.dto.ProcessTaskVo" resultType="int">
        SELECT
        COUNT(a.`id`)
        FROM processtask a
        JOIN channel b ON b.`uuid` = a.`channel_uuid`
        JOIN channel_type c ON c.`uuid` = b.`channel_type_uuid`
        WHERE c.`uuid` = #{channelTypeUuid}
        <if test="startTime != null">
            AND a.`start_time` &gt;= #{startTime}
        </if>
    </select>

    <!--<resultMap type="codedriver.framework.process.dto.ProcessTaskVo" id="processTaskMap">-->
    <!--<id column="id" property="id" />-->
    <!--<result column="title" property="title" />-->
    <!--<result column="process_uuid" property="processUuid" />-->
    <!--<result column="channel_uuid" property="channelUuid" />-->
    <!--<result column="config_hash" property="configHash" />-->
    <!--<result column="priority_uuid" property="priorityUuid" />-->
    <!--<result column="status" property="status" />-->
    <!--<result column="start_time" property="startTime" />-->
    <!--<result column="end_time" property="endTime" />-->
    <!--<result column="owner" property="owner" />-->
    <!--<result column="reporter" property="reporter" />-->
    <!--<result column="expire_time" property="expireTime" />-->
    <!--<result column="worktime_uuid" property="worktimeUuid" />-->
    <!--<result column="is_show" property="isShow" />-->
    <!--<result column="serial_number" property="serialNumber" />-->
    <!--</resultMap>-->

    <select id="getProcessTaskListByChannelTypeUuidAndStartTime"
            parameterType="codedriver.framework.process.dto.ProcessTaskVo" resultMap="processTaskMap">
        SELECT
        a.`id`,
        a.`title`,
        a.`process_uuid`,
        a.`channel_uuid`,
        a.`config_hash`,
        a.`priority_uuid`,
        a.`status`,
        a.`start_time`,
        a.`end_time`,
        a.`owner`,
        a.`reporter`,
        a.`expire_time`,
        a.`worktime_uuid`,
        a.`is_show`,
        a.`serial_number`,
        a.`source`
        FROM `processtask` a
        JOIN channel b ON b.`uuid` = a.`channel_uuid`
        JOIN channel_type c ON c.`uuid` = b.`channel_type_uuid`
        WHERE c.`uuid` = #{channelTypeUuid}
        <if test="startTime != null">
            AND a.`start_time` &gt;= #{startTime}
        </if>
        ORDER BY a.`id`
        <if test="needPage">
            limit #{startNum}, #{pageSize}
        </if>
    </select>

    <resultMap type="codedriver.framework.process.dto.ProcessTaskVo" id="processTaskDetailMap">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="process_uuid" property="processUuid"/>
        <result column="channel_uuid" property="channelUuid"/>
        <result column="config_hash" property="configHash"/>
        <result column="priority_uuid" property="priorityUuid"/>
        <result column="status" property="status"/>
        <result column="start_time" property="startTime"/>
        <result column="end_time" property="endTime"/>
        <result column="owner" property="owner"/>
        <result column="reporter" property="reporter"/>
        <result column="expire_time" property="expireTime"/>
        <result column="worktime_uuid" property="worktimeUuid"/>
        <result column="is_show" property="isShow"/>
        <result column="serial_number" property="serialNumber"/>

        <collection property="stepList" ofType="codedriver.framework.process.dto.ProcessTaskStepVo">
            <id column="bId" property="id"/>
            <result column="bProcessTaskId" property="processTaskId"/>
            <result column="bName" property="name"/>
            <result column="bProcessStepUuid" property="processStepUuid"/>
            <result column="bStatus" property="status"/>
            <result column="bType" property="type"/>
            <result column="bHandler" property="handler"/>
            <result column="bIsActive" property="isActive"/>
            <collection property="workerList" ofType="codedriver.framework.process.dto.ProcessTaskStepWorkerVo">
                <id column="cUuid" property="uuid"/>
                <result column="cProcessTaskId" property="processTaskId"/>
                <result column="cProcessTaskStepId" property="processTaskStepId"/>
                <result column="cType" property="type"/>
                <result column="cUserType" property="userType"/>
            </collection>
            <collection property="userList" ofType="codedriver.framework.process.dto.ProcessTaskStepUserVo">
                <!--<id column="dUserUuid" property="userUuid" />-->
                <result column="dProcessTaskId" property="processTaskId"/>
                <result column="dProcessTaskStepId" property="processTaskStepId"/>
                <result column="dUserType" property="userType"/>
                <association property="userVo" javaType="codedriver.framework.dto.UserVo">
                    <result column="dUserUuid" property="uuid"/>
                </association>
            </collection>
        </collection>

        <collection property="stepRelList" ofType="codedriver.framework.process.dto.ProcessTaskStepRelVo">
            <id column="fUuid" property="processStepRelUuid"/>
            <result column="bProcessTaskId" property="processTaskId"/>
            <result column="fFromProcessStepUuid" property="fromProcessStepUuid"/>
            <result column="fToProcessStepUuid" property="toProcessStepUuid"/>
            <result column="fFromProcessTaskStepId" property="fromProcessTaskStepId"/>
            <result column="fToProcessTaskStepId" property="toProcessTaskStepId"/>
            <result column="fIsHit" property="isHit"/>
            <result column="fName" property="name"/>
            <result column="fType" property="type"/>
        </collection>
    </resultMap>

    <select id="getProcessTaskStepNameById" parameterType="java.lang.Long" resultType="java.lang.String">
        SELECT `name`
        FROM `processtask_step`
        WHERE `id` = #{value}
    </select>

    <select id="getProcessTaskCountBySql" parameterType="java.lang.String" resultType="java.lang.Integer">
        ${value}
    </select>

    <select id="getWorkcenterProcessTaskMapBySql" parameterType="java.lang.String" resultType="java.util.Map">
        ${value}
    </select>

    <resultMap id="workcenterProcessTaskMap" type="codedriver.framework.process.dto.ProcessTaskVo">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="process_uuid" property="processUuid"/>
        <result column="channel_uuid" property="channelUuid"/>
        <result column="config_hash" property="configHash"/>
        <result column="priority_uuid" property="priorityUuid"/>
        <result column="status" property="status"/>
        <result column="start_time" property="startTime"/>
        <result column="end_time" property="endTime"/>
        <result column="ownerUuid" property="owner"/>
        <result column="reporterUuid" property="reporter"/>
        <!--<result column="reporterName" property="reporterName" />-->
        <result column="expire_time" property="expireTime"/>
        <result column="worktime_uuid" property="worktimeUuid"/>
        <result column="worktimeName" property="worktimeName"/>
        <result column="error" property="error"/>
        <result column="is_show" property="isShow"/>
        <result column="serialNumber" property="serialNumber"/>
        <association property="channelVo" javaType="codedriver.framework.process.dto.ChannelVo">
            <result property="uuid" column="channelUuid"/>
            <result property="name" column="channelName"/>
            <association property="channelTypeVo" javaType="codedriver.framework.process.dto.ChannelTypeVo">
                <result property="uuid" column="channelTypeUuid"/>
                <result property="color" column="channelTypeColor"/>
                <result property="name" column="channelTypeName"/>
            </association>
            <association property="parent" javaType="codedriver.framework.process.dto.CatalogVo">
                <result property="uuid" column="catalogUuid"/>
                <result property="name" column="catalogName"/>
            </association>
        </association>
        <association property="ownerVo" javaType="codedriver.framework.dto.UserVo">
            <result property="uuid" column="ownerUuid"/>
            <result property="userName" column="ownerName"/>
            <result property="userInfo" column="ownerInfo"/>
            <result property="vipLevel" column="ownerVipLevel"/>
            <result property="pinyin" column="ownerPinyin"/>
        </association>
        <association property="reporterVo" javaType="codedriver.framework.dto.UserVo">
            <result property="uuid" column="reporterUuid"/>
            <result property="userName" column="reporterName"/>
            <result property="userInfo" column="reporterInfo"/>
            <result property="vipLevel" column="reporterVipLevel"/>
            <result property="pinyin" column="reporterPinyin"/>
        </association>
        <association property="priority" javaType="codedriver.framework.process.dto.PriorityVo">
            <result property="uuid" column="priorityUuid"/>
            <result property="name" column="priorityName"/>
            <result property="color" column="priorityColor"/>
        </association>
        <collection property="stepList" ofType="codedriver.framework.process.dto.ProcessTaskStepVo">
            <id column="processTaskStepId" property="id"/>
            <result column="processTaskStepName" property="name"/>
            <result column="processTaskStepStatus" property="status"/>
            <result column="processTaskStepType" property="type"/>
            <result column="processTaskStepHandler" property="handler"/>
            <result column="processTaskStepIsActive" property="isActive"/>
            <result column="processTaskStepStartTime" property="startTime"/>
            <result column="processTaskStepConfigHash" property="configHash"/>
            <result column="processTaskStepIsActive" property="isActive"/>
            <result column="processTaskStepEndTime" property="endTime"/>
            <result column="processTaskConfigHash" property="configHash"/>
            <collection property="workerList" ofType="codedriver.framework.process.dto.ProcessTaskStepWorkerVo">
                <result column="stepWorkerType" property="type"/>
                <result column="stepWorkerUserType" property="userType"/>
                <result column="stepWorkerUuid" property="uuid"/>
            </collection>
            <collection property="userList" ofType="codedriver.framework.process.dto.ProcessTaskStepUserVo">
                <result column="stepUserUserType" property="userType"/>
                <result column="stepUserUserStatus" property="status"/>
                <result column="stepUserUserUuid" property="userUuid"/>
                <result column="stepUserUserName" property="userName"/>
                <association property="userVo" javaType="codedriver.framework.dto.UserVo">
                    <result column="stepUserUserUuid" property="uuid"/>
                    <result column="stepUserUserName" property="userName"/>
                    <result column="stepUserUserInfo" property="userInfo"/>
                    <result column="stepUserUserVipLevel" property="vipLevel"/>
                    <result column="stepUserUserPinyin" property="pinyin"/>
                </association>
            </collection>
            <collection property="slaTimeList" ofType="codedriver.framework.process.dto.ProcessTaskSlaTimeVo">
                <result column="slaStepId" property="processTaskStepId"/>
                <result column="slaId" property="slaId"/>
            </collection>
        </collection>
        <collection property="focusUserList" ofType="codedriver.framework.dto.UserVo">
            <result property="uuid" column="focusUuid"/>
            <result property="userName" column="focusName"/>
            <result property="userInfo" column="focusInfo"/>
            <result property="vipLevel" column="focusVipLevel"/>
            <result property="pinyin" column="focusPinyin"/>
        </collection>
        <collection property="processTaskSlaVoList" ofType="codedriver.framework.process.dto.ProcessTaskSlaVo">
            <result column="ProcessTaskSlaId" property="id"/>
            <result column="ProcessTaskSlaName" property="name"/>
            <result column="ProcessTaskSlaConfig" property="config"/>
            <association property="slaTimeVo" javaType="codedriver.framework.process.dto.ProcessTaskSlaTimeVo">
                <result column="expireTime" property="expireTime"/>
                <result column="realExpireTime" property="realExpireTime"/>
                <result column="timeLeft" property="timeLeft"/>
                <result column="realTimeLeft" property="realTimeLeft"/>
            </association>
        </collection>

    </resultMap>

    <select id="getProcessTaskBySql" parameterType="java.lang.String" resultMap="workcenterProcessTaskMap" >
        ${value }
    </select>

    <select id="getProcessTaskIdByChannelUuidLimitOne" parameterType="java.lang.String" resultType="java.lang.Long">
        SELECT `id` FROM `processtask` WHERE `channel_uuid` = #{value} LIMIT 1
    </select>

    <select id="getProcessTaskIdByPriorityUuidLimitOne" parameterType="java.lang.String" resultType="java.lang.Long">
        SELECT `id` FROM `processtask` WHERE `priority_uuid` = #{value} LIMIT 1
    </select>

    <select id="getChannelReferencedCountList" resultType="codedriver.framework.process.dto.ChannelVo">
        SELECT
            `channel_uuid` AS `uuid`,
            COUNT(`id`) AS childrenCount
        FROM `processtask`
        GROUP BY `channel_uuid`
    </select>

    <select id="getProcessTaskStepFileListByTaskId" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskStepFileVo">
        select
            `processtask_id` as processTaskId,
            `processtask_step_id` as processTaskStepId,
            `content_id` as contentId,
            `file_id` as fileId
        from `processtask_file` where `processtask_id` = #{value}
    </select>

    <select id="getRepeatGroupIdByProcessTaskId" parameterType="java.lang.Long" resultType="java.lang.Long">
        SELECT `repeat_group_id` FROM `processtask_repeat` WHERE `processtask_id` = #{value}
    </select>

    <select id="getProcessTaskIdListByRepeatGroupId" parameterType="java.lang.Long" resultType="java.lang.Long">
        SELECT `processtask_id` FROM `processtask_repeat` WHERE `repeat_group_id` = #{value}
    </select>

    <select id="getProcessTaskStepReapprovalRestoreBackupMaxSortByBackupStepId" parameterType="java.lang.Long" resultType="java.lang.Integer">
        SELECT
            MAX(`sort`)
        FROM `processtask_step_reapproval_restore_backup`
        WHERE `backup_step_id` = #{value}
    </select>

    <select id="getProcessTaskStepReapprovalRestoreBackupListByBackupStepId" parameterType="java.lang.Long" resultType="codedriver.framework.process.dto.ProcessTaskStepReapprovalRestoreBackupVo">
        SELECT
            `processtask_id` AS processTaskId,
            `processtask_step_id` AS processTaskStepId,
            `backup_step_id` AS backupStepId,
            `config` AS configStr,
            `sort`
        FROM `processtask_step_reapproval_restore_backup`
        WHERE `backup_step_id` = #{value}
        ORDER BY `sort` DESC
    </select>

    <select id="getProcessTaskByIndexKeyword"
            resultType="codedriver.framework.process.dto.ProcessTaskVo">
        SELECT pt.`${targetType}` as ${columnPro}
        FROM processtask pt
        JOIN fulltextindex_field_process ff ON ff.target_id = pt.id AND ff.`target_field` = #{targetType}
        JOIN `fulltextindex_target_process` ft ON ff.`target_id` = ft.`target_id` AND ft.`target_type` = 'processtask'
        JOIN `fulltextindex_word` fw ON fw.id = ff.`word_id` AND fw.word IN
        <foreach collection="keywordList" item="keyword" separator="," open="(" close=")">
            #{keyword}
        </foreach>
        GROUP BY pt.`${targetType}`
        ORDER BY MAX(ff.counter) DESC
        limit 0,#{limit}
    </select>

    <select id="getProcessTaskStepIdListByProcessTaskIdAndTagId" parameterType="codedriver.framework.process.dto.ProcessTaskStepTagVo" resultType="java.lang.Long">
        SELECT `processtask_step_id` FROM `processtask_step_tag` WHERE `processtask_id` = #{processTaskId} AND `tag_id` = #{tagId}
    </select>

    <select id="checkProcessTaskStepTagIsExists" parameterType="codedriver.framework.process.dto.ProcessTaskStepTagVo" resultType="int">
        SELECT COUNT(1) FROM `processtask_step_tag` WHERE `processtask_step_id` = #{processTaskStepId} AND `tag_id` = #{tagId}
    </select>

    <select id="getSameTagIdListByProcessTaskStepIdList" parameterType="java.lang.Long" resultType="java.lang.Long">
        <bind name="size" value="list.size()"/>
        SELECT `tag_id` FROM `processtask_step_tag`
        WHERE `processtask_step_id` IN
        <foreach collection="list" item="processTaskStepId" open="(" separator="," close=")">
            #{processTaskStepId}
        </foreach>
        GROUP BY `tag_id` HAVING COUNT(`tag_id`) = #{size}
    </select>

    <select id="getProcessTaskListByOwnerAndStatus" resultMap="processTaskMap">
        SELECT
            `id`,
            `title`,
            `process_uuid`,
            `channel_uuid`,
            `config_hash`,
            `priority_uuid`,
            `status`,
            `start_time`,
            `end_time`,
            `owner`,
            `reporter`,
            `expire_time`,
            `worktime_uuid`,
            `error`,
            `is_show`,
            `serial_number`,
            `source`
        FROM `processtask`
        WHERE `owner` = #{owner}
        AND `status` = #{status}
    </select>

    <!--<update id="updateProcessTaskStepConvergeIsCheck">
        UPDATE `processtask_converge`
        SET is_check = #{isCheck}
        WHERE converge_id = #{convergeId}
          AND processtask_step_id = #{processTaskStepId}
    </update>-->

    <update id="updateProcessTaskStepRelIsHit" parameterType="codedriver.framework.process.dto.ProcessTaskStepRelVo">
        UPDATE
        `processtask_step_rel`
        SET
        `is_hit` = #{isHit}
        WHERE `from_processtask_step_id` = #{fromProcessTaskStepId}
        <if test="toProcessTaskStepId != null">
            AND `to_processtask_step_id` = #{toProcessTaskStepId}
        </if>
    </update>

    <update id="updateProcessTaskStepStatus" parameterType="codedriver.framework.process.dto.ProcessTaskStepVo">
        UPDATE
        `processtask_step`
        SET
        `status` = #{status},
        `result` = #{result},
        `is_active` = #{isActive},
        <if test="updateActiveTime == 1">
            `active_time` = NOW(3),
        </if>
        <choose>
            <when test="updateStartTime == 1">
                `start_time` = NOW(3),
            </when>
            <when test="updateStartTime == -1">
                `start_time` = NULL,
            </when>
        </choose>
        <choose>
            <when test="updateEndTime == 1">
                `end_time` = NOW(3),
            </when>
            <when test="updateEndTime == -1">
                `end_time` = NULL,
            </when>
        </choose>
        `error` = #{error}
        WHERE `id` = #{id}
    </update>

    <insert id="insertProcessTaskSlaNotify" parameterType="codedriver.framework.process.dto.ProcessTaskSlaNotifyVo">
        <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
            select LAST_INSERT_ID() as id
        </selectKey>
        INSERT INTO `processtask_sla_notify` (
        `sla_id`,
        `hash`,
        `trigger_time`,
        `config`
        )
        VALUES
        (
        #{slaId},
        #{hash},
        #{triggerTime},
        #{config}
        )
    </insert>

    <insert id="insertProcessTaskSlaTransfer" parameterType="codedriver.framework.process.dto.ProcessTaskSlaTransferVo">
        <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
            select LAST_INSERT_ID() as id
        </selectKey>
        INSERT INTO `processtask_sla_transfer` (
        `sla_id`,
        `hash`,
        `trigger_time`,
        `config`
        )
        VALUES
        (
        #{slaId},
        #{hash},
        #{triggerTime},
        #{config}
        )
    </insert>

    <insert id="insertProcessTaskStepSla">
        INSERT INTO `processtask_step_sla` (`processtask_step_id`, `sla_id`)
        VALUES (#{processTaskStepId}, #{slaId});
    </insert>

    <insert id="insertProcessTaskSla" parameterType="codedriver.framework.process.dto.ProcessTaskSlaVo">
        <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
            select LAST_INSERT_ID() as id
        </selectKey>
        INSERT INTO `processtask_sla` (
        `processtask_id`,
        `name`,
        `config`
        )
        VALUES
        (
        #{processTaskId},
        #{name},
        #{config}
        )
    </insert>

    <insert id="insertProcessTaskStepAuditDetail"
            parameterType="codedriver.framework.process.dto.ProcessTaskStepAuditDetailVo">
        INSERT INTO `processtask_step_audit_detail` (`audit_id`,
                                                     `type`,
                                                     `old_content`,
                                                     `new_content`)
        VALUES (#{auditId},
                #{type},
                #{oldContent},
                #{newContent})
    </insert>

    <insert id="insertProcessTaskStepAudit" parameterType="codedriver.framework.process.dto.ProcessTaskStepAuditVo">
        <!--		<selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">-->
        <!--			select LAST_INSERT_ID() as id-->
        <!--		</selectKey>-->
        INSERT INTO `processtask_step_audit` (
        `id`,
        `processtask_id`,
        `processtask_step_id`,
        `user_uuid`,
        `action_time`,
        `action`,
        `step_status`,
        `original_user`,
        `description_hash`
        )
        VALUES
        (
        #{id},
        #{processTaskId},
        #{processTaskStepId},
        #{userUuid},
        NOW(3),
        #{action},
        #{stepStatus},
        #{originalUser},
        #{descriptionHash}
        )
    </insert>

    <insert id="insertProcessTaskForm" parameterType="codedriver.framework.process.dto.ProcessTaskFormVo">
        INSERT INTO `processtask_form` (`processtask_id`,
                                        `form_uuid`,
                                        `form_name`,
                                        `form_content_hash`)
        VALUES (#{processTaskId},
                #{formUuid},
                #{formName},
                #{formContentHash})
    </insert>

    <insert id="insertIgnoreProcessTaskFormContent" parameterType="codedriver.framework.process.dto.ProcessTaskFormVo">
        INSERT IGNORE INTO `processtask_form_content` (`hash`, `content`)
        VALUES (#{formContentHash}, #{formContent});
    </insert>

    <insert id="insertProcessTaskStepWorkerPolicy"
            parameterType="codedriver.framework.process.dto.ProcessTaskStepWorkerPolicyVo">
        INSERT INTO `processtask_step_worker_policy` (`processtask_id`,
                                                      `processtask_step_id`,
                                                      `process_step_uuid`,
                                                      `policy`,
                                                      `sort`,
                                                      `config`)
        VALUES (#{processTaskId},
                #{processTaskStepId},
                #{processStepUuid},
                #{policy},
                #{sort},
                #{config})
    </insert>

    <insert id="replaceProcessTaskFormAttributeData"
            parameterType="codedriver.framework.process.dto.ProcessTaskFormAttributeDataVo">
        REPLACE INTO `processtask_formattribute_data` (`processtask_id`,
                                                       `attribute_uuid`,
                                                       `attribute_label`,
                                                       `data`,
                                                       `type`,
                                                       `sort`)
        VALUES (#{processTaskId},
                #{attributeUuid},
                #{attributeLabel},
                #{data},
                #{type},
                #{sort})
    </insert>

    <insert id="insertIgnoreProcessTaskConverge" parameterType="codedriver.framework.process.dto.ProcessTaskConvergeVo">
        INSERT IGNORE INTO `processtask_converge` (`converge_id`,
                                            `processtask_step_id`,
                                            `processtask_id`)
        VALUES (#{convergeId},
                #{processTaskStepId},
                #{processTaskId})
    </insert>

    <insert id="insertIgnoreProcessTaskStepWorker" parameterType="codedriver.framework.process.dto.ProcessTaskStepWorkerVo">
        INSERT ignore INTO `processtask_step_worker` (`processtask_id`,
                                               `processtask_step_id`,
                                               `type`,
                                               `uuid`,
                                               `user_type`)
        VALUES (#{processTaskId},
                #{processTaskStepId},
                #{type},
                #{uuid},
                #{userType})
    </insert>

    <insert id="insertProcessTaskStepRel" parameterType="codedriver.framework.process.dto.ProcessTaskStepRelVo">
        INSERT INTO `processtask_step_rel` (`processtask_id`,
                                            `from_process_step_uuid`,
                                            `to_process_step_uuid`,
                                            `from_processtask_step_id`,
                                            `to_processtask_step_id`,
                                            `condition`,
                                            `is_hit`,
                                            `uuid`,
                                            `name`,
                                            `type`)
        VALUES (#{processTaskId},
                #{fromProcessStepUuid},
                #{toProcessStepUuid},
                #{fromProcessTaskStepId},
                #{toProcessTaskStepId},
                #{condition},
                #{isHit},
                #{processStepRelUuid},
                #{name},
                #{type})
    </insert>

    <insert id="insertProcessTaskStep" parameterType="codedriver.framework.process.dto.ProcessTaskStepVo">
        <!-- <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER"> select LAST_INSERT_ID() as id </selectKey> -->
        INSERT INTO `processtask_step` (
        `id`,
        `processtask_id`,
        `name`,
        `process_step_uuid`,
        `status`,
        `type`,
        `handler`,
        `is_active`,
        `config_hash`
        )
        VALUES
        (
        #{id},
        #{processTaskId},
        #{name},
        #{processStepUuid},
        #{status},
        #{type},
        #{handler},
        #{isActive},
        #{configHash}
        )
    </insert>

    <insert id="replaceProcessTaskStep" parameterType="codedriver.framework.process.dto.ProcessTaskStepVo">
        <!-- <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER"> select LAST_INSERT_ID() as id </selectKey> -->
        REPLACE INTO `processtask_step` (
        `id`,
        `processtask_id`,
        `name`,
        `process_step_uuid`,
        `status`,
        `type`,
        `handler`,
        `is_active`,
        `active_time`,
        `start_time`,
        `end_time`,
        `config_hash`
        )
        VALUES
        (
        #{id},
        #{processTaskId},
        #{name},
        #{processStepUuid},
        #{status},
        #{type},
        #{handler},
        #{isActive},
        #{activeTime},
        #{startTime},
        #{endTime},
        #{configHash}
        )
    </insert>

    <insert id="insertProcessTask" parameterType="codedriver.framework.process.dto.ProcessTaskVo">
        <!-- <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER"> select LAST_INSERT_ID() as id </selectKey> -->
        INSERT INTO `processtask` (
        `id`,
        `title`,
        `process_uuid`,
        `channel_uuid`,
        `config_hash`,
        `priority_uuid`,
        `status`,
        `start_time`,
        `owner`,
        `reporter`,
        `expire_time`,
        `worktime_uuid`,
        `serial_number`,
        `source`
        )
        VALUES
        (
        #{id},
        #{title},
        #{processUuid},
        #{channelUuid},
        #{configHash},
        #{priorityUuid},
        #{status},
        NOW(3),
        #{owner},
        #{reporter},
        #{expireTime},
        #{worktimeUuid},
        #{serialNumber},
        #{source}
        )
    </insert>

    <insert id="replaceProcessTask" parameterType="codedriver.framework.process.dto.ProcessTaskVo">
        <!-- <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER"> select LAST_INSERT_ID() as id </selectKey> -->
        REPLACE INTO `processtask` (
        `id`,
        `title`,
        `process_uuid`,
        `channel_uuid`,
        `config_hash`,
        `priority_uuid`,
        `status`,
        `start_time`,
        `owner`,
        `reporter`,
        `expire_time`,
        `serial_number`,
        `worktime_uuid`
        )
        VALUES
        (
        #{id},
        #{title},
        #{processUuid},
        #{channelUuid},
        #{configHash},
        #{priorityUuid},
        #{status},
        NOW(3),
        #{owner},
        #{reporter},
        #{expireTime},
        #{serialNumber},
        #{worktimeUuid}
        )
    </insert>

    <insert id="insertIgnoreProcessTaskContent" parameterType="codedriver.framework.process.dto.ProcessTaskContentVo">
        INSERT IGNORE INTO `processtask_content` (`content`, `hash`)
        VALUES (#{content}, #{hash})
    </insert>

    <insert id="insertProcessTaskStepContent" parameterType="codedriver.framework.process.dto.ProcessTaskStepContentVo">
        INSERT INTO `processtask_step_content` (`id`,
                                                `processtask_id`,
                                                `processtask_step_id`,
                                                `content_hash`,
                                                `type`,
                                                `fcd`,
                                                `fcu`,
                                                `lcd`,
                                                `lcu`)
        VALUES (#{id},
                #{processTaskId},
                #{processTaskStepId},
                #{contentHash},
                #{type},
                NOW(3),
                #{fcu},
                NOW(3),
                #{fcu})
    </insert>

    <insert id="insertProcessTaskStepUser" parameterType="codedriver.framework.process.dto.ProcessTaskStepUserVo">
        INSERT INTO `processtask_step_user` (`processtask_id`,
                                             `processtask_step_id`,
                                             `user_uuid`,
                                             `user_type`,
                                             `user_name`,
                                             `status`,
                                             `active_time`,
                                             `start_time`)
        VALUES (#{processTaskId},
                #{processTaskStepId},
                #{userUuid},
                #{userType},
                #{userName},
                #{status},
                NOW(3),
                NOW(3))
    </insert>

    <insert id="insertIgnoreProcessTaskStepUser" parameterType="codedriver.framework.process.dto.ProcessTaskStepUserVo">
        INSERT IGNORE INTO `processtask_step_user` (`processtask_id`,
                                             `processtask_step_id`,
                                             `user_uuid`,
                                             `user_type`,
                                             `user_name`,
                                             `status`,
                                             `active_time`,
                                             `end_time`,
                                             `start_time`)
        VALUES (#{processTaskId},
                #{processTaskStepId},
                #{userUuid},
                #{userType},
                #{userName},
                #{status},
                #{activeTime},
                #{endTime},
                #{startTime})
    </insert>

    <insert id="insertIgnoreProcessTaskStepConfig" parameterType="codedriver.framework.process.dto.ProcessTaskStepConfigVo">
        insert ignore INTO `processtask_step_config` (`hash`, `config`)
        VALUES (#{hash}, #{config})
    </insert>

    <insert id="insertProcessTaskStepFormAttribute"
            parameterType="codedriver.framework.process.dto.ProcessTaskStepFormAttributeVo">
        INSERT INTO `processtask_step_formattribute` (`processtask_id`,
                                                      `processtask_step_id`,
                                                      `attribute_uuid`,
                                                      `action`,
                                                      `type`)
        VALUES (#{processTaskId},
                #{processTaskStepId},
                #{attributeUuid},
                #{action},
                #{type})
    </insert>

    <insert id="insertIgnoreProcessTaskConfig" parameterType="codedriver.framework.process.dto.ProcessTaskConfigVo">
        INSERT IGNORE INTO `processtask_config` (`hash`, `config`)
        VALUES (#{hash}, #{config})
    </insert>

    <insert id="insertProcessTaskSlaTime" parameterType="codedriver.framework.process.dto.ProcessTaskSlaTimeVo">
        INSERT INTO `processtask_sla_time` (`sla_id`,
                                            `time_sum`,
                                            `expire_time`,
                                            `realexpire_time`,
                                            `time_left`,
                                            `realtime_left`,
                                            `status`)
        VALUES (#{slaId},
                #{timeSum},
                #{expireTime},
                #{realExpireTime},
                #{timeLeft},
                #{realTimeLeft},
                #{status})
    </insert>

    <insert id="insertProcessTaskStepFile" parameterType="codedriver.framework.process.dto.ProcessTaskStepFileVo">
        INSERT INTO `processtask_file` (`processtask_id`,
                                        `processtask_step_id`,
                                        `content_id`,
                                        `file_id`)
        VALUES (#{processTaskId},
                #{processTaskStepId},
                #{contentId},
                #{fileId})
    </insert>

    <insert id="insertProcessTaskAssignWorker"
            parameterType="codedriver.framework.process.dto.ProcessTaskAssignWorkerVo">
        INSERT INTO `processtask_assignworker` (`processtask_id`,
                                                `processtask_step_id`,
                                                `from_processtask_step_id`,
                                                `from_process_step_uuid`,
                                                `type`,
                                                `uuid`,
                                                `fcu`,
                                                `fcd`)
        VALUES (#{processTaskId},
                #{processTaskStepId},
                #{fromProcessTaskStepId},
                #{fromProcessStepUuid},
                #{type},
                #{uuid},
                #{fcu},
                NOW(3))
    </insert>

    <insert id="insertIgnoreProcessTaskStepNotifyPolicyConfig"
            parameterType="codedriver.framework.process.dto.ProcessTaskStepNotifyPolicyVo">
        INSERT IGNORE INTO `processtask_step_notify_policy_config` (`hash`, `config`)
        VALUES (#{policyConfigHash}, #{policyConfig})
    </insert>

    <insert id="insertProcessTaskStepNotifyPolicy"
            parameterType="codedriver.framework.process.dto.ProcessTaskStepNotifyPolicyVo">
        INSERT INTO `processtask_step_notify_policy` (`processtask_step_id`,
                                                      `policy_id`,
                                                      `policy_name`,
                                                      `policy_handler`,
                                                      `policy_config_hash`)
        VALUES (#{processTaskStepId},
                #{policyId},
                #{policyName},
                #{policyHandler},
                #{policyConfigHash})
    </insert>

    <insert id="replaceProcessTaskOldFormProp">
        REPLACE INTO `processtask_old_form_prop` (`processtask_id`, `form`, `prop`)
        VALUES (#{processTaskId}, #{form}, #{prop})
    </insert>

    <insert id="insertProcessTaskTransferReport"
            parameterType="codedriver.framework.process.dto.ProcessTaskTranferReportVo">
        INSERT INTO `processtask_tranfer_report` (`id`,
                                                  `channel_type_relation_id`,
                                                  `from_processtask_id`,
                                                  `to_processtask_id`)
        VALUES (#{id},
                #{channelTypeRelationId},
                #{fromProcessTaskId},
                #{toProcessTaskId})
    </insert>

    <insert id="replaceProcessTaskRelation" parameterType="codedriver.framework.process.dto.ProcessTaskRelationVo">
        REPLACE INTO `processtask_relation` (`id`,
                                             `channel_type_relation_id`,
                                             `source`,
                                             `target`)
        VALUES (#{id},
                #{channelTypeRelationId},
                #{source},
                #{target})
    </insert>

    <insert id="batchInsertProcessTaskImportAudit" parameterType="java.util.List">
        INSERT INTO `processtask_import_audit`(
        `id`,
        `processtask_id`,
        `title`,
        `channel_uuid`,
        `status`,
        `error_reason`,
        `owner`,
        `import_time`
        )
        VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
            #{item.id},
            #{item.processTaskId},
            #{item.title},
            #{item.channelUuid},
            #{item.status},
            #{item.errorReason},
            #{item.owner},
            NOW(3)
            )
        </foreach>
    </insert>

    <insert id="insertProcessTaskStepRemind" parameterType="codedriver.framework.process.dto.ProcessTaskStepRemindVo">
        INSERT INTO `processtask_step_remind` (`processtask_id`,
                                               `processtask_step_id`,
                                               `action`,
                                               `title`,
                                               `fcu`,
                                               `fcd`,
                                               `content_hash`)
        VALUES (#{processTaskId},
                #{processTaskStepId},
                #{action},
                #{title},
                #{fcu},
                NOW(3),
                #{contentHash})
    </insert>

    <insert id="insertProcessTaskScoreTemplate"
            parameterType="codedriver.framework.process.dto.ProcessTaskScoreTemplateVo">
        INSERT INTO `processtask_score_template` (`processtask_id`,
                                                  `score_template_id`,
                                                  `is_auto`,
                                                  `config_hash`)
        VALUES (#{processTaskId},
                #{scoreTemplateId},
                #{isAuto},
                #{configHash})
    </insert>

    <insert id="insertProcessTaskScoreTemplateConfig"
            parameterType="codedriver.framework.process.dto.ProcessTaskScoreTemplateConfigVo">
        INSERT INTO `processtask_score_template_config` (`hash`, `config`)
        VALUES (#{hash}, #{config})
    </insert>

    <insert id="insertProcessTaskFocus">
        INSERT IGNORE INTO `processtask_focus` (`processtask_id`, `user_uuid`)
        VALUES (#{processTaskId}, #{userUuid})
    </insert>

    <insert id="replaceProcessTaskStepAgent" parameterType="codedriver.framework.process.dto.ProcessTaskStepAgentVo">
        REPLACE INTO `processtask_step_agent` (`processtask_id`,
                                               `processtask_step_id`,
                                               `user_uuid`,
                                               `agent_uuid`)
        VALUES (#{processTaskId},
                #{processTaskStepId},
                #{userUuid},
                #{agentUuid})
    </insert>

    <insert id="insertProcessTaskTag" parameterType="codedriver.framework.process.dto.ProcessTaskTagVo">
        INSERT INTO `processtask_tag` (`processtask_id`, `tag_id`)
        VALUES
        <foreach collection="processTaskTagList" item="tag" open="(" separator="),(" close=")">
            #{tag.processTaskId},
            #{tag.tagId}
        </foreach>
    </insert>

    <insert id="insertProcessTaskStepInOperation"
            parameterType="codedriver.framework.process.dto.ProcessTaskStepInOperationVo">
        INSERT IGNORE INTO `processtask_step_in_operation` (`processtask_id`,
                                                            `processtask_step_id`,
                                                            `operation_type`,
                                                            `operation_time`)
        VALUES (#{processTaskId},
                #{processTaskStepId},
                #{operationType},
                NOW(3))
    </insert>

    <insert id="insertProcessTaskStepTag" parameterType="codedriver.framework.process.dto.ProcessTaskStepTagVo">
        INSERT INTO `processtask_step_tag` (
            `processtask_id`,
            `processtask_step_id`,
            `tag_id`
        )
        VALUES
        (
            #{processTaskId},
            #{processTaskStepId},
            #{tagId}
        )
    </insert>

    <insert id="replaceProcessTaskRepeatList" parameterType="codedriver.framework.process.dto.ProcessTaskRepeatVo">
        REPLACE INTO `processtask_repeat` (`processtask_id`, `repeat_group_id`) VALUES
        <foreach collection="list" item="processTaskRepeat" separator=",">
            (#{processTaskRepeat.processTaskId}, #{processTaskRepeat.repeatGroupId})
        </foreach>
    </insert>

    <insert id="replaceProcessTaskRepeat" parameterType="codedriver.framework.process.dto.ProcessTaskRepeatVo">
        REPLACE INTO `processtask_repeat` (`processtask_id`, `repeat_group_id`)
        VALUES (#{processTaskId}, #{repeatGroupId})
    </insert>

    <insert id="insertProcessTaskStepReapprovalRestoreBackup" parameterType="codedriver.framework.process.dto.ProcessTaskStepReapprovalRestoreBackupVo">
        INSERT INTO `processtask_step_reapproval_restore_backup` (
            `processtask_id`,
            `processtask_step_id`,
            `backup_step_id`,
            `config`,
            `sort`
        )
        VALUES
        (
            #{processTaskId},
            #{processTaskStepId},
            #{backupStepId},
            #{configStr},
            #{sort}
        )
    </insert>

    <update id="updateProcessTaskSlaTransfer" parameterType="codedriver.framework.process.dto.ProcessTaskSlaTransferVo">
        UPDATE
            `processtask_sla_transfer`
        SET `trigger_time` = #{triggerTime}
        WHERE id = #{id}
    </update>

    <update id="updateProcessTaskSlaNotify" parameterType="codedriver.framework.process.dto.ProcessTaskSlaNotifyVo">
        UPDATE
            `processtask_sla_notify`
        SET `trigger_time` = #{triggerTime}
        WHERE id = #{id}
    </update>

    <update id="updateProcessTaskSlaTime" parameterType="codedriver.framework.process.dto.ProcessTaskSlaTimeVo">
        UPDATE
            `processtask_sla_time`
        SET `expire_time`     = #{expireTime},
            `realexpire_time` = #{realExpireTime},
            `time_left`       = #{timeLeft},
            `realtime_left`   = #{realTimeLeft},
            `time_sum`        = #{timeSum},
            `status`        = #{status}
        WHERE `sla_id` = #{slaId}
    </update>

    <update id="updateProcessTaskSlaTimeStatus" parameterType="codedriver.framework.process.dto.ProcessTaskSlaTimeVo">
        UPDATE
            `processtask_sla_time`
        SET `status` = #{status}
        WHERE `sla_id` = #{slaId}
    </update>

    <update id="updateProcessTaskStepUserStatus" parameterType="codedriver.framework.process.dto.ProcessTaskStepUserVo">
        UPDATE
        `processtask_step_user`
        SET
        <choose>
            <when test="status == 'doing'">
                `start_time` = NOW(3),
                `end_time` = NULL,
            </when>
            <when test="status == 'done'">
                `end_time` = NOW(3),
            </when>
        </choose>
        `status` = #{status}
        WHERE
        `processtask_step_id` = #{processTaskStepId}
        AND `user_uuid` = #{userUuid}
        AND `user_type` = #{userType}
    </update>

    <update id="updateProcessTaskStatus" parameterType="codedriver.framework.process.dto.ProcessTaskVo">
        UPDATE
        `processtask`
        SET
        <choose>
            <when test="status == 'succeed' or status == 'failed' or status == 'aborted'">
                `end_time` = NOW(3),
            </when>
            <otherwise>
                `end_time` = null,
            </otherwise>
        </choose>
        `status` = #{status}
        WHERE
        `id` = #{id}
    </update>

    <update id="updateProcessTaskTitleOwnerPriorityUuid" parameterType="codedriver.framework.process.dto.ProcessTaskVo">
        UPDATE
            `processtask`
        SET `title`         = #{title},
            `priority_uuid` = #{priorityUuid},
            `owner`         = #{owner}
        WHERE `id` = #{id}
    </update>

    <update id="updateProcessTaskStepContentById">
        UPDATE `processtask_step_content`
        SET `content_hash` = #{contentHash},
            `lcd`          = NOW(3),
            `lcu`          = #{lcu}
        WHERE `id` = #{id}
    </update>

    <update id="updateProcessTaskStepWorkerUuid"
            parameterType="codedriver.framework.process.dto.ProcessTaskStepWorkerVo">
        UPDATE `processtask_step_worker`
        SET `uuid` = #{newUuid}
        WHERE `processtask_step_id` = #{processTaskStepId}
          AND `type` = #{type}
          AND `uuid` = #{uuid}
          AND `user_type` = #{userType}
    </update>

    <update id="updateProcessTaskStepUserUserUuid"
            parameterType="codedriver.framework.process.dto.ProcessTaskStepUserVo">
        UPDATE `processtask_step_user`
        SET `user_uuid` = #{newUserUuid}
        WHERE `processtask_step_id` = #{processTaskStepId}
          AND `user_uuid` =
              #{userVo.uuid}
          AND `user_type` = #{userType}
    </update>

    <update id="updateProcessTaskIsShow" parameterType="codedriver.framework.process.dto.ProcessTaskVo">
        UPDATE `processtask`
        SET `is_show` = #{isShow}
        WHERE id = #{id}
    </update>

    <update id="updateProcessTaskPriorityUuidById">
        UPDATE `processtask`
        SET `priority_uuid` = #{priorityUuid}
        WHERE `id` = #{id}
    </update>

    <update id="updateProcessTaskSerialNumberById">
        UPDATE `processtask`
        SET `serial_number` = #{serialNumber}
        WHERE `id` = #{id}
    </update>

    <delete id="deleteProcessTaskConvergeByStepId" parameterType="java.lang.Long">
        DELETE
        FROM `processtask_converge`
        WHERE `processtask_step_id` = #{value}
    </delete>

    <delete id="deleteProcessTaskConvergeByProcessTaskId" parameterType="java.lang.Long">
        DELETE
        FROM `processtask_converge`
        WHERE `processtask_id` = #{value}
    </delete>

    <delete id="deleteProcessTaskFormAttributeDataByProcessTaskId" parameterType="java.lang.Long">
        DELETE
        FROM `processtask_formattribute_data`
        WHERE `processtask_id` = #{value}
    </delete>

    <delete id="deleteProcessTaskStepWorker" parameterType="codedriver.framework.process.dto.ProcessTaskStepWorkerVo">
        DELETE FROM `processtask_step_worker`
        <where>
            <if test="processTaskId != null and processTaskId != ''">
                `processtask_id` = #{processTaskId}
            </if>
            <if test="processTaskStepId != null and processTaskStepId != ''">
                AND `processtask_step_id` = #{processTaskStepId}
            </if>
            <if test="type != null and type != ''">
                AND `type` = #{type}
            </if>
            <if test="uuid != null and uuid != ''">
                AND `uuid` = #{uuid}
            </if>
            <if test="userType != null and userType != ''">
                AND `user_type` = #{userType}
            </if>
        </where>
    </delete>

    <delete id="deleteProcessTaskStepUser">
        DELETE
        FROM
        `processtask_step_user`
        WHERE `processtask_step_id` = #{processTaskStepId}
        <if test="userType != null and userType != ''">
            AND `user_type` = #{userType}
        </if>
        <if test="userVo != null and userVo.uuid != null and userVo.uuid != ''">
            AND `user_uuid` = #{userUuid}
        </if>
    </delete>

    <delete id="deleteProcessTaskSlaNotifyById" parameterType="java.lang.Long">
        DELETE
        FROM `processtask_sla_notify`
        WHERE id = #{value}
    </delete>

    <delete id="deleteProcessTaskSlaTransferById" parameterType="java.lang.Long">
        DELETE
        FROM `processtask_sla_transfer`
        WHERE id = #{value}
    </delete>

    <delete id="deleteProcessTaskSlaTransferBySlaId" parameterType="java.lang.Long">
        DELETE
        FROM `processtask_sla_transfer`
        WHERE sla_id = #{value}
    </delete>

    <delete id="deleteProcessTaskSlaNotifyBySlaId" parameterType="java.lang.Long">
        DELETE
        FROM `processtask_sla_notify`
        WHERE sla_id = #{value}
    </delete>

    <delete id="deleteProcessTaskAssignWorker"
            parameterType="codedriver.framework.process.dto.ProcessTaskAssignWorkerVo">
        DELETE
        FROM `processtask_assignworker`
        WHERE `processtask_id` = #{processTaskId}
          AND `processtask_step_id` = #{processTaskStepId}
          AND `from_processtask_step_id` = #{fromProcessTaskStepId}
    </delete>

    <delete id="deleteProcessTaskAssignWorkerByProcessTaskId" parameterType="java.lang.Long">
        DELETE
        FROM `processtask_assignworker`
        WHERE `processtask_id` = #{value}
    </delete>

    <delete id="deleteProcessTaskStepFileByProcessTaskStepId">
        DELETE
        FROM `processtask_file`
        WHERE `processtask_id` = #{processTaskId}
          and `processtask_step_id` = #{processTaskStepId}
    </delete>

    <delete id="deleteProcessTaskStepFileByProcessTaskId" parameterType="java.lang.Long">
        DELETE
        FROM `processtask_file`
        WHERE `processtask_id` = #{value}
    </delete>

    <delete id="deleteProcessTaskStepContentByProcessTaskStepId" parameterType="java.lang.Long">
        DELETE
        FROM `processtask_step_content`
        WHERE `processtask_step_id` = #{value}
    </delete>

    <delete id="deleteProcessTaskStepFileByContentId" parameterType="java.lang.Long">
        DELETE
        FROM `processtask_file`
        WHERE `content_id` = #{value}
    </delete>

    <delete id="deleteProcessTaskStepContentById" parameterType="java.lang.Long">
        DELETE
        FROM `processtask_step_content`
        WHERE `id` = #{value}
    </delete>

    <delete id="deleteProcessTaskRelationById" parameterType="java.lang.Long">
        DELETE
        FROM `processtask_relation`
        WHERE `id` = #{value}
    </delete>

    <delete id="deleteProcessTaskStepRemind" parameterType="codedriver.framework.process.dto.ProcessTaskStepRemindVo">
        DELETE FROM `processtask_step_remind`
        WHERE `processtask_step_id` = #{processTaskStepId}
        <if test="action != null and action != ''">
            AND `action` = #{action}
        </if>
    </delete>

    <delete id="deleteProcessTaskFocus">
        DELETE FROM `processtask_focus` WHERE `processtask_id` = #{processTaskId}
        <if test="userUuid != null">
            and `user_uuid` = #{userUuid}
        </if>
    </delete>

    <delete id="deleteProcessTaskFocusByProcessTaskId">
        DELETE
        FROM `processtask_focus`
        WHERE `processtask_id` = #{value}
    </delete>

    <delete id="deleteProcessTaskFormByProcessTaskId" parameterType="java.lang.Long">
        delete
        from `processtask_form`
        where `processtask_id` = #{value}
    </delete>

    <delete id="deleteProcessTaskSlaTimeBySlaId" parameterType="java.lang.Long">
        delete
        from `processtask_sla_time`
        where `sla_id` = #{value}
    </delete>

    <delete id="deleteProcessTaskStepByProcessTaskId" parameterType="java.lang.Long">
        DELETE ps,psa,psau,psaud,psc,psnp,psd,psf,psr,psrl,pss,pssu,pssc,pst,psu,psw,pswp
        FROM `processtask_step` ps
                 LEFT JOIN
             `processtask_step_agent` psa
             ON psa.`processtask_id` = ps.`processtask_id` AND psa.`processtask_step_id` = ps.id
                 LEFT JOIN `processtask_step_audit` psau ON psau.`processtask_id` = ps.`processtask_id`
            AND psau.`processtask_step_id` = ps.id
                 LEFT JOIN `processtask_step_audit_detail` psaud ON psau.id = psaud.audit_id
                 LEFT JOIN `processtask_step_content` psc ON psc.`processtask_id` =
                                                             ps.`processtask_id` AND psc.`processtask_step_id` = ps.id
                 LEFT JOIN `processtask_step_notify_policy` psnp ON psnp.`processtask_step_id` = ps.id
                 LEFT JOIN `processtask_step_data` psd
                           ON psd.`processtask_id` = ps.`processtask_id` AND psd.`processtask_step_id` =
                                                                             ps.id
                 LEFT JOIN `processtask_step_formattribute` psf
                           ON psf.`processtask_id` = ps.`processtask_id` AND psf.`processtask_step_id` = ps.id
                 LEFT JOIN `processtask_step_remind` psr ON psr.`processtask_id`
                                                                = ps.`processtask_id` AND
                                                            psr.`processtask_step_id` = ps.id
                 LEFT JOIN `processtask_step_rel` psrl ON psrl.`processtask_id` = ps.`processtask_id`
                 LEFT JOIN `processtask_step_sla` pss ON
            pss.`processtask_step_id` = ps.id
                 LEFT JOIN `processtask_step_subtask` pssu
                           ON pssu.`processtask_id` = ps.`processtask_id` AND pssu.`processtask_step_id` = ps.id
                 LEFT JOIN
             `processtask_step_subtask_content` pssc ON pssu.`id` = pssc.`processtask_step_subtask_id`
                 LEFT JOIN `processtask_step_timeaudit` pst ON pst.`processtask_step_id` = ps.id
                 LEFT JOIN `processtask_step_user` psu ON psu.`processtask_id` =
                                                          ps.`processtask_id` AND psu.`processtask_step_id` = ps.id
                 LEFT JOIN `processtask_step_worker` psw
                           ON psw.`processtask_id` = ps.`processtask_id` AND psw.`processtask_step_id` = ps.id
                 LEFT JOIN
             `processtask_step_worker_policy` pswp
             ON pswp.`processtask_id` = ps.`processtask_id` AND pswp.`processtask_step_id` = ps.id
        WHERE ps.`processtask_id` = #{value}
    </delete>

    <delete id="deleteProcessTaskByProcessTaskId" parameterType="java.lang.Long">
        delete
        from `processtask`
        where `id` = #{value}
    </delete>

    <delete id="deleteProcessTaskStepAgentByProcessTaskStepId" parameterType="java.lang.Long">
        DELETE
        FROM `processtask_step_agent`
        WHERE `processtask_step_id` = #{value}
    </delete>

    <delete id="deleteProcessTaskTagByProcessTaskId" parameterType="java.lang.Long">
        DELETE
        FROM `processtask_tag`
        WHERE `processtask_id` = #{value}
    </delete>

    <delete id="deleteProcessTaskStepInOperationByProcessTaskStepIdAndOperationType"
            parameterType="codedriver.framework.process.dto.ProcessTaskStepInOperationVo">
        DELETE
        FROM `processtask_step_in_operation`
        WHERE `processtask_step_id` = #{processTaskStepId}
          and `operation_type` = #{operationType}
    </delete>
    <delete id="deleteProcessTaskStepWorkerMinorByProcessTaskStepId">
        DELETE
        FROM `processtask_step_worker`
        where `processtask_step_id` = #{processTaskStepId} and `user_type` = 'minor'
    </delete>

    <delete id="deleteProcessTaskStepUserMinorByProcessTaskStepId">
        DELETE
        FROM `processtask_step_user`
        where `processtask_step_id` = #{processTaskStepId} and `user_type` = 'minor'
    </delete>

    <delete id="deleteProcessTaskRepeatByProcessTaskId" parameterType="java.lang.Long">
        DELETE FROM `processtask_repeat` WHERE `processtask_id` = #{processTaskId}
    </delete>

    <delete id="deleteProcessTaskStepReapprovalRestoreBackupByBackupStepId" parameterType="java.lang.Long">
        DELETE FROM `processtask_step_reapproval_restore_backup` WHERE `backup_step_id` = #{value}
    </delete>
</mapper>
