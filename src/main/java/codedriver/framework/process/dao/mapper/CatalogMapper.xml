<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.framework.process.dao.mapper.CatalogMapper">
	<select id="getCatalogList" resultType="codedriver.framework.process.dto.CatalogVo">
	SELECT 
	  `uuid`,
	  `name`,
	  `parent_uuid` AS `parentUuid`,
	  `is_active` AS `isActive`,
	  `icon`,
	  `color`,
	  `desc`,
	  `sort` 
	FROM
	  `catalog`
	 WHERE 1=1
	 <if test="isActive != null">
	 	AND `is_active` = #{isActive}
	 </if>
	 <if test="parentUuid != null">
	 	AND `parent_uuid` = #{parentUuid}
	 </if>
	 ORDER BY `sort`
	</select>
	
	<select id="getCatalogByUuid" resultType="codedriver.framework.process.dto.CatalogVo">
	SELECT 
	  `uuid`,
	  `name`,
	  `parent_uuid` AS `parentUuid`,
	  `is_active` AS `isActive`,
	  `icon`,
	  `color`,
	  `desc`,
	  `sort` 
	FROM
	  `catalog`
	 where `uuid` = #{uuid}
	</select>
	
	<select id="getMaxSortByParentUuid" resultType="int">
	SELECT  IFNULL(MAX(`sort`), 0) FROM `catalog` WHERE `parent_uuid` = #{parentUuid}
	</select>
	
	<select id="getCatalogRoleNameListByCatalogUuid" resultType="java.lang.String">
	SELECT `role_name` FROM `catalog_role` WHERE `catalog_uuid` = #{catalogUuid}
	</select>
	
	<select id="checkCatalogIsExists" resultType="int">
	SELECT COUNT(`uuid`) FROM `catalog` where `uuid`=#{uuid}
	</select>
	
	<select id="getHasActiveChannelCatalogUuidList" resultType="java.lang.String">
	SELECT 
	DISTINCT ca.`uuid` 
	FROM catalog ca
	JOIN channel ch ON ch.`parent_uuid`=ca.`uuid` AND ch.`is_active` = 1
	WHERE ca.`is_active` = 1
	</select>
	
	<select id="checkCatalogNameIsRepeat" resultType="int">
	SELECT COUNT(1) FROM `catalog` where `name`=#{name} AND `uuid`!=#{uuid}
	</select>
	
	<resultMap type="codedriver.framework.process.dto.CatalogVo" id="catalogMap">
		<id column="uuid" property="uuid"/>
		<result column="name" property="name"/>
		<result column="parent_uuid" property="parentUuid"/>
		<result column="sort" property="sort"/>
	</resultMap>
	
	<select id="getCatalogListForTree" resultMap="catalogMap">
	SELECT 
	  `uuid`,
	  `name`,
	  `parent_uuid`,
	  `sort`
	FROM `catalog` 
	 <if test="isActive != null">
	 WHERE `is_active` = #{isActive}
	 </if>
	 ORDER BY `parent_uuid`, `sort`
	</select>
	
	<insert id="replaceCatalog">
	REPLACE INTO `catalog`(`uuid`, `name`, `parent_uuid`, `is_active`, `icon`, `color`, `desc`, `sort`) 
	VALUES(#{uuid}, #{name}, #{parentUuid}, #{isActive}, #{icon}, #{color}, #{desc}, #{sort})
	</insert>
	
	<insert id="insertCatalogRole">
	INSERT INTO `catalog_role`(`catalog_uuid`, `role_name`) VALUES(#{catalogUuid}, #{roleName})
	</insert>
	
	<update id="updateCatalogForMove">
	UPDATE `catalog` SET `parent_uuid` = #{parentUuid}, `sort` = #{sort} WHERE `uuid` = #{uuid}
	</update>

	<update id="updateSortIncrement" parameterType="java.util.HashMap">
	UPDATE `catalog` SET `sort` = `sort` + 1 
	WHERE `parent_uuid` = #{parentUuid} 
	AND `sort` &gt;= #{fromSort} 
	<if test="toSort != null">
	AND `sort` &lt;= #{toSort}
	</if>
	</update>

	<update id="updateSortDecrement" parameterType="java.util.HashMap">
	UPDATE `catalog` SET `sort` = `sort` - 1 
	WHERE `parent_uuid` = #{parentUuid} 
	AND `sort` &gt;= #{fromSort} 
	<if test="toSort != null">
	AND `sort` &lt;= #{toSort}
	</if>
	</update>
	
	<delete id="deleteCatalogByUuid">
	DELETE FROM `catalog` WHERE `uuid` = #{uuid}
	</delete>
	
	<delete id="deleteCatalogRoleByUuid">
	DELETE FROM `catalog_role` WHERE `catalog_uuid` = #{catalogUuid}
	</delete>
	
</mapper>