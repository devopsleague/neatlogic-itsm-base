<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.framework.process.dao.mapper.WorktimeMapper">
	<cache type="codedriver.framework.dao.cache.CodeDriverCache" flushInterval="30000" size="100"></cache>
	<select id="getWorktimeByUuid" parameterType="java.lang.String" resultType="codedriver.framework.process.dto.WorktimeVo" useCache="true">
		SELECT
		wt.`uuid`,
		wt.`name`,
		wt.`is_active` AS isActive,
		wt.`lcu`,
		wt.`lcd`,
		wt.`config`
		FROM `worktime` wt
		WHERE wt.`uuid` = #{uuid}
	</select>
	
	<select id="getWorktimeByName" parameterType="java.lang.String" resultType="codedriver.framework.process.dto.WorktimeVo" useCache="false">
		SELECT
		wt.`uuid`,
		wt.`name`,
		wt.`is_active` AS isActive,
		wt.`lcu`,
		wt.`lcd`,
		wt.`config`
		FROM `worktime` wt
		WHERE wt.`name` = #{value}
	</select>

	<select id="checkWorktimeNameIsRepeat" parameterType="codedriver.framework.process.dto.WorktimeVo" resultType="int" useCache="false">
		SELECT COUNT(1) FROM `worktime` WHERE `name` = #{name} AND `uuid` != #{uuid}
	</select>

	<select id="checkWorktimeIsExists" parameterType="java.lang.String" resultType="int" useCache="false">
		SELECT COUNT(`uuid`) FROM `worktime` WHERE `uuid` = #{uuid}
	</select>

	<select id="searchWorktimeCount" parameterType="codedriver.framework.process.dto.WorktimeVo" resultType="int" useCache="false">
		SELECT
		COUNT(`uuid`)
		FROM `worktime` wt
		WHERE 1 = 1
		<if test="keyword != null and keyword != ''">
			AND wt.`name` LIKE CONCAT('%', #{keyword}, '%')
		</if>
		<if test="isActive != null">
			AND wt.`is_active` = #{isActive}
		</if>
	</select>

	<resultMap id="worktimeMap" type="codedriver.framework.process.dto.WorktimeVo">
		<id column="uuid" property="uuid" />
		<result column="name" property="name" />
		<result column="is_active" property="isActive" />
		<result column="config" property="config" />
	</resultMap>

	<select id="searchWorktimeList" parameterType="codedriver.framework.process.dto.WorktimeVo" resultMap="worktimeMap" useCache="false">
		SELECT
		wt.`uuid`,
		wt.`name`,
		wt.`is_active`,
		wt.`config`
		FROM `worktime` wt
		WHERE 1 = 1
		<if test="keyword != null and keyword != ''">
			AND wt.`name` LIKE CONCAT('%', #{keyword}, '%')
		</if>
		<if test="isActive != null">
			AND wt.`is_active` = #{isActive}
		</if>
		ORDER BY wt.`lcd`
		<if test="needPage">
			limit #{startNum}, #{pageSize}
		</if>
	</select>

	<select id="searchWorktimeListForSelect" parameterType="codedriver.framework.process.dto.WorktimeVo" resultType="codedriver.framework.common.dto.ValueTextVo" useCache="false">
		SELECT
		wt.`uuid` as `value`,
		wt.`name` as `text`
		FROM `worktime` wt
		WHERE 1 = 1
		<if test="keyword != null and keyword != ''">
			AND wt.`name` LIKE CONCAT('%', #{keyword}, '%')
		</if>
		<if test="isActive != null">
			AND wt.`is_active` = #{isActive}
		</if>
		ORDER BY wt.`lcd`
		<if test="needPage">
			limit #{startNum}, #{pageSize}
		</if>
	</select>

	<resultMap type="codedriver.framework.process.dto.WorktimeRangeVo" id="worktimeRangeMap">
		<result column="year" property="year" />
		<result column="date" property="date" />
		<result column="worktime_uuid" property="worktimeUuid" />
		<result column="start_time" property="startTime" />
		<result column="end_time" property="endTime" />
	</resultMap>
	<select id="getWorktimeRangeListByWorktimeUuid" parameterType="java.lang.String" resultMap="worktimeRangeMap" useCache="false">
		SELECT
		`year`,
		`date`,
		`worktime_uuid`,
		`start_time`,
		`end_time`
		FROM
		`worktime_range`
		WHERE `worktime_uuid` = #{worktimeUuid}
		ORDER BY `start_time`
	</select>

	<select id="getWorktimeRangeAfterDeadline" resultMap="worktimeRangeMap" useCache="false">
		SELECT
		`year`,
		`date`,
		`worktime_uuid`,
		`start_time`,
		`end_time`
		FROM
		`worktime_range`
		WHERE `worktime_uuid` = #{worktimeUuid}
		and STR_TO_DATE(`date`,'%Y-%m-%d') > STR_TO_DATE(date_format(#{deadline},'%Y-%m-%d'),'%Y-%m-%d')
	</select>

	<select id="getWorktimeDateList" parameterType="codedriver.framework.process.dto.WorktimeRangeVo" resultType="java.lang.String" useCache="false">
		SELECT
		DISTINCT `date`
		FROM
		`worktime_range`
		WHERE `worktime_uuid` = #{worktimeUuid}
		AND `year` = #{year}
	</select>

	<select id="getRecentWorktimeRange" parameterType="codedriver.framework.process.dto.WorktimeRangeVo" resultMap="worktimeRangeMap" useCache="false">
		SELECT
		`year`,
		`date`,
		`worktime_uuid`,
		`start_time`,
		`end_time`
		FROM
		`worktime_range`
		WHERE `worktime_uuid` = #{worktimeUuid}
		AND `end_time` &gt; #{startTime}
		ORDER BY `start_time`
		limit 0,1
	</select>

	<select id="calculateCostTime" resultType="long" useCache="false">
		SELECT
		IFNULL(SUM(IF(wtd.`end_time` &gt; #{endTime}, #{endTime}, wtd.`end_time`) - IF(wtd.`start_time` &lt; #{startTime}, #{startTime}, wtd.`start_time`)),0)
		FROM `worktime_range` wtd
		WHERE wtd.`worktime_uuid` = #{worktimeUuid}
		AND wtd.`end_time` &gt;= #{startTime}
		AND wtd.`start_time` &lt;= #{endTime}
	</select>

	<select id="checkIsWithinWorktimeRange" resultType="int" useCache="false">
		SELECT
		COUNT(`worktime_uuid`)
		FROM `worktime_range`
		WHERE `worktime_uuid` = #{worktimeUuid}
		AND `start_time` &lt;= #{value}
		AND `end_time` &gt;= #{value}
	</select>

	<select id="checkIsWithinWorktime" resultType="int" useCache="false">
		SELECT
		COUNT(`worktime_uuid`)
		FROM `worktime_range`
		WHERE `worktime_uuid` = #{worktimeUuid}
		AND `date` = #{date}
	</select>

	<resultMap id="worktimeYearListMap" type="codedriver.framework.process.dto.WorktimeVo">
		<id column="worktime_uuid" property="uuid" />
		<collection property="yearList" ofType="java.lang.Integer">
			<id column="year" />
		</collection>
	</resultMap>
	<select id="getYearListByWorktimeUuidList" parameterType="java.util.List" resultMap="worktimeYearListMap" useCache="false">
		SELECT
		`worktime_uuid`,
		`year`
		FROM `worktime_range`
		<where>
			<if test="list != null and list.size() > 0">
				`worktime_uuid` in
				<foreach collection="list" item="worktimeUuid" open="(" separator="," close=")">
					#{worktimeUuid}
				</foreach>
			</if>
		</where>
	</select>

	<insert id="insertWorktime" parameterType="codedriver.framework.process.dto.WorktimeVo">
		INSERT INTO `worktime` ( `uuid`, `name`, `is_active`, `lcu`, `lcd`, `config` )
		VALUES ( #{uuid}, #{name}, #{isActive}, #{lcu}, now(), #{config})
	</insert>

	<insert id="insertBatchWorktimeRange" parameterType="codedriver.framework.process.dto.WorktimeRangeVo">
		INSERT INTO `worktime_range` ( `year`, `date`, `worktime_uuid`, `start_time`, `end_time` )
		VALUES
		<foreach collection="list" item="item" separator=",">
			(#{item.year}, #{item.date}, #{item.worktimeUuid}, #{item.startTime}, #{item.endTime})
		</foreach>
	</insert>

	<update id="updateWorktime" parameterType="codedriver.framework.process.dto.WorktimeVo">
		UPDATE
		`worktime`
		SET
		`uuid` = #{uuid},
		`name` = #{name},
		`is_active` = #{isActive},
		`lcu` = #{lcu},
		`config` = #{config},
		`lcd` = now()
		WHERE `uuid` = #{uuid}
	</update>

	<delete id="deleteWorktimeByUuid" parameterType="java.lang.String">
		DELETE FROM `worktime` WHERE `uuid`=#{uuid}
	</delete>

	<delete id="deleteWorktimeRange" parameterType="codedriver.framework.process.dto.WorktimeRangeVo">
		delete from `worktime_range`
		where `worktime_uuid` = #{worktimeUuid}
		<if test="year != null">
			AND `year` = #{year}
		</if>
	</delete>
</mapper>
