<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.framework.process.dao.mapper.workcenter.WorkcenterMapper">
	<select id="getWorkcenterProcessTaskCountBySql" parameterType="java.lang.String" resultType="java.lang.Integer">
		${value}
	</select>

	<select id="getWorkcenterProcessTaskIdBySql" parameterType="java.lang.String" resultType="codedriver.framework.process.dto.ProcessTaskVo">
		${value}
	</select>

	<resultMap id="workcenterProcessTaskMap" type="codedriver.framework.process.dto.ProcessTaskVo" >
		<id column="id" property="id" />
		<result column="title" property="title" />
		<result column="process_uuid" property="processUuid" />
		<result column="channel_uuid" property="channelUuid" />
		<result column="config_hash" property="configHash" />
		<result column="priority_uuid" property="priorityUuid" />
		<result column="status" property="status" />
		<result column="start_time" property="startTime" />
		<result column="end_time" property="endTime" />
		<result column="ownerUuid" property="owner" />
		<result column="reporterUuid" property="reporter" />
		<!--<result column="reporterName" property="reporterName" />-->
		<result column="expire_time" property="expireTime" />
		<result column="worktime_uuid" property="worktimeUuid" />
		<result column="worktimeName" property="worktimeName" />
		<result column="error" property="error" />
		<result column="is_show" property="isShow" />
		<result column="serial_number" property="serialNumber" />
		<association property="channelVo" javaType="codedriver.framework.process.dto.ChannelVo">
			<result property="uuid" column="channelUuid" />
			<result property="name" column="channelName" />
			<association property="channelTypeVo" javaType="codedriver.framework.process.dto.ChannelTypeVo">
				<result property="uuid" column="channelTypeUuid" />
				<result property="color" column="channelTypeColor" />
				<result property="name" column="channelTypeName" />
			</association>
			<association property="parent" javaType="codedriver.framework.process.dto.CatalogVo">
				<result property="uuid" column="catalogUuid" />
				<result property="name" column="catalogName" />
			</association>
		</association>
		<association property="ownerVo" javaType="codedriver.framework.dto.UserVo">
			<result property="uuid" column="ownerUuid" />
			<result property="userName" column="ownerName" />
			<result property="userInfo" column="ownerInfo" />
			<result property="vipLevel" column="ownerVipLevel" />
			<result property="pinyin" column="ownerPinyin" />
		</association>
		<association property="reporterVo" javaType="codedriver.framework.dto.UserVo">
			<result property="uuid" column="reporterUuid" />
			<result property="userName" column="reporterName" />
			<result property="userInfo" column="reporterInfo" />
			<result property="vipLevel" column="reporterVipLevel" />
			<result property="pinyin" column="reporterPinyin" />
		</association>
		<association property="priority" javaType="codedriver.framework.process.dto.PriorityVo">
			<result property="uuid" column="priorityUuid" />
			<result property="name" column="priorityName" />
			<result property="color" column="priorityColor" />
		</association>
		<collection property="stepList" ofType="codedriver.framework.process.dto.ProcessTaskStepVo">
			<id column="processTaskStepId" property="id" />
			<result column="processTaskStepName" property="name" />
			<result column="processTaskStepStatus" property="status" />
			<result column="processTaskStepType" property="type" />
			<result column="processTaskStepHandler" property="handler" />
			<result column="processTaskStepIsActive" property="isActive" />
			<result column="processTaskStepStartTime" property="startTime" />
			<result column="processTaskStepConfigHash" property="configHash" />
			<result column="processTaskStepIsActive" property="isActive" />
			<result column="processTaskStepEndTime" property="endTime" />
			<collection property="workerList" ofType="codedriver.framework.process.dto.ProcessTaskStepWorkerVo">
				<result column="stepWorkerType" property="type" />
				<result column="stepWorkerUuid" property="uuid" />
			</collection>
			<collection property="userList" ofType="codedriver.framework.process.dto.ProcessTaskStepUserVo">
				<result column="userType" property="stepUserUserType" />
				<result column="stepUserUserStatus" property="status" />
				<association property="userVo" javaType="codedriver.framework.dto.UserVo">
					<result column="stepUserUserUuid" property="uuid" />
					<result column="stepUserUserName" property="userName" />
					<result column="stepUserUserInfo" property="userInfo" />
					<result column="stepUserUserVipLevel" property="vipLevel" />
					<result column="stepUserUserPinyin" property="pinyin" />
				</association>
			</collection>
		</collection>
		<collection property="focusUserList" ofType="codedriver.framework.dto.UserVo">
			<result property="uuid" column="focusUuid" />
			<result property="userName" column="focusName" />
			<result property="userInfo" column="focusInfo" />
			<result property="vipLevel" column="focusVipLevel" />
			<result property="pinyin" column="focusPinyin" />
		</collection>
		<collection property="processTaskSlaVoList" ofType="codedriver.framework.process.dto.ProcessTaskSlaVo">
			<result column="ProcessTaskSlaId" property="id" />
			<result column="ProcessTaskSlaName" property="name" />
			<result column="ProcessTaskSlaConfig" property="config" />
			<association property="slaTimeVo" javaType="codedriver.framework.process.dto.ProcessTaskSlaTimeVo">
				<result column="expireTime" property="expireTime" />
				<result column="realExpireTime" property="realExpireTime" />
				<result column="timeLeft" property="timeLeft" />
				<result column="realTimeLeft" property="realTimeLeft" />
			</association>
		</collection>

	</resultMap>

	<select id="getWorkcenterProcessTaskInfoBySql" parameterType="java.lang.String" resultMap="workcenterProcessTaskMap">
		${value }
	</select>
	
	<resultMap id="workcenterMap" type="codedriver.framework.process.workcenter.dto.WorkcenterVo">
		<id column="uuid" property="uuid" />
		<result column="name" property="name" />
		<result column="owner" property="owner" />
		<result column="type" property="type" />
		<result column="sort" property="sort" />
		<result column="condition_config" property="conditionConfig" />
		<collection property="authorityList" ofType="codedriver.framework.dto.AuthorityVo">
			<result column="authUuid" property="uuid" />
			<result column="authType" property="type" />
		</collection>
	</resultMap>
	
	<select id="getAuthorizedWorkcenterUuidList" resultType="java.lang.String">
		SELECT 
		  pw.`uuid`
		FROM
		  `process_workcenter` pw 
		   LEFT JOIN `process_workcenter_authority` pwa ON pw.`uuid` = pwa.`workcenter_uuid`
		   LEFT JOIN `process_workcenter_owner` pwo ON pw.`uuid` = pwo.`workcenter_uuid`
		<where>
			(pwa.type = 'common' AND pwa.`uuid` = 'alluser')
			<if test="userUuid != null and userUuid != ''">
			  	OR	(pwa.type = 'user' AND pwa.`uuid` = #{userUuid})
			</if>
			<if test="teamUuidList != null and teamUuidList.size() > 0">
				OR (pwa.type = 'team' AND pwa.`uuid` IN 
				<foreach collection="teamUuidList" item="teamUuid" open="(" separator=","  close=")">
					#{teamUuid}
				</foreach>
					)
			</if>
			<if test="roleUuidList != null and roleUuidList.size() > 0">
				OR (pwa.type = 'role' AND pwa.`uuid` IN 
					<foreach collection="roleUuidList" item="roleUuid" open="(" separator=","  close=")">
						#{roleUuid}
					</foreach>
					)
			</if>
			<if test="userUuid != null and userUuid != ''">
			or	pwo.`user_uuid` = #{userUuid}
			</if>
		</where>
	</select>
	
	<select id="getAuthorizedWorkcenterListByUuidList"  parameterType="java.util.List" resultMap="workcenterMap">
		SELECT 
		  pw.`uuid`,
		  pw.`name`,
		  pw.`type`,
		  pw.`sort`,
		  pw.`condition_config`,
		  pwa.`type` as authType,
		  pwa.`uuid` as authUuid,
		  pwo.`user_uuid` as `owner`
		FROM
		  `process_workcenter` pw 
		   LEFT JOIN `process_workcenter_authority` pwa ON pw.`uuid` = pwa.`workcenter_uuid`
		   LEFT JOIN `process_workcenter_owner` pwo ON pw.`uuid` = pwo.`workcenter_uuid`
		<where>
			<if test="uuidList != null and uuidList.size() > 0">
				 pw.`uuid` IN 
				<foreach collection="uuidList" item="uuid" open="(" separator=","  close=")">
					#{uuid}
				</foreach>
			</if>
		</where>
		ORDER BY pw.type asc,pw.`sort` ASC
	</select>
	
	<select id="checkWorkcenterNameIsRepeat"  parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT 
		 count(1)
		FROM
		 	`process_workcenter` pw 
		<where>
			<if test="name != null and name != ''">
				pw.`name` = #{name}
			</if>
			<if test="uuid != null and uuid != ''">
				and uuid != #{uuid}
			</if>
		</where>
	</select>
	
	<select id="getWorkcenterByNameAndUuid"  parameterType="java.lang.String" resultMap="workcenterMap">
		SELECT 
		  pw.`uuid`,
		  pw.`name`,
		  pw.`type`,
		  pw.`sort`,
		  pw.`condition_config`,
		  pwo.`user_uuid` as `owner`
		FROM
		 	`process_workcenter` pw 
		 	LEFT JOIN `process_workcenter_owner` pwo ON pw.`uuid` = pwo.`workcenter_uuid`
		<where>
			<if test="name != null and name != ''">
				pw.`name` = #{name}
			</if>
			<if test="uuid != null and uuid != ''">
				and `uuid` = #{uuid}
			</if>
		</where>
	</select>
	
	<select id="getWorkcenterConditionConfig" resultType="java.util.HashMap">
		SELECT 
		  pw.`uuid`,
		  pw.`condition_config`
		FROM
		  `process_workcenter` pw 
	</select>
	
	<select id="getWorkcenterThead" parameterType="codedriver.framework.process.workcenter.dto.WorkcenterTheadVo" resultType="codedriver.framework.process.workcenter.dto.WorkcenterTheadVo">
		SELECT 
		  `workcenter_uuid` as workcenterUuid,
		  `name`,
		  `sort`,
		  `is_show` as isShow,
		  `type`,
		  `user_uuid`  as userUuid,
		  `disabled`  as disabled
		FROM
		  `process_workcenter_thead` 
		where
		   workcenter_uuid = #{workcenterUuid}
		   and user_uuid = #{userUuid}
		order by sort asc
	</select>
	
	<select id="getWorkcenterUserProfileByUserUuid" parameterType="java.lang.String" resultType="codedriver.framework.process.workcenter.dto.WorkcenterUserProfileVo">
		select * from `process_workcenter_user_profile`
		where `user_uuid` = #{userUuid}
	</select>
	
	<delete id="deleteWorkcenterByUuid" parameterType="java.lang.String">
		DELETE 
		FROM
		  `process_workcenter`
		WHERE `uuid` = #{workcenterUuid} ;
	</delete>
	
	<delete id="deleteWorkcenterAuthorityByUuid" parameterType="java.lang.String">
		DELETE 
		FROM
		  `process_workcenter_authority`
		WHERE `workcenter_uuid` = #{workcenterUuid} ;
	</delete>
	
	<delete id="deleteWorkcenterOwnerByUuid" parameterType="java.lang.String">
		DELETE 
		FROM
		  `process_workcenter_owner`
		WHERE `workcenter_uuid` = #{workcenterUuid} ;
	</delete>

	<delete id="deleteWorkcenterThead" parameterType="codedriver.framework.process.workcenter.dto.WorkcenterTheadVo">
		DELETE 
		FROM
		  `process_workcenter_thead`
		<where>
			`workcenter_uuid` = #{workcenterUuid} 
			<if test="userUuid != null and userUuid != ''">
				and `user_uuid` = #{userUuid}
			</if>
		</where>
	</delete>
	
	<delete id="deleteWorkcenterUserProfileByUserUuid" parameterType="java.lang.String">
		DELETE 
		FROM
		  `process_workcenter_user_profile` 
		WHERE `user_uuid` = #{userUuid} ;
	</delete>

	<insert id="insertWorkcenter" parameterType="codedriver.framework.process.workcenter.dto.WorkcenterVo">
		REPLACE INTO `process_workcenter` (
		  `uuid`,
		  `name`,
		  `type`,
		  `sort`,
		  `condition_config`
		) 
		VALUES
		  (
		    #{uuid},
		    #{name},
		    #{type},
		    #{sort},
		    #{conditionConfig}
		  ) ;
	</insert>
	
	<insert id="insertWorkcenterAuthority">
		INSERT INTO `process_workcenter_authority` (
		  `workcenter_uuid`,
		  `type`,
		  `uuid`
		) 
		VALUES
		  (
		    #{workcenterUuid},
		    #{authorityVo.type},
		    #{authorityVo.uuid}
		  ) ;
	</insert>
	
	<insert id="insertWorkcenterThead" parameterType="codedriver.framework.process.workcenter.dto.WorkcenterTheadVo">
			INSERT INTO `process_workcenter_thead` (
			  `workcenter_uuid`,
			  `name`,
			  `sort`,
			  `type`,
			  `is_show`,
			  `width`,
			  `user_uuid`,
			  `disabled`
			) 
			VALUES
			  (
			    #{workcenterUuid},
			    #{name},
			    #{sort},
			    #{type},
			    #{isShow},
			    #{width},
			    #{userUuid},
			    0
			  ) ;
	</insert>
	
	<insert id="insertWorkcenterOwner" parameterType="java.lang.String">
		INSERT INTO `process_workcenter_owner` (`workcenter_uuid`, `user_uuid`) 
		VALUES
		(#{uuid}, #{userUuid}) ;
	</insert>
	
	<insert id="insertWorkcenterUserProfile" parameterType="codedriver.framework.process.workcenter.dto.WorkcenterUserProfileVo">
		INSERT INTO `process_workcenter_user_profile` (`user_uuid`, `config`) 
		VALUES
		(#{user_uuid}, #{config}) ;
	</insert>
	
	<update id="updateWorkcenter" parameterType="codedriver.framework.process.workcenter.dto.WorkcenterVo">
		UPDATE 
		  `process_workcenter` 
		SET
		  `name` = #{name},
		   `type` = #{type}
		WHERE `uuid` = #{uuid} ;
	</update>
	
	<update id="updateWorkcenterCondition" parameterType="codedriver.framework.process.workcenter.dto.WorkcenterVo">
		UPDATE 
		  `process_workcenter` 
		SET
		  `condition_config` = #{conditionConfig}
		WHERE `uuid` = #{uuid} ;
	</update>
	
</mapper>
