<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.framework.process.dao.mapper.workcenter.WorkcenterMapper">

	<resultMap id="workcenterMap" type="codedriver.framework.process.workcenter.dto.WorkcenterVo">
		<id column="uuid" property="uuid" />
		<result column="name" property="name" />
		<result column="owner" property="owner" />
		<result column="type" property="type" />
		<result column="support" property="support" />
		<result column="sort" property="sort" />
		<result column="condition_config" property="conditionConfig" />
		<collection property="authorityList" ofType="codedriver.framework.dto.AuthorityVo">
			<result column="authUuid" property="uuid" />
			<result column="authType" property="type" />
		</collection>
	</resultMap>

	<select id="getAuthorizedWorkcenterUuidList" resultType="java.lang.String">
		SELECT
		  DISTINCT
		  pw.`uuid`
		FROM
		  `process_workcenter` pw
		   LEFT JOIN `process_workcenter_authority` pwa ON pw.`uuid` = pwa.`workcenter_uuid`
		   LEFT JOIN `process_workcenter_owner` pwo ON pw.`uuid` = pwo.`workcenter_uuid`
		<where>
		     pw.support in ('all',#{deviceType})
		     and
		     (
                (pwa.type = 'common' AND pwa.`uuid` = 'alluser')
                <if test="userUuid != null and userUuid != ''">
                    OR	(pwa.type = 'user' AND pwa.`uuid` = #{userUuid})
                </if>
                <if test="teamUuidList != null and teamUuidList.size() > 0">
                    OR (pwa.type = 'team' AND pwa.`uuid` IN
                    <foreach collection="teamUuidList" item="teamUuid" open="(" separator=","  close=")">
                        #{teamUuid}
                    </foreach>
                        )
                </if>
                <if test="roleUuidList != null and roleUuidList.size() > 0">
                    OR (pwa.type = 'role' AND pwa.`uuid` IN
                        <foreach collection="roleUuidList" item="roleUuid" open="(" separator=","  close=")">
                            #{roleUuid}
                        </foreach>
                        )
                </if>
                <if test="userUuid != null and userUuid != ''">
                or	pwo.`user_uuid` = #{userUuid}
                </if>
            )
            <if test="isHasModifiedAuth == 1">
				or pw.`type` in ('system','factory')
			</if>
		</where>
	</select>

	<select id="getAuthorizedWorkcenterListByUuidList"  parameterType="java.util.List" resultMap="workcenterMap">
		SELECT
		  pw.`uuid`,
		  pw.`name`,
		  pw.`type`,
		  pw.`support`,
		  pw.`sort`,
		  pw.`condition_config`,
		  pwa.`type` as authType,
		  pwa.`uuid` as authUuid,
		  pwo.`user_uuid` as `owner`
		FROM
		  `process_workcenter` pw
		   LEFT JOIN `process_workcenter_authority` pwa ON pw.`uuid` = pwa.`workcenter_uuid`
		   LEFT JOIN `process_workcenter_owner` pwo ON pw.`uuid` = pwo.`workcenter_uuid`
		<where>
			<if test="uuidList != null and uuidList.size() > 0">
				 pw.`uuid` IN
				<foreach collection="uuidList" item="uuid" open="(" separator=","  close=")">
					#{uuid}
				</foreach>
			</if>
		</where>
		ORDER BY pw.type asc,pw.`sort` ASC
	</select>

	<select id="checkWorkcenterNameIsRepeat"  parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT
		 count(1)
		FROM
		 	`process_workcenter` pw
		<where>
			<if test="name != null and name != ''">
				pw.`name` = #{name}
			</if>
			<if test="uuid != null and uuid != ''">
				and uuid != #{uuid}
			</if>
		</where>
	</select>

	<select id="getWorkcenterByNameAndUuid"  parameterType="java.lang.String" resultMap="workcenterMap">
		SELECT
		  pw.`uuid`,
		  pw.`name`,
		  pw.`type`,
		  pw.`support`,
		  pw.`sort`,
		  pw.`condition_config`,
		  pwo.`user_uuid` as `owner`
		FROM
		 	`process_workcenter` pw
		 	LEFT JOIN `process_workcenter_owner` pwo ON pw.`uuid` = pwo.`workcenter_uuid`
		<where>
			<if test="name != null and name != ''">
				pw.`name` = #{name}
			</if>
			<if test="uuid != null and uuid != ''">
				and `uuid` = #{uuid}
			</if>
		</where>
	</select>

	<select id="getWorkcenterConditionConfig" resultType="java.util.HashMap">
		SELECT
		  pw.`uuid`,
		  pw.`condition_config`
		FROM
		  `process_workcenter` pw
	</select>

	<select id="getWorkcenterThead" parameterType="codedriver.framework.process.workcenter.dto.WorkcenterTheadVo" resultType="codedriver.framework.process.workcenter.dto.WorkcenterTheadVo">
		SELECT
		  `workcenter_uuid` as workcenterUuid,
		  `name`,
		  `sort`,
		  `is_show` as isShow,
		  `type`,
		  `user_uuid`  as userUuid,
		  `disabled`  as disabled
		FROM
		  `process_workcenter_thead`
		where
		   workcenter_uuid = #{workcenterUuid}
		   and user_uuid = #{userUuid}
		order by sort asc
	</select>

	<select id="getWorkcenterUserProfileByUserUuid" parameterType="java.lang.String" resultType="codedriver.framework.process.workcenter.dto.WorkcenterUserProfileVo">
		select * from `process_workcenter_user_profile`
		where `user_uuid` = #{userUuid}
	</select>

	<select id="getWorkcenterVoListByUuidList"
			parameterType="java.util.List" resultMap="workcenterMap">
		select
		`uuid` ,
		`name`,
		`sort`,
		`type`,
		`support`
		from `process_workcenter`
		where `uuid` in
		<foreach collection="uuidList" item="uuid" separator="," open="(" close=")">
			#{uuid}
		</foreach>
	</select>

	<select id="getWorkcenterAuthorityVoListByUuidList" resultType="codedriver.framework.process.workcenter.dto.WorkcenterAuthorityVo">
		select
		workcenter_uuid as workcenterUuid,
		`uuid`,
		`type`
		from `process_workcenter_authority`
		where `workcenter_uuid` in
		<foreach collection="uuidList" item="uuid" open="(" separator="," close=")">
			#{uuid}
		</foreach>
	</select>

	<delete id="deleteWorkcenterByUuid" parameterType="java.lang.String">
		DELETE
		FROM
		  `process_workcenter`
		WHERE `uuid` = #{workcenterUuid} ;
	</delete>

	<delete id="deleteWorkcenterAuthorityByUuid" parameterType="java.lang.String">
		DELETE
		FROM
		  `process_workcenter_authority`
		WHERE `workcenter_uuid` = #{workcenterUuid} ;
	</delete>

	<delete id="deleteWorkcenterOwnerByUuid" parameterType="java.lang.String">
		DELETE
		FROM
		  `process_workcenter_owner`
		WHERE `workcenter_uuid` = #{workcenterUuid} ;
	</delete>

	<delete id="deleteWorkcenterThead" parameterType="codedriver.framework.process.workcenter.dto.WorkcenterTheadVo">
		DELETE
		FROM
		  `process_workcenter_thead`
		<where>
			`workcenter_uuid` = #{workcenterUuid}
			<if test="userUuid != null and userUuid != ''">
				and `user_uuid` = #{userUuid}
			</if>
		</where>
	</delete>

	<delete id="deleteWorkcenterUserProfileByUserUuid" parameterType="java.lang.String">
		DELETE
		FROM
		  `process_workcenter_user_profile`
		WHERE `user_uuid` = #{userUuid} ;
	</delete>

	<insert id="insertWorkcenter" parameterType="codedriver.framework.process.workcenter.dto.WorkcenterVo">
		REPLACE INTO `process_workcenter` (
		  `uuid`,
		  `name`,
		  `type`,
		  `sort`,
		  `condition_config`,
			`support`
		)
		VALUES
		  (
		    #{uuid},
		    #{name},
		    #{type},
		    #{sort},
		    #{conditionConfig},
		    #{support}
		  ) ;
	</insert>

	<insert id="insertWorkcenterAuthority"
			parameterType="codedriver.framework.process.workcenter.dto.WorkcenterAuthorityVo">
		INSERT INTO `process_workcenter_authority` (`workcenter_uuid`, `type`,
													`uuid`)
		VALUES (#{workcenterUuid},
				#{type},
				#{uuid})
	</insert>

	<insert id="insertWorkcenterThead" parameterType="codedriver.framework.process.workcenter.dto.WorkcenterTheadVo">
			INSERT INTO `process_workcenter_thead` (
			  `workcenter_uuid`,
			  `name`,
			  `sort`,
			  `type`,
			  `is_show`,
			  `width`,
			  `user_uuid`,
			  `disabled`
			)
			VALUES
			  (
			    #{workcenterUuid},
			    #{name},
			    #{sort},
			    #{type},
			    #{isShow},
			    #{width},
			    #{userUuid},
			    0
			  ) ;
	</insert>

	<insert id="insertWorkcenterOwner" parameterType="java.lang.String">
		INSERT INTO `process_workcenter_owner` (`workcenter_uuid`, `user_uuid`)
		VALUES
		(#{uuid}, #{userUuid}) ;
	</insert>

	<insert id="insertWorkcenterUserProfile" parameterType="codedriver.framework.process.workcenter.dto.WorkcenterUserProfileVo">
		INSERT INTO `process_workcenter_user_profile` (`user_uuid`, `config`)
		VALUES
		(#{user_uuid}, #{config}) ;
	</insert>

	<update id="updateWorkcenter" parameterType="codedriver.framework.process.workcenter.dto.WorkcenterVo">
		UPDATE
		  `process_workcenter`
		SET
		<if test="name != null and name != ''">
		  `name` = #{name},
		</if>
		`type` = #{type}
		WHERE `uuid` = #{uuid} ;
	</update>

	<update id="updateWorkcenterCondition" parameterType="codedriver.framework.process.workcenter.dto.WorkcenterVo">
		UPDATE
		  `process_workcenter`
		SET
		  `condition_config` = #{conditionConfig}
		WHERE `uuid` = #{uuid} ;
	</update>

</mapper>
